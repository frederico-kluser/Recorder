{
  ".babelrc": {
    "summary": "Este arquivo de configuração Babel define presets e plugins para o ambiente de desenvolvimento de uma aplicação React. Seu propósito principal é habilitar a transformação do código fonte JSX e ES6+ para uma versão compatível com navegadores, utilizando o preset react-app, que é uma configuração padrão para projetos criados com Create React App. Além disso, integra o plugin react-hot-loader/babel para permitir hot reloading, ou seja, atualização instantânea da interface durante o desenvolvimento sem perder o estado da aplicação, melhorando a produtividade do desenvolvedor. O arquivo não contém lógica de negócio, mas configura o pipeline de build para garantir compatibilidade e experiência de desenvolvimento fluida, integrando-se ao sistema maior de build e deploy da aplicação React.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React Application Setup"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Frontend",
          "React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Development"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Preserve fast refresh functionality",
          "Ensure JSX transpilation compatibility"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "JSX"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React (via react-app preset)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Build Configuration"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Config files in root or config folder",
          "Source code in src/"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase for variables and functions",
          "PascalCase for React components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separation between config and source code",
          "Plugins isolated from presets"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with React plugin"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript optional, not explicit here"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders or *.test.js files"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "jest.mock for modules"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "CI checks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Testing",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Developer experience",
          "Fast refresh"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react-app preset",
          "react-hot-loader"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Potential incompatibility of react-hot-loader with React 18+"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Preserve hot reload functionality",
          "Code style consistency"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Document config changes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Clear and concise comments"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Opted for react-app preset for simplicity",
          "Enabled react-hot-loader for dev experience"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Static hosting",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintrc": {
    "summary": "Este arquivo de configuração define regras para o ESLint em um projeto React, estendendo o conjunto padrão de regras do 'react-app' para garantir conformidade com boas práticas específicas do ecossistema React. Além disso, declara a variável global 'chrome' como somente leitura, permitindo o uso seguro da API do Chrome sem risco de sobrescrita, o que é comum em extensões ou aplicações que interagem com o navegador. O comportamento principal é garantir qualidade e consistência do código durante o desenvolvimento, prevenindo erros comuns e facilitando a integração com ferramentas de linting e análise estática, sem alterar diretamente a lógica da aplicação.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "extends react-app",
          "globals chrome readonly"
        ]
      }
    ]
  },
  ".prettierignore": {
    "summary": "O arquivo denominado 'build' sugere uma função ou script responsável por orquestrar o processo de construção (build) de um projeto de software, focando na transformação e empacotamento dos artefatos necessários para implantação. Seu comportamento central envolve a execução de etapas automatizadas que podem incluir compilação, minificação, bundling e otimização de recursos, garantindo que o código-fonte seja convertido em uma versão pronta para produção. Essa funcionalidade é crucial para integrar diferentes módulos do sistema, aplicar regras de negócio relacionadas à entrega contínua e habilitar a disponibilização eficiente e confiável do software para os usuários finais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "build",
          "processo de construção do projeto"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "desenvolvimento de software",
          "automação de build"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "produção",
          "deploy"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "build deve gerar artefatos consistentes",
          "não quebrar pipeline de deploy"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript",
          "Node.js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack",
          "Babel"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Pipeline",
          "Modular Build Scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/",
          "build/",
          "dist/"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "separação clara entre código fonte e artefatos gerados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ unitários e integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA",
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "jest.mock",
          "fixtures"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "code review obrigatório",
          "checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "build",
          "test",
          "deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "build speed",
          "bundle size"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "cache intermediário de build"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "paralelização de tarefas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "logs padronizados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "console logs",
          "arquivos de log"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "retry automático em falhas de build"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Webpack",
          "Babel",
          "Node.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "scripts de build pouco modularizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "build lento em grandes projetos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "performance",
          "manutenibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "documentar scripts de build"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo de configuração define regras de formatação de código para um projeto JavaScript/TypeScript utilizando Prettier. Seu propósito principal é garantir consistência no estilo do código, especificando o uso de aspas simples, vírgulas finais em conformidade com o padrão ES5, largura máxima de linha de 80 caracteres, quebra automática de texto em prose e uso obrigatório de parênteses em arrow functions. Essas configurações promovem legibilidade, manutenção facilitada e padronização entre desenvolvedores, evitando divergências de estilo que podem gerar conflitos em revisões e integrações contínuas. O arquivo não altera lógica de negócio, mas impacta diretamente a qualidade e uniformidade do código fonte no ciclo de desenvolvimento.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "singleQuote: true",
          "trailingComma: es5",
          "printWidth: 80",
          "proseWrap: always",
          "arrowParens: always"
        ]
      }
    ]
  },
  "README.md": {
    "summary": "Fleury Cypress Recorder é uma extensão de navegador que automatiza a geração de scripts de teste para frameworks como Cypress, Playwright e Puppeteer a partir das interações do usuário no browser. Seu comportamento central consiste em capturar eventos de usuário como cliques, inputs de teclado, redimensionamento de janelas, scrolls e hovers, transformando essas ações em scripts limpos, comentados e prontos para uso em testes automatizados. A extensão também permite a inserção de assertivas baseadas em texto selecionado e captura de screenshots, facilitando a criação de testes funcionais robustos sem necessidade de codificação manual, integrando-se ao fluxo de desenvolvimento e testes contínuos para aumentar a produtividade e reduzir falhas em testes end-to-end.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para geração automática de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Browser Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção ativa"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e completa dos eventos do usuário",
          "Geração correta e legível dos scripts",
          "Compatibilidade com múltiplos frameworks de teste"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5",
          "Yarn",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Web Store",
          "Firefox Add-ons Marketplace",
          "GitHub Actions"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "Yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer Pattern",
          "Event-driven Architecture",
          "Modular Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte",
          "assets/ - imagens e ícones",
          "tests/ - testes E2E",
          "dist/ - builds para Chrome e Firefox"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "prefixos claros para eventos e handlers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre captura de eventos, geração de scripts e UI da extensão",
          "Módulos independentes para Chrome e Firefox"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest",
          "Playwright Test Runner"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/e2e/ para testes end-to-end",
          "tests/unit/ para testes unitários"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs de navegador",
          "Fixtures para dados de entrada"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de CI passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes unitários e E2E",
          "Lint",
          "Deploy para Chrome e Firefox"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "yarn"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "yarn run start-chrome",
          "yarn run start-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "yarn test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "yarn run build-chrome",
          "yarn run build-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "eslint src/ --ext .ts,.tsx"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "prettier --write src/"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura de eventos",
          "Uso eficiente de memória durante gravação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a gravações longas sem degradação perceptível"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs locais para debug durante desenvolvimento",
          "Relatórios de erros via CI"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "GitHub Actions para monitoramento de build e testes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Recuperação de falhas na gravação com possibilidade de reinício"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "APIs de extensão do Chrome e Firefox",
          "Frameworks de teste suportados"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com versões recentes do Chrome e Firefox"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Suporte limitado para captura de upload de arquivos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações na captura de eventos hover em alguns contextos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e legibilidade do código",
          "Cobertura de testes",
          "Manutenção da tipagem forte"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas e uso da extensão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos",
          "Uso de PRs para discussão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha por TypeScript para segurança de tipos",
          "Suporte multiplataforma (Chrome e Firefox)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store",
          "Firefox Add-ons Marketplace"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações das APIs de extensão dos navegadores",
          "Necessidade de builds separados para Chrome e Firefox"
        ]
      }
    ]
  },
  "jest.config.ts": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript utilizando Jest com o preset ts-jest, que permite a execução de testes em código TypeScript sem necessidade de compilação prévia. A configuração define o ambiente de teste como Node.js, habilita a saída detalhada (verbose) para facilitar o acompanhamento dos testes e exporta o objeto de configuração para ser consumido pelo Jest. Funcionalmente, o arquivo atua como um ponto central para padronizar e controlar o comportamento do framework de testes, garantindo que os testes sejam executados de forma consistente e integrada ao fluxo de desenvolvimento, facilitando a manutenção e a qualidade do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto TypeScript com Jest para testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Testes automatizados",
          "TypeScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução consistente dos testes",
          "Suporte a TypeScript via ts-jest",
          "Ambiente Node.js para testes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29.x",
          "ts-jest"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Object Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Configurações centralizadas em pasta de configuração (ex: /config ou raiz)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada e exportada para uso pelo Jest"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ou arquivos *.test.ts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks com Jest e ts-jest"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de CI"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Linting",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@jest/types",
          "ts-jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade entre Jest 29.x e ts-jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Conformidade com padrões de código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para configurações e testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do ts-jest para testes TypeScript"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "package.json": {
    "summary": "O projeto deploysentinel-recorder é uma extensão de navegador que automatiza a geração de scripts para testes end-to-end utilizando Cypress, Playwright e Puppeteer a partir das interações do usuário no browser. Seu comportamento central consiste em capturar eventos e ações do usuário, transformando-os em scripts automatizados que podem ser executados para testes funcionais. A extensão suporta múltiplas versões de manifestos para Chrome e Firefox, possibilitando builds e execuções específicas para cada navegador, além de integrar ferramentas modernas de desenvolvimento como React, Jest e Webpack para garantir qualidade, performance e manutenção eficiente do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "deploysentinel-recorder",
          "Extensão para geração automática de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Testes end-to-end",
          "Browsers",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Versão 0.7.1 estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Compatibilidade com manifest versions 2 e 3",
          "Geração precisa e confiável de scripts de teste",
          "Manutenção da integridade dos dados capturados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.1.5",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 17.0.1",
          "Jest 27.3.1",
          "Webpack 5.23.0",
          "Playwright 1.16.3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "yarn 1.22.22"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular",
          "Component-based UI",
          "Build scripts orchestration"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "utils/ para scripts de build e servidor",
          "build/ para artefatos gerados",
          "node_modules/ para dependências",
          "src/ presumido para código fonte React"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes React",
          "kebab-case para scripts npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre build scripts, servidor web e UI React",
          "Dependências gerenciadas via package.json"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide (implícito via eslint-config-react-app)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com plugins para React, JSX accessibility, import, flowtype"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier configurado via lint-staged para formatação automática"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc (implícito pelo uso de TypeScript e Babel)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript com tipagens estritas para React e APIs de navegador"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 27.3.1"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pastas padrão (não explicitado) com cobertura ativada"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura de código monitorada via Jest --coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Husky para hooks git",
          "Lint-staged para formatação pré-commit"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "yarn install && husky install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "MANIFEST_VERSION=3 node utils/webserver.js (Chrome)",
          "MANIFEST_VERSION=2 node utils/webserver.js (Firefox)"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "jest --coverage"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "yarn run build-chrome",
          "yarn run build-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "eslint ."
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "prettier --write ."
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance do build e runtime leve para extensão de navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Webpack",
          "Jest",
          "Playwright",
          "Husky",
          "Prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 17.x",
          "TypeScript 4.1.x",
          "Webpack 5.x",
          "Jest 27.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MANIFEST_VERSION"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/manifest2.json": {
    "summary": "Este arquivo de manifesto define uma extensão de navegador cujo propósito principal é gravar interações do usuário no navegador para gerar automaticamente scripts de teste para frameworks como Cypress, Playwright e Puppeteer. A extensão opera em segundo plano, utilizando scripts específicos para capturar eventos e interações, e integra-se diretamente com páginas web específicas, como domínios de deploysentinel.com e localhost, para injetar scripts de conteúdo que facilitam a captura dos dados necessários. A configuração de permissões amplia o escopo de atuação da extensão, permitindo acesso a abas ativas, armazenamento local, menus de contexto e navegação web, garantindo assim uma coleta abrangente e eficiente das ações do usuário para posterior geração de scripts de teste automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação de interações e geração de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "QA",
          "Browser Interaction Recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das interações do usuário",
          "Geração correta de scripts compatíveis com Cypress, Playwright e Puppeteer",
          "Segurança no acesso às permissões do navegador"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "Manifest Version 2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Browser APIs (chrome.*)",
          "Test Automation Frameworks (Cypress, Playwright, Puppeteer)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Extension Architecture (Background Script, Content Script, Browser Action)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "background/ - scripts de background",
          "content_scripts/ - scripts injetados nas páginas",
          "popup/ - interface do usuário da extensão",
          "assets/ - ícones e recursos estáticos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "nomes descritivos para scripts e arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre background scripts, content scripts e UI (popup)",
          "Comunicação via mensagens entre scripts"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6, browser, node"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.* APIs",
          "background.bundle.js",
          "bridge.bundle.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Manifest Version 2 (deprecado em breve)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Atualização para Manifest V3 necessária para compatibilidade futura"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança no uso de permissões",
          "Clareza na separação de responsabilidades entre scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas da extensão e uso dos scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, uso de inglês para termos técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter Manifest Version 2 até migração completa para V3"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Localhost (http://localhost/*)",
          "DeploySentinel (https://*.deploysentinel.com/*)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store Extension"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação a Manifest Version 2",
          "Permissões restritas pelo navegador"
        ]
      }
    ]
  },
  "src/manifest3.json": {
    "summary": "Este arquivo de manifesto define uma extensão Chrome focada em gravar interações do usuário no navegador para gerar automaticamente scripts de teste em frameworks como Cypress, Playwright e Puppeteer. A extensão opera com manifest_version 3, utilizando um service worker para background, scripts de conteúdo para injetar funcionalidades em páginas específicas e permissões amplas para manipulação de abas, armazenamento e navegação web. Seu comportamento central é capturar eventos e ações do usuário em domínios autorizados, transformando essas interações em scripts automatizados que facilitam a criação e manutenção de testes end-to-end, integrando-se com sistemas externos via conexões permitidas. A arquitetura modular e permissões configuradas garantem flexibilidade e segurança no monitoramento e geração de dados de teste, habilitando equipes de QA a acelerar a automação de testes com precisão e confiabilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação de interações e geração de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "End-to-End Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das interações do usuário",
          "Geração correta de scripts compatíveis com Cypress, Playwright e Puppeteer",
          "Segurança e privacidade dos dados capturados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES2021",
          "Manifest V3 JSON"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "https://*.deploysentinel.com"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven Architecture",
          "Modular Extension Design",
          "Service Worker Background Processing"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "background/ - service worker scripts",
          "content_scripts/ - scripts injetados nas páginas",
          "popup/ - UI da extensão",
          "assets/ - ícones e imagens"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes UI",
          "snake_case para arquivos de configuração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre background, content scripts e UI popup",
          "Comunicação via mensagens e eventos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES2021 e ambiente browser"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para JavaScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e módulos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript sem tipagem estática",
          "Possível uso futuro de TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest para testes unitários do background e scripts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ para testes unitários e integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then para testes comportamentais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do Chrome e comunicação externa"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 para comunicação externa (deploysentinel.com)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas via manifest para domínios e APIs específicas"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de interação do usuário tratados localmente, sem envio externo não autorizado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content Security Policy configurada via manifest"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Criptografia padrão do Chrome para armazenamento local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Gravação em tempo real sem impacto perceptível na navegação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixo impacto em CPU e memória do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência eficiente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas abas e sessões simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs estruturados para erros no background e content scripts"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console logs e armazenamento local para diagnóstico"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Integração com ferramentas externas via deploysentinel.com"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reinício automático do service worker e re-injeção de scripts"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "APIs do Chrome",
          "Frameworks de teste suportados"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Manifest V3 obrigatório para compatibilidade"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos internos para gravação e geração de scripts"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Aprimorar suporte a múltiplos frameworks simultaneamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações na captura de eventos em iframes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Uso intensivo de CPU em gravações longas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Completo para Manifest V3, sem migrações pendentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança das permissões",
          "Qualidade dos scripts gerados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas e uso da extensão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do Manifest V3 para maior segurança e performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST para comunicação externa"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento semântico para APIs externas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Limites impostos pelo serviço externo deploysentinel.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development (localhost)",
          "Production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Publicação via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "URLs autorizadas para comunicação externa"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do Manifest V3 e APIs do Chrome"
        ]
      }
    ]
  },
  "src/pages/Background/index.ts": {
    "summary": "Este arquivo implementa a lógica central de um sistema de gravação de interações de navegação em um ambiente de browser extension, focado em capturar eventos de navegação e ações do usuário para posterior reprodução ou análise. Ele gerencia o estado da gravação, incluindo início, progresso e término, utilizando armazenamento local do Chrome para persistência e comunicação entre abas e scripts de conteúdo. O código integra funcionalidades específicas para suportar frameworks de teste como Cypress e Playwright, habilitando a execução de scripts injetados e controle de abas, além de oferecer menus contextuais para ações de gravação avançadas. A arquitetura é orientada a eventos, reagindo a mudanças de navegação, mensagens e eventos de aba, garantindo sincronização do estado e ativação condicional de funcionalidades conforme o estado da gravação. Essa abordagem permite a captura precisa e contextualizada de fluxos de navegação e interações, facilitando a criação de testes automatizados e análise comportamental em aplicações web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Browser extension para gravação e reprodução de testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "Browser extension",
          "Web navigation recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação deve ser iniciada e finalizada corretamente",
          "Eventos de navegação devem ser capturados apenas na aba e frame corretos",
          "Scripts injetados devem ser executados somente quando a gravação estiver ativa"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "Playwright",
          "Cypress"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome WebExtensions API",
          "Cypress Test Runner",
          "Playwright Test Runner"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven",
          "Pub-Sub",
          "Modular"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common/utils - funções utilitárias",
          "storage/recording-store - gerenciamento de estado da gravação",
          "background script - lógica central de controle e eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "UPPER_SNAKE_CASE para constantes",
          "PascalCase para classes e stores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Utils para funções genéricas",
          "Storage para estado persistente",
          "Background script para controle de fluxo e eventos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, sem uso explícito no código fornecido"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline em português",
          "Sem uso explícito de JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript com tipagem parcial, uso de any em gravação"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não explícito no código, mas integração com Cypress e Playwright indica uso destes frameworks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Não presente no código analisado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente no código analisado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Gravação restrita à aba e frame corretos",
          "Verificação de tabId e frameId para ações"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e dados de navegação armazenados localmente, sem criptografia explícita"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável no contexto de extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura de eventos de navegação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência de estado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto de extensão de navegador"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw, sem tratamento centralizado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Ausente no código fornecido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.* APIs",
          "utils internos",
          "recordingStore"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/utils",
          "../storage/recording-store"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso de any em tipagem",
          "Ausência de tratamento robusto de erros"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível condição de corrida na atualização do estado",
          "Menus contextuais podem ficar desincronizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum crítico identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado",
          "Validação de IDs de abas e frames",
          "Manutenção da sincronização entre UI e estado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários explicativos em português",
          "Documentação futura para APIs internas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de armazenamento local para estado compartilhado",
          "Separação clara entre utilitários e lógica de gravação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Event-driven via Chrome extension messaging"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples para mensagens e armazenamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local",
          "Produção via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension package"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação ao ambiente de navegador Chrome",
          "Dependência da API Chrome Extensions"
        ]
      }
    ]
  },
  "src/pages/Bridge/index.ts": {
    "summary": "Este arquivo JavaScript/TypeScript implementa um mecanismo de comunicação entre uma aplicação web e uma extensão Chrome, focado em iniciar gravações de testes automatizados e responder a mensagens de ping. Ele valida a origem das mensagens recebidas para garantir que apenas mensagens provenientes de domínios confiáveis, como localhost e deploysentinel.com, sejam processadas. O código escuta eventos do tipo 'message' no objeto window para interceptar comandos específicos, como 'start-recording' e 'ping', e interage com a API chrome.runtime para enviar e receber mensagens relacionadas à gravação de testes Playwright. Essa integração permite a coordenação entre o editor de testes e o gravador, habilitando funcionalidades de automação de testes end-to-end dentro do ecossistema DeploySentinel.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel Test Recorder",
          "Automação de testes Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa da origem das mensagens",
          "Comunicação segura entre webapp e extensão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework frontend explícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension API",
          "DeploySentinel Webapp"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer Pattern",
          "Message Passing"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte",
          "background/: scripts da extensão",
          "content-scripts/: scripts injetados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código da extensão e código do webapp",
          "Comunicação via mensagens"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e JS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/",
          "tests/integration/"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome.runtime e window.postMessage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via DeploySentinel Webapp"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Validação de origem das mensagens",
          "Permissões restritas na extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs de teste",
          "Códigos de gravação"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy para mensagens"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "TLS para comunicação web"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Mensagens processadas em < 100ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na comunicação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente do navegador"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não especificado no código atual"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Possível integração com ferramentas externas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Nenhuma estratégia explícita"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.runtime API",
          "window.postMessage"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Chrome 90+"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos internos da extensão DeploySentinel"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Falta de tratamento de erros robusto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência exclusiva do Chrome"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança na validação de origem",
          "Clareza na comunicação entre módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs de mensagem"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de mensagens para integração entre webapp e extensão"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Message Passing API via postMessage e chrome.runtime"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples com propriedades source, type, code, actions"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "localhost",
          "deploysentinel.com",
          "*.deploysentinel.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store Extension"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma explícita"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Execução limitada ao ambiente do navegador Chrome"
        ]
      }
    ]
  },
  "src/pages/Common/Icon.tsx": {
    "summary": "Este componente React funcional renderiza um ícone SVG que representa um círculo com um gradiente linear e um path branco interno, fornecendo um elemento visual reutilizável para interfaces web. Ele não mantém estado nem produz efeitos colaterais, focando exclusivamente na renderização visual escalável e estilizada. O componente é exportado como padrão para fácil integração em projetos React, garantindo consistência visual e simplicidade de uso.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React Icon Component",
          "Componente de ícone SVG para interface web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Development",
          "UI Components",
          "React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual do ícone",
          "Compatibilidade com React 18+",
          "Renderização correta do SVG"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components/Icon - componente isolado para reutilização visual"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para props e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados sem dependências externas além do React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline simples, sem JSDoc explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript sem tipagem estática",
          "Possível uso futuro de TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta components/__tests__"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot testing para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas se houver"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install ou yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install",
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start",
          "yarn start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test",
          "yarn test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build",
          "yarn build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint",
          "yarn lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format",
          "yarn format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização instantânea do componente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa complexidade, foco em renderização rápida"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Componente leve e reutilizável para múltiplas instâncias"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React 18"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Performance de renderização",
          "Simplicidade do componente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima para componentes simples"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SVG para ícones para garantir escalabilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/Logo.tsx": {
    "summary": "Este arquivo define um componente React funcional chamado Logo, responsável por renderizar uma imagem SVG que representa a marca DeploySentinel. O componente importa o arquivo SVG do logo e o exibe com dimensões fixas de altura e largura automática, garantindo que o usuário não possa selecionar a imagem (userSelect: 'none'). O comportamento é simples e focado em apresentar a identidade visual da aplicação de forma consistente, sem manipulação de estado ou efeitos colaterais. A integração ocorre via importação do recurso estático e exportação padrão do componente, facilitando seu uso em outras partes da aplicação, contribuindo para a uniformidade visual e reforço da marca no frontend.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Interface para monitoramento e deploy de aplicações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "DevOps",
          "Frontend",
          "React",
          "Branding"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual da marca",
          "Performance mínima no carregamento do logo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages: componentes de tela",
          "Popup: componentes modais ou popups",
          "assets: arquivos estáticos como imagens e SVGs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para variáveis e funções",
          "snake-case para arquivos estáticos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes visuais e assets estáticos",
          "Importação relativa para recursos locais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.js com regras para React e JSX"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "PropTypes ou TypeScript (não aplicável neste arquivo)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta __specs__ ao lado do componente"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot Testing",
          "Renderização e acessibilidade"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de assets estáticos para testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização instantânea do logo"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar bundle size",
          "Carregamento rápido"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache do navegador para assets estáticos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "logo.svg"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../pages/Popup/logo.svg"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Performance",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de props e comportamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componentes funcionais para UI",
          "Importação estática de assets"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipeline"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/ScriptTypeSelect.tsx": {
    "summary": "Este componente React funcional, ScriptTypeSelect, oferece uma interface de seleção para diferentes tipos de scripts automatizados, especificamente Playwright, Puppeteer e Cypress, que são bibliotecas populares para automação de testes end-to-end. Seu comportamento central consiste em renderizar um elemento <select> estilizado que reflete o valor atual selecionado e dispara uma callback onChange ao alterar a seleção, permitindo a comunicação do estado selecionado para componentes pais. O componente é configurável via props para personalização visual (cor, tamanho da fonte) e exibição de descrições curtas, facilitando sua integração em interfaces de usuário que demandam seleção clara e controlada de tipos de script. Não mantém estado interno, funcionando como um componente controlado, e depende do tipo ScriptType importado para garantir a tipagem correta dos valores selecionados. Essa abordagem modular e declarativa habilita reutilização e consistência na escolha de tipos de script em aplicações que envolvem automação de testes, promovendo clareza e controle no fluxo de dados entre componentes.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automated Script Selector",
          "Interface para seleção de tipos de script de automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "Test Automation",
          "End-to-End Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Seleção válida de ScriptType deve ser garantida",
          "Callback onChange deve ser chamada com valor correto"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Controlled Component Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes UI reutilizáveis",
          "src/types - definições de tipos e enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes e tipos",
          "camelCase para props e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados com props para comunicação",
          "Tipos importados para garantir consistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para callbacks e tipos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na renderização UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "ScriptType enum"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types (ScriptType)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Clareza na comunicação via props",
          "Estilo e formatação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de enum para tipos de script",
          "Componente controlado para melhor integração"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/endRecording.ts": {
    "summary": "Este arquivo implementa a função assíncrona endRecording, responsável por finalizar uma sessão de gravação de ações do usuário em um ambiente de browser extension. O código recupera dados armazenados localmente relacionados à gravação atual, verifica se há ações registradas e, em caso afirmativo, persiste essa gravação no histórico utilizando um serviço dedicado. Além disso, obtém a URL da aba ativa para contextualizar a gravação, limpa o armazenamento local para preparar futuras gravações e gera um script Playwright a partir das ações capturadas, enviando-o para uma aba específica da aplicação web. O comportamento central foca na orquestração do fluxo de dados entre armazenamento local, serviços de persistência e comunicação interprocessos, garantindo a integridade e continuidade do processo de gravação e reprodução de ações automatizadas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Automation Recorder"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Browser Extension",
          "Automation",
          "Testing",
          "Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Persistência correta das gravações",
          "Integridade dos dados de ações",
          "Comunicação confiável entre abas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extensions API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Service Layer",
          "Modular Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "utils - funções utilitárias",
          "builders - geração de código",
          "storage - serviços de persistência",
          "types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para classes e tipos",
          "snake_case evitado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "utils não dependem de storage",
          "builders isolados para geração de código",
          "storage encapsula persistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para async/await, no-console warnings"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do Chrome",
          "Fixtures para dados de gravação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via Chrome Identity API"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas para acesso a abas e storage"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs das abas, dados de gravação de usuário"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy configurado na extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Criptografia em trânsito via HTTPS, armazenamento local não criptografado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Persistência e envio de mensagens em menos de 500ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de resposta priorizada sobre uso de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de localStorage para cache temporário"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto do browser extension"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Console.error para logging de erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs básicos no console, sem sistema centralizado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Nenhum monitoramento automatizado detectado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tentativa de captura de erros na persistência, sem fallback explícito"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Chrome Extensions API",
          "RecordingService",
          "genCode"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Chrome API compatível com Manifest V3"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./utils",
          "../builders",
          "../storage",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento de erros e logging insuficientes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência da API do Chrome pode causar falhas em permissões"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum gargalo crítico identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Compatível com Manifest V3, sem migrações pendentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Manutenção da integridade dos dados e tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e serviços"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Playwright para geração de scripts automatizados"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extensions Messaging API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito para mensagens"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store",
          "Manual sideload"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "CHROME_EXTENSION_ID",
          "API_KEYS (externos)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão Chrome, sem backend dedicado"
        ]
      }
    ]
  },
  "src/pages/Common/hooks.ts": {
    "summary": "Este arquivo contém hooks React customizados que gerenciam preferências do usuário e estado de gravação, utilizando localStorage e chrome.storage para persistência e sincronização. As funções principais são hooks que mantêm estados reativos para a biblioteca preferida, posição da barra, estado de gravação e configurações de timing, garantindo que as preferências sejam carregadas ao iniciar e atualizadas tanto localmente quanto em armazenamento persistente. O código integra-se com APIs de armazenamento do navegador e utiliza padrões de hooks para encapsular lógica de estado e efeitos colaterais, habilitando uma experiência de usuário consistente e sincronizada em múltiplas sessões e abas. A abordagem modular e o uso de tipos TypeScript promovem segurança e clareza na manipulação dos dados e configurações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React User Preferences and Recording State Management"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application",
          "User Preferences",
          "State Synchronization",
          "Browser Extensions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Persistência correta das preferências do usuário",
          "Sincronização consistente do estado de gravação entre abas",
          "Integridade dos dados armazenados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "localStorage (browser)",
          "chrome.storage (browser extension API)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension APIs"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Custom React Hooks",
          "Observer Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/hooks - custom hooks",
          "src/utils - utilitários para armazenamento",
          "src/types - definições de tipos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e componentes",
          "prefixo use para hooks"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre hooks, utils e tipos",
          "Dependência unidirecional dos hooks para utils e types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e hooks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/hooks para testes unitários dos hooks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de localStorage e chrome.storage APIs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (gerenciamento local de estado)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível armazenado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações assíncronas rápidas para leitura e escrita em localStorage"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na atualização de estado",
          "Minimizar leituras e escritas desnecessárias"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de estado React como cache local para dados persistidos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Gerenciamento eficiente de listas de ações para evitar crescimento excessivo"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não implementado explicitamente no código fornecido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallback para valores padrão em caso de ausência de dados"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "localStorageGet/Set",
          "chrome.storage API",
          "React"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./utils",
          "../types",
          "../types/config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de tratamento de erros nas operações assíncronas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível inconsistência em sincronização multi-aba sem lock"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Crescimento potencial da lista de ações armazenadas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado, uso correto de hooks, tipagem segura"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de hooks e efeitos colaterais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de hooks para encapsular lógica de estado e persistência"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (uso de APIs de armazenamento do navegador)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável para este módulo específico"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência do ambiente de navegador com suporte a chrome.storage"
        ]
      }
    ]
  },
  "src/pages/Common/utils.ts": {
    "summary": "Este arquivo de código é um módulo utilitário para gerenciamento de estado e operações relacionadas à gravação de sessões em extensões de navegador, utilizando APIs do Chrome e compatibilidade com o namespace browser para manifest v2 e v3. Ele oferece funções para iniciar e finalizar gravações, armazenar preferências do usuário, criar abas, executar scripts em contextos específicos de abas e frames, além de identificar e interagir com ambientes de teste Cypress. O código manipula armazenamento local para persistência de dados, controla o estado da gravação e facilita a execução de scripts de limpeza, garantindo integração fluida com o ciclo de vida da extensão e a interface do navegador. A abordagem híbrida para execução de scripts e acesso à API demonstra preocupação com compatibilidade e robustez em diferentes versões do manifest, enquanto o uso de promises e async/await assegura operações assíncronas controladas e confiáveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Recording Extension",
          "Extensão para gravação e controle de sessões em navegador"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Browser Extensions",
          "Automated Testing",
          "Cypress Integration"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Estado de gravação deve ser consistente",
          "Scripts devem ser executados apenas em frames autorizados",
          "Identificador de instalação deve ser único e persistente"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES2020"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "WebExtensions API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Browser API",
          "Mozilla Browser API (compatibilidade)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Adapter Pattern",
          "Modular Functional Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/utils - funções utilitárias para armazenamento e execução de scripts",
          "src/background - controle do estado da extensão e comunicação com abas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e interfaces",
          "prefixo set para funções que alteram estado"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre manipulação de armazenamento, execução de scripts e controle de abas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e JavaScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para espaçamento e aspas simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com checagem de tipos explícita"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários das funções utilitárias"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de APIs chrome e browser usando jest-mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método explícito, depende do contexto da extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Execução de scripts restrita a abas e frames autorizados"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Identificadores únicos armazenados localmente, sem dados pessoais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Gerenciados pelo navegador, não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia explícita no código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações assíncronas rápidas para não bloquear UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na execução de scripts e armazenamento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto da extensão e navegador"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados como Exceptions padrão em promises"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente no código fornecido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Rejeição de promises para tratamento externo"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome API",
          "browser API para compatibilidade"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Manifest v2 APIs em processo de migração"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com manifest v2 e v3"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos utilitários internos para armazenamento e execução"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Migração completa para manifest v3",
          "Tratamento de erros mais robusto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível falha silenciosa em execução de scripts sem catch"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Latência na comunicação com APIs do navegador"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Suporte híbrido entre manifest v2 e v3 implementado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado",
          "Tratamento de erros",
          "Compatibilidade entre APIs"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara em JSDoc para funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Adapter Pattern para compatibilidade entre APIs"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extensions API",
          "WebExtensions API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Compatibilidade com manifest v2 e v3"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises e callbacks padrão do Chrome API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local",
          "Produção em navegador Chrome"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Distribuição via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão do navegador"
        ]
      }
    ]
  },
  "src/pages/Content/ActionList.tsx": {
    "summary": "Este arquivo React implementa um componente funcional que exibe uma lista de ações automatizadas de interação com a interface de usuário, como cliques, hovers, inputs, redimensionamentos e outras operações típicas de testes end-to-end. O componente ActionList filtra e renderiza sequencialmente ações suportadas, enquanto o ActionListItem traduz cada ação em uma descrição textual detalhada, utilizando seletores otimizados para Playwright quando necessário. O código foca em apresentar de forma clara e legível o passo a passo das ações, facilitando a compreensão e revisão de scripts automatizados, integrando-se a um sistema maior de geração e execução de scripts de teste ou automação de UI. A abordagem modular e o uso de tipos garantem robustez e extensibilidade para suportar múltiplos tipos de ações e cenários de interação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "UI Automation Script Renderer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "End-to-End Testing",
          "Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Ações devem ser exibidas na ordem correta",
          "Somente ações suportadas devem ser renderizadas",
          "Seletores devem ser precisos para garantir identificação correta dos elementos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Playwright (via ScriptType integration)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Declarative UI"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "types/ - definições de tipos e enums",
          "builders/ - funções auxiliares para construção de seletores",
          "components/ - componentes React reutilizáveis",
          "styles/ - arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "UPPER_SNAKE_CASE para enums e constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, builders e componentes",
          "Componentes React isolados da lógica de seleção"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para funções auxiliares e tipos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Password inputs são mascarados na exibição"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Clareza e legibilidade da UI priorizadas sobre performance extrema"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Playwright selectors",
          "Type definitions"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types",
          "../builders/selector"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na renderização condicional",
          "Uso correto de tipos",
          "Manutenção da ordem das ações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar novos tipos de ações e componentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de seletores Playwright para maior precisão",
          "Filtragem de ações suportadas para evitar erros"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/CodeGen.tsx": {
    "summary": "Este componente React denominado CodeGen tem como propósito principal renderizar um bloco de código JavaScript formatado e estilizado, gerado dinamicamente a partir de um conjunto de ações (actions) e um tipo de biblioteca (library). Utilizando a biblioteca react-syntax-highlighter com o tema vscDarkPlus, ele transforma dados de entrada (actions) em código fonte legível e destacado, facilitando a visualização e análise do código gerado. O componente é altamente configurável, permitindo a customização de estilos CSS inline, e integra-se a um sistema maior onde a geração de código é abstraída pela função genCode, promovendo reutilização e modularidade. Seu comportamento é puramente funcional e declarativo, sem efeitos colaterais ou estado interno, focado em apresentar o resultado da transformação de dados para o usuário final ou para etapas subsequentes do fluxo de desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Code Generation UI",
          "Visualização e geração dinâmica de código"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Automação de geração de código",
          "Developer Tools"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Geração correta e precisa do código",
          "Manter integridade do código gerado",
          "Renderização fiel do código para análise"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Separation of Concerns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - UI components",
          "src/builders - lógica de geração de código",
          "src/types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "Arquivos com extensão .tsx para componentes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (components) e lógica de negócio (builders)",
          "Tipos compartilhados via pasta types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para React/TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders próximos aos componentes",
          "Testes unitários para builders e componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de funções genCode para isolar testes UI"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida",
          "Baixa latência na geração de código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react-syntax-highlighter",
          "genCode function"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=4.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../builders",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e legibilidade do código",
          "Cobertura de testes",
          "Consistência com padrões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e componentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos",
          "PRs com descrição detalhada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação clara entre geração e apresentação de código",
          "Uso de react-syntax-highlighter para UI"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/ControlBar.tsx": {
    "summary": "Este arquivo React implementa um componente ControlBar que atua como uma interface de gravação e visualização de ações do usuário em uma aplicação web, focado em automação de testes. Ele captura eventos de interação do usuário, como cliques, inputs, navegação e screenshots, armazenando-os como ações estruturadas que podem ser exibidas em formato de código ou lista de ações. O componente gerencia estados complexos para controlar o fluxo da gravação, exibição de ações, seleção de bibliotecas de teste (ex: Playwright, Cypress) e posicionamento da barra de controle, além de integrar-se com módulos auxiliares para geração de seletores e código automatizado. A interface também oferece feedback visual, como destaque de elementos DOM e confirmações de cópia e captura de tela, garantindo uma experiência interativa e responsiva para o usuário final. A arquitetura modular e o uso de hooks customizados facilitam a manutenção e extensão do componente dentro de um sistema maior de gravação e geração de scripts de teste automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "UI Test Recorder",
          "Automated Test Script Generator"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automated Testing",
          "Web Automation",
          "Quality Assurance"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production",
          "Stable Release"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Accurate capture of user actions",
          "Secure handling of sensitive inputs",
          "Reliable code generation for multiple test frameworks"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Storage API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Observer Pattern",
          "Hook-based State Management"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/components - UI components",
          "/builders - selector and code generation logic",
          "/Common - shared hooks and utilities",
          "/types - TypeScript type definitions"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase for components",
          "camelCase for functions and variables",
          "UPPER_SNAKE_CASE for enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "UI components separated from business logic",
          "Builders isolated for selector and code generation",
          "Common utilities shared across modules"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with React plugin",
          "TypeScript strict mode enabled"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier with default settings"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc for functions and components"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript typing"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders colocated com componentes",
          "Test files com extensão .test.tsx"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura de código"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs externas e módulos de gravação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (foco em gravação local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Inputs de senha são mascarados na exibição"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Atualização da UI com throttling para eventos de mouse (100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade da interface",
          "Minimizar impacto de listeners"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Componentização para facilitar extensão e manutenção"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não explícito no código analisado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não explícito no código analisado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não explícito no código analisado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Listeners removidos corretamente para evitar leaks"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Recorder",
          "Selector builders",
          "React",
          "Chrome Storage API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./recorder",
          "./Highlighter",
          "./ActionList",
          "./CodeGen",
          "../builders"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Gerenciamento complexo de estado pode crescer com novas features"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de APIs específicas do navegador pode limitar portabilidade"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Eventos de mouse frequentes mitigados por throttling"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento detectada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Uso correto de hooks",
          "Performance e acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para componentes e funções complexas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de enums para tipos de ação e modos",
          "Throttling para otimização de eventos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (UI local)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker (provável), CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não explícito no código analisado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de APIs do navegador para armazenamento e eventos"
        ]
      }
    ]
  },
  "src/pages/Content/Highlighter.tsx": {
    "summary": "Este arquivo React implementa um componente funcional chamado Highlighter, cuja finalidade principal é destacar visualmente uma área retangular na interface do usuário, utilizando as dimensões e posição fornecidas via props do tipo DOMRect. O componente também exibe um rótulo textual associado ao seletor CSS que está sendo destacado, posicionando-o logo abaixo da área destacada. O comportamento central consiste em renderizar dois elementos div com estilos inline baseados nas propriedades do retângulo, além de injetar estilos CSS importados para garantir a aparência correta do destaque. Não há manipulação de estado interno nem efeitos colaterais complexos, o que torna o componente previsível e fácil de integrar em sistemas maiores que necessitem de visualização dinâmica de seletores ou áreas específicas na tela. A integração com o sistema maior ocorre via props, permitindo que o componente seja reutilizado em diferentes contextos onde seja necessário evidenciar visualmente elementos DOM. Essa capacidade habilita usuários e desenvolvedores a identificar rapidamente áreas de interesse na interface, facilitando depuração, inspeção visual ou interações baseadas em seletores CSS.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Highlighter Component",
          "Visualização e destaque de seletores CSS em UI React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Development",
          "UI Debugging",
          "CSS Selector Highlighting"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão no posicionamento do destaque",
          "Renderização consistente do rótulo",
          "Não interferir na interação do usuário"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Functional Components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components/Highlighter - componente visual e estilização associada"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para props e variáveis",
          "kebab-case para IDs CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Isolamento do componente Highlighter com importação explícita de estilos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folder ao lado do componente"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para props e estilos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida",
          "Baixa complexidade computacional"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "Highlighter.css"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Highlighter.css (estilos locais)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de memoização para evitar re-renderizações desnecessárias"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de estilos externos pode causar falhas visuais"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na tipagem",
          "Consistência visual",
          "Ausência de efeitos colaterais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de props e comportamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componente funcional para simplicidade e performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/index.tsx": {
    "summary": "Este arquivo implementa um componente React que injeta uma interface de controle (ControlBar) em um shadow DOM anexado dinamicamente ao body do documento, garantindo isolamento visual e funcional. Ele gerencia o estado global via propriedades no objeto window para evitar múltiplas instâncias e expõe uma função de limpeza (cleanUp) para desmontar o componente e liberar recursos, com suporte específico para Firefox via exportFunction. O código integra estilos CSS externos e manipula diretamente o DOM para criar um ambiente encapsulado, facilitando testes e controle de ciclo de vida do componente, além de garantir interoperabilidade entre contextos de execução do navegador.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Interface de controle para monitoramento e testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web UI Testing",
          "Browser Extensions",
          "Shadow DOM"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir única instância ativa do script",
          "Permitir limpeza completa do componente para evitar vazamentos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x",
          "ReactDOM"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Component-based UI",
          "Shadow DOM encapsulation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "./ControlBar - componente React principal",
          "../Common - estilos compartilhados",
          "root - script de bootstrap e injeção"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "snake_case para variáveis globais no window"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (ControlBar) e bootstrap script",
          "Isolamento via shadow DOM para evitar poluição global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e interfaces"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do navegador e funções globais"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto no DOM principal",
          "Isolamento via shadow DOM para performance UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Evitar múltiplas instâncias para reduzir uso de memória"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Função cleanUp para desmontar e liberar recursos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "ReactDOM",
          "FontAwesome",
          "Shadow DOM API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./ControlBar",
          "../Common/styles.css"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros e fallback para browsers sem exportFunction"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível incompatibilidade com browsers não suportados",
          "Tipagem TypeScript ignorada em shadowRoot"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de uso correto do cleanUp",
          "Garantia de não múltiplas instâncias"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções globais e integração com Firefox"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de shadow DOM para isolamento",
          "Exposição global para controle externo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Static hosting",
          "Browser extension injection"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de APIs específicas do navegador",
          "Limitação a ambientes que suportem shadow DOM"
        ]
      }
    ]
  },
  "src/pages/Content/recorder.ts": {
    "summary": "Este arquivo implementa um componente Recorder que captura e registra interações do usuário na interface web, como cliques, entradas de teclado, redimensionamentos, eventos de arrastar e soltar, rolagem e ações de contexto. Ele mantém um histórico dessas ações armazenado localmente via chrome.storage, permitindo a persistência e sincronização entre diferentes contextos da aplicação. O código filtra eventos irrelevantes ou duplicados, gera seletores para os elementos-alvo e atualiza ações existentes para otimizar o registro, suportando funcionalidades típicas de gravação de sessões para automação de testes ou análise comportamental. A integração com mensagens do background e o uso de debounce para eventos de resize indicam preocupação com performance e coordenação em ambiente SPA. A arquitetura modular e o uso de tipagem TypeScript garantem robustez e clareza na manipulação dos dados de eventos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "User Interaction Recorder",
          "Gravação de ações para automação e análise"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Web UI",
          "User Behavior Analytics"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com suporte a SPA"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não registrar eventos de campos password",
          "Evitar duplicação de eventos",
          "Persistência consistente no armazenamento local"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework front-end explícito (vanilla JS/TS)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extensions API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer",
          "Singleton",
          "Debounce"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "builders/selector: geração de seletores",
          "Common/utils: utilitários gerais",
          "types: definições de tipos e enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "snake_case para arquivos não TSX",
          "Enums em PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre captura de eventos, geração de seletores e armazenamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para evitar any, prefer const, e evitar side effects"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas e métodos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita para eventos e ações"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários localizados em __tests__ próximos aos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para módulos críticos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then para testes comportamentais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para eventos DOM e APIs do Chrome"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente (foco em captura de eventos)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Campos password não devem ser registrados"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Dados armazenados localmente, recomendação de criptografia externa"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Eventos processados em tempo real com debounce para resize"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto na UI, evitar duplicação de eventos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência e sincronização"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a aplicações SPA e múltiplos contextos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não explícito, erros tratados via controle de fluxo interno"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado, possível extensão futura"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reinicialização do estado local e sincronização via storage events"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "lodash.debounce",
          "chrome.storage.local",
          "chrome.runtime"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "lodash.debounce versão compatível com ES modules"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../builders/selector",
          "../Common/utils",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tipagem any, otimizar armazenamento local"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível perda de eventos em alta frequência",
          "Sincronização assíncrona pode causar inconsistências momentâneas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Eventos de input e wheel podem gerar alta carga"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na tipagem",
          "Evitar side effects",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções públicas e fluxos complexos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de debounce para resize",
          "Filtragem de eventos irrelevantes para performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (módulo interno de captura)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Dev, Staging, Production via Chrome Extension"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store, manual sideload"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente Chrome Extension, armazenamento local limitado"
        ]
      }
    ]
  },
  "src/pages/CypressTrigger/index.tsx": {
    "summary": "Este arquivo implementa um componente React chamado TriggerButton que gerencia o estado de gravação de testes automatizados utilizando a biblioteca Cypress. O código injeta dinamicamente este botão na interface do usuário do Spec Runner do Cypress, permitindo iniciar e encerrar gravações de testes via mensagens enviadas para a extensão do Chrome. Ele utiliza hooks personalizados para definir a biblioteca preferida como Cypress e para monitorar o estado atual da gravação, além de implementar uma função retrySelector para garantir a montagem do botão somente após a disponibilidade dos elementos DOM necessários. O comportamento central é controlar o fluxo de gravação de testes, integrando-se com a extensão do navegador e prevenindo múltiplas montagens do componente, garantindo uma experiência de usuário consistente e responsiva durante a criação de testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel Cypress Test Recorder",
          "Ferramenta para gravação de testes automatizados com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "Quality Assurance",
          "Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que apenas uma gravação esteja ativa por vez",
          "Não montar múltiplos botões no DOM",
          "Comunicação correta com a extensão Chrome"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x",
          "FontAwesome SVG Core"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension Messaging API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hook Pattern",
          "Shadow DOM encapsulation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common: componentes e hooks reutilizáveis",
          "types: definições de tipos TypeScript",
          "styles: CSS modularizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e componentes",
          "PascalCase para componentes React",
          "kebab-case para classes CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (TriggerButton) e lógica de gravação (hooks, endRecording)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para projetos React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com checagem completa"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ao lado dos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes UI e hooks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "Mocking de hooks e APIs do Chrome"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome.runtime.sendMessage e document.querySelector"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via Chrome Extension permissions"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas para comunicação entre extensão e UI"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Cabeçalhos padrão do Chrome Extension"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Comunicação segura via mensagens internas do Chrome"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Interação do botão deve ser instantânea (<100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência e mínimo impacto na UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Nenhuma estratégia de cache implementada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto da extensão e UI do Cypress"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw new Error com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs mínimos, foco em erros críticos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento via ferramentas da extensão Chrome"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry para seleção de elementos DOM com limite de tentativas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Chrome Extension Messaging API",
          "FontAwesome"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/Icon",
          "../Common/hooks",
          "../Common/endRecording",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Correção de bug de múltipla montagem no Firefox"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível falha na localização de elementos DOM em ambientes customizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Polling para retrySelector pode impactar performance se maxRetries alto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de hooks, tratamento de estado e mensagens Chrome"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para hooks e componentes React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Shadow DOM para encapsulamento do botão na UI"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extension Messaging API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito para mensagens"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Mensagens simples sem payload complexo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Nenhuma limitação explícita implementada"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension via Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma variável sensível exposta no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão Chrome e compatibilidade com browsers"
        ]
      }
    ]
  },
  "src/pages/Popup/Popup.tsx": {
    "summary": "Este arquivo implementa um componente React que funciona como uma interface de usuário para gravação, visualização e gerenciamento de scripts de teste automatizados baseados em ações do usuário no navegador. Ele permite iniciar e finalizar gravações de testes, alternar entre visualização de código gerado e lista de ações, além de navegar pelo histórico e detalhes das gravações. O componente gerencia estados complexos relacionados à aba ativa, preferências do usuário para bibliotecas de teste (como Cypress, Playwright, Puppeteer), e integra-se com APIs do navegador para executar scripts e manipular armazenamento local, garantindo uma experiência fluida para criação e revisão de testes automatizados. A arquitetura modular e o uso de hooks customizados facilitam a manutenção e extensão do sistema, enquanto a interface oferece feedback visual e controles para copiar código e alternar modos de visualização, promovendo produtividade e controle para testadores e desenvolvedores.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Test Recorder",
          "Ferramenta para gravação e geração de scripts de teste automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "QA",
          "Test Automation",
          "Browser Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com funcionalidades completas de gravação e histórico"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade dos dados de gravação",
          "Não permitir gravação sem aba ativa",
          "Manter sincronização entre estado da aba e gravação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18",
          "FontAwesome React",
          "React CopyToClipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "LocalStorage (via recordingStore)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension APIs (tabs, storage)",
          "Analytics (onPageView, onNewRecording)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hooks for state management",
          "Modular separation of concerns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common (shared utilities and hooks)",
          "Content (core content components)",
          "Storage (state persistence)",
          "Components (UI parts)",
          "Types (TypeScript types)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase for components",
          "camelCase for functions and variables",
          "Uppercase enums",
          "Descriptive file names matching component or utility"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "UI components separated from business logic",
          "Hooks encapsulate stateful logic",
          "Storage isolated in dedicated modules",
          "Utilities abstract browser API interactions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adapted for TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with TypeScript plugin",
          "Rules enforcing no unused vars, consistent returns, and strict typing"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier with default settings",
          "2 spaces indentation"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc style comments for functions and components"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript settings enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Tests colocados em pastas __tests__ próximas aos componentes",
          "Testes unitários e de integração para hooks e componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes críticos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Mocking de APIs do navegador"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para Chrome Extension APIs",
          "Fixtures para gravações simuladas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test stages automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método explícito no código (depende do contexto do navegador)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle implícito via permissões da extensão e contexto da aba"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de gravação de testes armazenados localmente, sem exposição externa"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente (extensão de navegador)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia explícita no código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Interação UI responsiva, sem atrasos perceptíveis"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e fluidez da interface priorizadas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de armazenamento local para persistência de gravações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto do navegador e volume de gravações locais"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados como Exceptions JavaScript padrão"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso mínimo de logs, foco em erros críticos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Analytics customizados para eventos de gravação"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallbacks simples, como reset de estado e mensagens ao usuário"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Chrome Extension APIs",
          "FontAwesome",
          "react-copy-to-clipboard"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Common",
          "Content",
          "Storage",
          "Types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Gerenciamento complexo de estado entre múltiplas abas e gravações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de APIs do navegador que podem variar entre versões"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Renderização de listas grandes de ações pode impactar UI"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração de dados antigos para novo formato de gravação implementada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado, tratamento de erros, performance UI"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para hooks e componentes principais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de React hooks para estado, separação clara entre UI e lógica"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Nenhuma API REST ou similar exposta diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension packaging and publishing"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum variável sensível exposta no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão do navegador, APIs restritas"
        ]
      }
    ]
  },
  "src/pages/Popup/analytics.ts": {
    "summary": "Este arquivo implementa funcionalidades para o envio de dados de telemetria ao Google Analytics, focando em eventos de visualização de página e início de gravações. Utiliza chamadas assíncronas via fetch para enviar parâmetros formatados em URLSearchParams, garantindo anonimato do usuário por meio de um identificador de instalação gerado externamente. O código é projetado para operar silenciosamente, com tratamento de erros que evita impacto na experiência do usuário. Sua integração permite monitorar o comportamento do usuário e eventos específicos, fornecendo dados analíticos essenciais para otimização e tomada de decisão em produtos digitais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Analytics Event Tracker",
          "Monitoramento de eventos para análise de uso"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Analytics",
          "Digital Product Monitoring",
          "Google Analytics"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir anonimato do usuário",
          "Enviar dados de eventos sem impactar UX",
          "Manter integridade dos dados enviados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework específico detectado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Google Analytics Measurement Protocol API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização funcional",
          "Separation of Concerns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common/utils para funções utilitárias",
          "Módulo de analytics separado para eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "Constantes em maiúsculas com underscore"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo analytics isolado, dependente apenas de utils externos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline simples, sem JSDoc explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não detectado no código fornecido"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Client ID anonimamente gerado, sem dados pessoais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na coleta de eventos, mínimo impacto no UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Tratamento silencioso, sem propagação de erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Try/catch para evitar falhas visíveis ao usuário"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "getRandomInstallId",
          "Google Analytics API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/utils"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de logging e feedback de erro"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Modo no-cors limita detecção de falhas na requisição"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros silencioso",
          "Uso correto de async/await",
          "Manutenção da anonimidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários simples e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Google Analytics para coleta de eventos",
          "Identificador anônimo para client ID"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "HTTP POST via fetch para Google Analytics Measurement Protocol"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/index.jsx": {
    "summary": "Este arquivo React tem como objetivo principal renderizar um componente Popup dentro de um container DOM específico, aplicando estilos CSS importados de múltiplas fontes, incluindo estilos comuns, específicos do índice e da biblioteca FontAwesome. O código utiliza a API de renderização do ReactDOM para injetar o componente na página, garantindo que os estilos sejam aplicados globalmente via uma tag <style> embutida. Além disso, suporta hot module replacement (HMR) para atualização dinâmica durante o desenvolvimento, melhorando a experiência do desenvolvedor. Funcionalmente, o arquivo atua como ponto de entrada para a interface de usuário, integrando componentes e estilos para garantir uma apresentação consistente e responsiva no navegador.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React Popup Renderer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Web Development",
          "UI Component Rendering"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Development"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Renderizar Popup corretamente no container designado",
          "Aplicar estilos globais sem conflito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "FontAwesome CDN (via package)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hot Module Replacement"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "./Popup (component)",
          "./index.css (local styles)",
          "../Common/styles.css (shared styles)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para variáveis e funções",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes e estilos",
          "Dependência unidirecional do componente Popup para estilos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "PropTypes para validação básica (não presente no código atual)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta __specs__"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para componentes filhos e estilos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos via CI"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy stages"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          ""
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar re-renders",
          "Evitar injeção excessiva de estilos inline"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          ""
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          ""
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "react-dom",
          "@fortawesome/fontawesome-svg-core"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./Popup"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de tratamento de erros na renderização"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível impacto de performance por estilos inline"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Injeção de múltiplos estilos inline pode afetar renderização"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          ""
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estilos",
          "Uso correto de HMR",
          "Clareza na renderização do componente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar componentes React com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de HMR para acelerar desenvolvimento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          ""
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Webpack Dev Server com HMR"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ""
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          ""
        ]
      }
    ]
  },
  "src/pages/builders/finder.ts": {
    "summary": "Este arquivo implementa uma função para gerar seletores CSS únicos e otimizados para elementos DOM, facilitando a identificação precisa de elementos em uma árvore HTML. Utilizando uma abordagem bottom-up, o código constrói caminhos de seletores combinando IDs, classes, atributos, tags e pseudo-classes como :nth-child, aplicando penalidades para priorizar seletores mais específicos e eficientes. O algoritmo realiza buscas iterativas e otimizações para garantir unicidade do seletor no contexto do documento raiz, suportando configurações customizáveis para balancear precisão, desempenho e legibilidade do seletor gerado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "@medv/finder",
          "CSS Selector Generator"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "DOM Manipulation",
          "CSS Selectors"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gerar seletores únicos e válidos",
          "Manter performance aceitável",
          "Evitar seletores ambíguos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum (biblioteca standalone)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Functional",
          "Generator Pattern",
          "Bottom-up Search"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte principal",
          "test/ - testes unitários",
          "dist/ - build final"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre funções utilitárias, lógica de busca e otimização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (noImplicitAny, strictNullChecks)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "test/unit para testes unitários",
          "test/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para DOM APIs e querySelectorAll"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Testes",
          "Build",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (biblioteca client-side)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não manipula dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Resposta em milissegundos para seletores simples",
          "Limite configurável para tentativas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Balancear velocidade e seletor curto/legível"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Nenhum cache persistente implementado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Pode degradar em documentos muito grandes devido à combinatória"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementa logging interno"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallbacks em busca de seletores alternativos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "DOM API do navegador"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatível com navegadores modernos suportando querySelectorAll"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Otimização limitada para seletores muito complexos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Performance pode cair em documentos com muitos elementos similares"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Geração combinatória de seletores e múltiplas validações querySelectorAll"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Estável, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na lógica de busca",
          "Cobertura de testes",
          "Performance"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e opções de configuração"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de penalidades para ordenar seletores",
          "Fallbacks para garantir unicidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Função exportada como default, API funcional simples"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento interno, gerenciado via npm"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "String contendo seletor CSS válido"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Ambiente browser, qualquer DOM compatível"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Distribuído via npm como biblioteca JavaScript"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de ambiente DOM e suporte a querySelectorAll"
        ]
      }
    ]
  },
  "src/pages/builders/index.ts": {
    "summary": "Este arquivo implementa um sistema de geração de scripts automatizados para testes de interface web, suportando múltiplos frameworks como Playwright, Puppeteer e Cypress. Ele abstrai ações do usuário (click, hover, input, keydown, etc.) em uma estrutura orientada a objetos, permitindo a transformação dessas ações em código executável específico para cada framework. O código gerencia estados das ações, sincronização temporal entre eventos e a geração de descrições legíveis para facilitar a compreensão e manutenção dos scripts gerados, promovendo automação eficiente e reutilizável de testes end-to-end.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Gerador de scripts automatizados para testes UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Testes end-to-end",
          "Web UI Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção ativa"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gerar scripts válidos para múltiplos frameworks",
          "Manter sincronização temporal correta entre ações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Playwright",
          "Puppeteer",
          "Cypress"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Factory Method",
          "Template Method",
          "Strategy"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/actions - definição de ações e tipos",
          "src/builders - implementações específicas de geração de scripts",
          "src/utils - funções utilitárias"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Constantes em MAIÚSCULAS_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, builders e utilitários",
          "Dependência unidirecional dos builders para ActionContext e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão",
          "Quebra de linha em 80-100 caracteres"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com checagem completa"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários para builders e utilitários em /tests/unit",
          "Testes de integração para geração de scripts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas e funções utilitárias"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre legibilidade do código gerado e performance de execução"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Lançamento de erros padrão JavaScript para tipos não suportados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@playwright/test",
          "puppeteer",
          "cypress"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./selector",
          "../types",
          "../types/config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Implementação incompleta do dragAndDrop no Cypress"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Exposição do objeto action diretamente em ActionContext (comentário FIXME)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estilo",
          "Cobertura de testes",
          "Clareza das abstrações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para métodos públicos e classes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários explicativos em inglês e português",
          "Uso de FIXME para pontos a melhorar"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de classes abstratas para definir contratos de geração de scripts",
          "Separação por framework via subclasses"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/builders/selector.ts": {
    "summary": "Este arquivo de código é responsável por gerar seletores CSS e outros tipos de seletores para elementos HTML, facilitando a identificação precisa de elementos na automação de testes e interações programáticas. Ele analisa atributos específicos, como id, href, data-testid, aria-label, entre outros, para construir seletores robustos e confiáveis, evitando o uso de ids inválidos e priorizando seletores que garantam maior estabilidade e legibilidade. Além disso, o código define uma função que, dado um tipo de ação (click, input, hover, etc.) e o contexto da biblioteca de automação (ex: Playwright), seleciona o melhor seletor para executar a ação, otimizando a interação com a interface e garantindo maior precisão e manutenção dos scripts de teste ou automação. O comportamento do código é focado em extrair e priorizar seletores úteis para diferentes tipos de elementos e ações, integrando-se com um módulo externo de busca de seletores e respeitando regras específicas para evitar seletores frágeis ou inválidos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Selector Generator for UI Automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "UI Testing",
          "Web Automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não usar IDs inválidos para seletores",
          "Priorizar seletores estáveis para evitar falhas em testes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework frontend específico (módulo utilitário)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo diretamente integrado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Factory Pattern",
          "Strategy Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types (tipos e enums)",
          "src/utils ou src/selectors (funções utilitárias para geração de seletores)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e variáveis",
          "PascalCase para tipos e enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, funções utilitárias e integração com finder externo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript/TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários JSDoc mínimos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta tests correlata"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de módulos externos e fixtures para elementos HTML"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não manipula dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência para geração de seletores"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e robustez na geração de seletores"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao uso em testes UI"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Try-catch silencioso para evitar falhas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não há logging explícito"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallback para null em caso de erro"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "finder module",
          "types definitions"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript versão compatível com ES6+"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types",
          "./finder"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento silencioso de erros pode dificultar debugging"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Seletores podem não ser únicos em apps com ids não confiáveis"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Geração de seletores em DOMs muito grandes pode ser lenta"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Robustez na geração de seletores",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar critérios de seleção de atributos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Evitar uso de id quando inválido",
          "Priorizar testIdSelector para testes"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (módulo utilitário)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON com seletores e texto"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker, CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma variável sensível diretamente usada"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Execução em ambiente Node.js compatível"
        ]
      }
    ]
  },
  "src/pages/declarations.d.ts": {
    "summary": "Este arquivo de declaração TypeScript (.d.ts) tem como principal função permitir a importação de arquivos estáticos com extensões .css e .svg dentro de um projeto TypeScript, garantindo a tipagem correta e evitando erros de compilação. Ele declara módulos para esses tipos de arquivos, especificando que arquivos .css podem ser importados sem tipagem explícita, enquanto arquivos .svg exportam uma string representando seu conteúdo. Essa abordagem facilita a integração de assets estáticos no fluxo de desenvolvimento, suportando bundlers e ferramentas modernas, e assegura que o código mantenha a consistência e previsibilidade na manipulação desses recursos. O arquivo não realiza transformações de dados nem altera estados, mas atua como um facilitador para o sistema maior, habilitando a interoperabilidade entre código TypeScript e recursos estáticos, o que é essencial para projetos front-end modernos que utilizam CSS Modules e SVGs inline.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Front-end com suporte a importação de assets estáticos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento front-end",
          "TypeScript",
          "Assets estáticos",
          "CSS Modules",
          "SVG inline"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Importação correta e tipada de arquivos estáticos para evitar erros de build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2 (implícito)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização via declaração de módulos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/assets para arquivos estáticos",
          "src/types para declarações de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Extensões de arquivos mantidas (.css, .svg)",
          "Declarações em arquivos .d.ts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código TypeScript e assets estáticos via módulos declarados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para importação de módulos estáticos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para declarações de tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29 (implícito para front-end)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta tests"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocking de módulos estáticos via Jest mocks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build time efficiency",
          "Minimal runtime overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript compiler",
          "Module bundler (Webpack, Vite)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=4.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Importação correta de assets"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para tipos e módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de declarações de módulos para assets estáticos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/global.d.ts": {
    "summary": "Este arquivo contém uma simples aliasação do objeto global de browser para o namespace do Chrome, especificamente para uso com Firefox. O código visa garantir compatibilidade e interoperabilidade entre APIs de extensão de navegador, permitindo que funcionalidades originalmente desenvolvidas para Chrome possam ser reutilizadas em Firefox sem alterações significativas. A abordagem facilita a manutenção e portabilidade do código, reduzindo a necessidade de múltiplas implementações para diferentes browsers. Apesar da simplicidade, essa técnica é fundamental para projetos que visam suporte multiplataforma em extensões web, garantindo que chamadas à API do navegador sejam uniformes e previsíveis, melhorando a experiência do desenvolvedor e a robustez do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Extension Compatibility Layer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "browser extensions",
          "cross-browser compatibility"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que chamadas à API do navegador sejam compatíveis entre Chrome e Firefox"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension API",
          "Firefox WebExtension API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Alias Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "types/: definições de tipos",
          "dist/: build final"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre módulos de compatibilidade e lógica de negócio"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e compatibilidade ES6"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do navegador"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Diferenças entre APIs Chrome e Firefox podem causar incompatibilidades"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Compatibilidade cross-browser",
          "Clareza e simplicidade do código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar alias e limitações de compatibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de alias para compatibilidade entre Chrome e Firefox"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "WebExtension API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "WebExtension packaging"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações das APIs suportadas por cada navegador"
        ]
      }
    ]
  },
  "src/pages/types/index.ts": {
    "summary": "Este arquivo define um conjunto estruturado de enums e classes TypeScript que modelam ações de interação com interfaces web para automação de testes e captura de eventos. Ele categoriza tipos de ações como cliques, inputs, navegação, redimensionamento e screenshots, além de associar metadados relevantes como seletores, timestamps e propriedades específicas de cada ação. O código habilita a representação tipada e extensível de eventos de usuário e comandos de automação, facilitando a criação, validação e manipulação de fluxos de teste automatizados em frameworks como Puppeteer, Playwright e Cypress. A arquitetura orientada a objetos e o uso de enums garantem consistência e escalabilidade na definição e uso dessas ações dentro de sistemas maiores de automação e monitoramento de UI.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Web Automation Actions Modeling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "UI Interaction",
          "Web Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Ações devem ser tipadas e validadas para evitar execuções inválidas",
          "Manter integridade dos dados de interação para rastreabilidade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Puppeteer",
          "Playwright",
          "Cypress"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Browsers headless control APIs via Puppeteer/Playwright/Cypress"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Object-Oriented Programming",
          "Enum-based State Modeling"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/actions - definição das ações e tipos",
          "src/utils - funções utilitárias (TODO)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e enums",
          "camelCase para propriedades e funções"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos de ações e utilitários",
          "Classes específicas para cada ActionType"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para classes e métodos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de classes e enums"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para simular eventos e seletores"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "isPassword flag para tratamento de dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura e execução de ações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Extensibilidade para novos tipos de ações"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript",
          "Puppeteer",
          "Playwright",
          "Cypress"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "TODO para mover função utilitária para utils"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Cobertura de testes",
          "Clareza na modelagem de ações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar classes e enums com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de enums para garantir valores válidos",
          "Separação clara entre tipos de ações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript define as opções do compilador para um projeto que utiliza React com suporte a JSX, visando compatibilidade com ES5 e bibliotecas modernas como DOM e ESNext. Ele habilita verificações estritas de tipo e consistência, garantindo qualidade e segurança no código, além de configurar resolução de módulos no estilo Node.js e interoperabilidade com módulos ES. A configuração exclui diretórios de build e dependências externas para otimizar o processo de compilação, suportando um fluxo de desenvolvimento robusto e escalável em um ambiente front-end moderno.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto React com TypeScript para front-end moderno"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento front-end",
          "React",
          "TypeScript",
          "Web applications"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento ativo"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir tipagem estrita para evitar erros em runtime",
          "Manter compatibilidade com ES5 para browsers legados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular",
          "Component-based"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "build (artefatos compilados)",
          "node_modules (dependências externas)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes React e classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e build",
          "Resolução de módulos via Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "skipLibCheck:true para ignorar checagem de libs externas",
          "strict:true para checagem rigorosa"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript e React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "strict TypeScript com exceção para strictPropertyInitialization:false"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build rápido e eficiente",
          "Compatibilidade com browsers legados"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript",
          "React",
          "Node.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "target ES5",
          "module ESNext"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Conformidade com padrões TS e React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação inline com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de strict mode para evitar erros em produção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/build.js": {
    "summary": "Este arquivo de código configura o ambiente para uma build de produção utilizando Webpack, definindo variáveis de ambiente essenciais como BABEL_ENV, NODE_ENV e ASSET_PATH para garantir que o processo de build seja executado no modo correto. Ele importa a configuração do Webpack, ajusta o modo para 'production' e remove uma propriedade específica relacionada a extensões Chrome para evitar conflitos. O script executa o processo de build, capturando e exibindo erros e avisos detalhados no console, além de imprimir um resumo colorido e simplificado do status da compilação. Funcionalmente, o código automatiza a geração do bundle otimizado para produção, integrando-se ao fluxo de desenvolvimento para garantir que o output esteja pronto para deploy, com feedback claro sobre falhas e advertências, facilitando a manutenção e a qualidade do build final.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Webpack Production Build Script"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento Frontend",
          "Build Automation",
          "JavaScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Build deve ser executado em modo produção",
          "Erros de build devem ser reportados e impedir deploy"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 16+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Build Pipeline Script"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do Webpack",
          "scripts/ - scripts de build e automação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração (webpack.config.js) e execução (build script)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6+"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Build deve passar sem erros"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build automatizado via CI",
          "Deploy condicionado a build sem erros"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "node scripts/build.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build otimizado para produção com minificação e tree shaking"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de cache via Webpack para builds incrementais"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs detalhados no console com stack trace e detalhes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console.error para erros, console.warn para avisos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Abortar build em caso de erro crítico"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "webpack",
          "webpack.config.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "webpack >=5.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "config/webpack.config.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de erros de build e warnings",
          "Conformidade com padrão de código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima para scripts de build"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Remoção de chromeExtensionBoilerplate para evitar conflito em builds de produção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "CI/CD pipeline com deploy automatizado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "BABEL_ENV",
          "NODE_ENV",
          "ASSET_PATH"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/env.js": {
    "summary": "Este módulo exporta um objeto simples que encapsula variáveis de ambiente essenciais para a configuração de uma aplicação Node.js, fornecendo valores padrão para NODE_ENV e PORT caso não estejam definidos no ambiente. Seu comportamento principal é garantir que a aplicação tenha parâmetros básicos de execução, como o ambiente de execução (development, production, etc.) e a porta de escuta, facilitando a configuração e inicialização do servidor. Essa abordagem promove flexibilidade e robustez na configuração, permitindo que o sistema se adapte automaticamente a diferentes contextos de implantação sem necessidade de alterações no código-fonte.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Configuração de ambiente para aplicação Node.js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Configuração de software",
          "Node.js environment management"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Desenvolvimento inicial"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "NODE_ENV deve sempre estar definido",
          "PORT deve ser um número válido"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 18+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Module Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração centralizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Variáveis em UPPER_SNAKE_CASE para env vars",
          "Módulos em camelCase ou kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo isolado para configuração, sem dependências externas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "process.env (Node.js)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/webserver.js": {
    "summary": "Este arquivo configura e inicializa um ambiente de desenvolvimento para uma aplicação web utilizando Webpack e WebpackDevServer, focado em hot module replacement (HMR) para acelerar o ciclo de desenvolvimento. Ele ajusta variáveis de ambiente para modo development, modifica as entradas do Webpack para incluir clientes de hot reload, adiciona o plugin de HMR e cria um servidor de desenvolvimento que serve os arquivos estáticos, aceita conexões CORS e escreve os arquivos no disco. O código também suporta recarregamento automático de módulos durante o desenvolvimento, facilitando a produtividade e testes rápidos sem reiniciar o servidor manualmente. Essa configuração é típica para projetos que demandam feedback instantâneo em mudanças de código, especialmente em extensões Chrome ou aplicações web modernas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Chrome Extension Boilerplate",
          "Development Environment Setup"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Chrome Extensions",
          "Frontend Tooling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Development",
          "Local Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Hot Module Replacement must be enabled for dev mode",
          "Dev server must serve assets with CORS headers"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 16+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5",
          "WebpackDevServer 4"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Configuration",
          "Middleware Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do Webpack e ambiente",
          "build/ - saída dos arquivos compilados",
          "src/ - código fonte da aplicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e plugins",
          "kebab-case para arquivos e pastas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração (config) e execução (server)",
          "Dependência unidirecional do servidor para configuração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6+, node environment"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e módulos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ localizados paralelamente ao código fonte"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para Webpack e WebpackDevServer APIs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy Staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "node scripts/start.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado neste arquivo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Nenhuma regra de autorização aplicada"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Access-Control-Allow-Origin: *"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia aplicada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência para hot reload e rebuild incremental"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de feedback em desenvolvimento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Webpack caching padrão para builds incrementais"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente local de desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Nenhum formato de erro customizado implementado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs padrão do Webpack e WebpackDevServer"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Nenhuma ferramenta de monitoramento integrada"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Hot Module Replacement para recuperação rápida de erros em desenvolvimento"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "webpack",
          "webpack-dev-server",
          "path",
          "env"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Webpack 5 e Node.js 16+"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./env",
          "../webpack.config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Configuração hardcoded para localhost e porta fixa"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Desabilitação de host check pode causar riscos de segurança"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum gargalo crítico identificado em ambiente local"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de configuração correta do HMR e variáveis de ambiente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para configuração do ambiente de desenvolvimento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de HotModuleReplacementPlugin para acelerar desenvolvimento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Nenhuma API exposta diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development (localhost:PORT)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Local Node.js server"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "BABEL_ENV=development",
          "NODE_ENV=development",
          "ASSET_PATH=/",
          "PORT (definido em ./env)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessita Node.js ambiente local, porta disponível para servidor"
        ]
      }
    ]
  },
  "webpack.config.js": {
    "summary": "Este arquivo configura o Webpack para um projeto de extensão Chrome, definindo entradas múltiplas para diferentes scripts (popup, background, contentScript, bridge, cypressTrigger) e gerenciando a compilação, otimização e empacotamento dos recursos. Ele integra plugins para limpeza do diretório de build, cópia de arquivos estáticos, geração de HTML e minificação de código, além de configurar aliases e loaders para suportar múltiplas linguagens e tipos de arquivos. O comportamento adaptativo entre ambientes de desenvolvimento e produção garante builds otimizados e suporte a debugging, habilitando um fluxo de desenvolvimento eficiente e entrega de artefatos prontos para deploy em extensões Chrome.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Chrome Extension Boilerplate"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Browser Extension",
          "Web Development",
          "Frontend"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production Ready"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manifest version consistency",
          "Environment variable integrity",
          "Asset path correctness"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "TypeScript 4.x",
          "JSX"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Node.js environment",
          "Chrome APIs"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Architecture",
          "Plugin Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/pages - Contém scripts específicos da extensão (Popup, Background, Content, Bridge, CypressTrigger)",
          "src/assets - Recursos estáticos como imagens",
          "build - Diretório de saída para arquivos compilados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para arquivos e pastas",
          "Extensões indicam linguagem (.jsx, .tsx, .ts)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre scripts de extensão e assets",
          "Uso de aliases para módulos secretos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide (implícito pelo uso de Babel e Webpack)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não explicitado no código fornecido"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Não explicitado no código fornecido"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline mínimos, sem padrão explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode presumido"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "webpack --mode development --watch"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "webpack --mode production"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (extensão Chrome)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável diretamente no build"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Arquivo secrets.{env}.js para dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável no contexto do build"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável no contexto do build"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minificação com TerserPlugin, desabilitação de mangling para debugging"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache desabilitado para popup.html para garantir atualização"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Configuração modular para suportar múltiplos scripts e assets"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Verbose logging na limpeza do build"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "webpack",
          "clean-webpack-plugin",
          "copy-webpack-plugin",
          "html-webpack-plugin",
          "terser-webpack-plugin"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./utils/env",
          "secrets.{env}.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Configuração extensa pode dificultar manutenção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível vazamento de secrets se não gerenciado corretamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Minificação desabilita mangling para facilitar debugging, impactando tamanho final"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Configuração correta de aliases e loaders",
          "Segurança no uso de secrets"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima inline, foco em configuração clara"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários sucintos e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de TerserPlugin sem mangling para facilitar debugging em produção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Manifest version via variável de ambiente MANIFEST_VERSION"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Build via Webpack para extensão Chrome"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "ASSET_PATH",
          "MANIFEST_VERSION",
          "npm_package_version"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Compatibilidade com Chrome Extension Manifest v3"
        ]
      }
    ]
  },
  ".gitignore": {
    "summary": "Este arquivo é um .gitignore configurado para um projeto de software que utiliza Node.js e tecnologias relacionadas. Ele define padrões para ignorar diretórios e arquivos que não devem ser versionados, como dependências instaladas (node_modules), artefatos de build (/build), relatórios de cobertura de testes (/coverage), arquivos de configuração local (.env.*), arquivos temporários e logs, além de diretórios específicos para armazenamento de dados sensíveis e arquivos gerados por ferramentas de desenvolvimento. O comportamento principal é garantir que apenas arquivos relevantes para o desenvolvimento e produção sejam versionados, evitando o comprometimento da segurança, a poluição do repositório e problemas de performance no controle de versão. A configuração também inclui exclusões específicas para diretórios personalizados (.prompts/, .logs/, .audios/) que indicam armazenamento de dados auxiliares ou temporários, reforçando a organização e segurança do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js com controle de versionamento otimizado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "Controle de versão"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não versionar arquivos de dependências",
          "Não expor arquivos de configuração sensíveis",
          "Manter repositório limpo e organizado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript",
          "Node.js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          ".gitignore pattern segmentation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/node_modules para dependências",
          "/coverage para relatórios de teste",
          "/build para artefatos de produção",
          ".prompts, .logs, .audios para dados auxiliares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos .env para configurações locais",
          "secrets.*.js para arquivos sensíveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e artefatos gerados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "/coverage para relatórios de teste"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install",
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Arquivos .env locais",
          "secrets.*.js"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "node_modules",
          "secrets.*.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ".env.local",
          ".env.development.local",
          ".env.test.local",
          ".env.production.local"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/migration.ts": {
    "summary": "Este arquivo contém funções utilitárias para garantir a integridade temporal de objetos do tipo Action, focando na migração e validação de timestamps. A função migrateActionsTimestamp adiciona timestamps baseados em Date.now() para ações que não possuem ou possuem timestamps inválidos, aplicando um incremento de 100ms entre cada ação para simular intervalos naturais. Já a função validateActionTimestamps corrige timestamps negativos, inválidos ou desordenados, garantindo uma sequência temporal coerente e emitindo alertas via console para inconsistências detectadas. Essas operações são essenciais para manter a consistência temporal dos dados de ações, facilitando o processamento correto em sistemas que dependem de ordenação cronológica, como logs, eventos ou auditorias. O código é escrito em TypeScript, utiliza tipagem estática e segue boas práticas de imutabilidade e transformação funcional de arrays, integrando-se a um sistema maior que manipula ações com propriedades temporais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Timestamp Migration and Validation Utility"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software Development",
          "Event Processing",
          "Action Logging"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "All actions must have valid, non-negative, and sequential timestamps"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Functional Programming",
          "Modular Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos",
          "src/utils - funções utilitárias para manipulação de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e funções utilitárias",
          "Dependência unidirecional de tipos para funções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/utils - testes unitários para funções utilitárias"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90% cobertura para funções críticas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para Date.now() para controle de tempo em testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar latência na validação e migração de timestamps"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Operações em arrays grandes devem ser eficientes e imutáveis"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso de console.warn para alertas de timestamps inválidos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Correção automática de timestamps inválidos e negativos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Type definitions from '../types'"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >= 4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso incorreto de 'number.isFinite' ao invés de 'Number.isFinite'"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência do relógio do sistema pode causar inconsistências"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Função migrateActionsTimestamp implementada e em uso"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tipos e imutabilidade",
          "Cobertura de testes para casos de timestamp"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Uso consistente de JSDoc para funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação entre migração e validação de timestamps para clareza e manutenção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/types/config.ts": {
    "summary": "Este arquivo define uma interface TypeScript para configuração de funcionalidades relacionadas a timing, especificamente para controle de waits baseados em timestamps. Ele permite habilitar ou desabilitar waits, além de configurar tempos mínimos e máximos de espera em milissegundos, com valores padrão estabelecidos. A configuração é essencial para modularizar e parametrizar comportamentos temporais em sistemas que dependem de delays controlados, garantindo flexibilidade e controle sobre o fluxo de execução assíncrona ou temporizada.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Object Pattern"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      }
    ]
  },
  "tests/builders.test.ts": {
    "summary": "Este arquivo contém um conjunto abrangente de testes unitários para três classes construtoras de scripts de automação de testes end-to-end: CypressScriptBuilder, PlaywrightScriptBuilder e PuppeteerScriptBuilder. Cada builder encapsula a geração de código para interações comuns em testes de UI, como cliques, navegação, preenchimento de campos, redimensionamento de viewport, captura de screenshots e espera por elementos ou textos. O código foca em validar que cada método do builder produz as chamadas corretas às APIs específicas de cada framework de automação, garantindo que as ações sejam corretamente traduzidas em comandos de teste. Além disso, o arquivo testa utilitários auxiliares como a função truncateText, assegurando seu comportamento esperado. A estrutura dos testes utiliza mocks para isolar comportamentos e verificar chamadas internas, promovendo alta confiabilidade e manutenção facilitada. Este conjunto é fundamental para garantir a geração correta e consistente de scripts automatizados, suportando a integração com ferramentas de gravação e reprodução de testes UI, e assegurando a qualidade e robustez do sistema de geração de scripts.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Gerador de scripts de automação de testes UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Testes end-to-end",
          "UI Testing",
          "Test Script Generation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Testes unitários e validação de funcionalidades"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Geração correta e sintaticamente válida dos scripts para cada framework",
          "Manter compatibilidade com APIs dos frameworks Cypress, Playwright e Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Builder Pattern",
          "Test-Driven Development (TDD)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/pages/builders - Contém classes builder para geração de scripts",
          "tests - Contém testes unitários para validação dos builders"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Prefixo 'test' para funções de teste"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Builders isolados em módulo próprio",
          "Testes separados e independentes",
          "Mocks para isolar dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any sem justificativa"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de métodos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita sempre que possível"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes organizados por describe blocks por builder",
          "Testes unitários focados em métodos individuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura completa dos métodos públicos dos builders"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "Uso de mocks para isolar dependências"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Jest spyOn para interceptar chamadas internas",
          "Mock implementations para métodos assíncronos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes passando",
          "Checks de lint e build"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes unitários",
          "Linting",
          "Build e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance na geração de scripts para evitar latência em gravação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Cypress",
          "Playwright",
          "Puppeteer",
          "Jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../src/pages/builders"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Clareza e legibilidade do código",
          "Uso correto de mocks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para métodos públicos dos builders"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos",
          "Uso de inglês para termos técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do Builder Pattern para geração de scripts",
          "Separação clara entre frameworks de automação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/extension.test.ts": {
    "summary": "Este arquivo de código implementa testes automatizados para uma extensão de navegador baseada em Playwright, focando na validação do comportamento funcional da extensão durante sessões de gravação de interações do usuário. Ele gerencia o ciclo de vida do browser context com extensão carregada, aguarda a ativação dos service workers da extensão e executa testes que simulam ações típicas do usuário, como navegação, preenchimento de campos, cliques e captura de screenshots. Além disso, verifica se a extensão gera corretamente o código Playwright correspondente às ações gravadas, garantindo a integridade do fluxo de gravação e reprodução. O código utiliza Jest para estruturação dos testes e Playwright para automação do browser, promovendo uma integração robusta entre testes end-to-end e a extensão, com foco em confiabilidade e cobertura funcional detalhada.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação e geração de scripts Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "Browser Extension"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Testes automatizados integrados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das ações do usuário",
          "Geração correta do código Playwright",
          "Validação da instalação da extensão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES2020"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Playwright 1.x",
          "Jest 29"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension APIs",
          "Playwright Browser Automation"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Test Automation Pattern",
          "Page Object Pattern (implicit)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/tests - testes automatizados",
          "/build - extensão compilada",
          "/tmp - dados temporários para browser context"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "testes nomeados com descrições claras"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre testes e código da extensão",
          "Uso de imports explícitos para Playwright e Jest"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide (implícito)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "eslint com regras padrão para TypeScript e JavaScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc básicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "Playwright Test Runner"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes organizados em blocos beforeAll, afterAll e test",
          "Testes end-to-end focados em fluxo da extensão"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura focada em funcionalidades críticas da extensão"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Behavior Driven Development (BDD) style"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Uso mínimo de mocks, testes end-to-end reais com browser context"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes automatizados passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Build da extensão",
          "Deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test",
          "jest"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (extensão local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso via permissões da extensão Chrome"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados do usuário armazenados localmente no userDataDir"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Cabeçalhos padrão da extensão Chrome"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Timeouts de 15 segundos para testes",
          "Timeouts de 5 segundos para service workers"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Confiabilidade e precisão sobre velocidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache do browser controlado pelo Chromium"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente local de testes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via Exceptions padrão do JavaScript"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs implícitos via Jest e Playwright"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável em ambiente de teste local"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Rejeição de promises em timeout, encerramento limpo do browser context"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "playwright",
          "jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "playwright >=1.20.0",
          "jest >=29.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros em waitForServiceWorkers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Timeouts eventuais na ativação dos service workers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Espera ativa com setInterval pode ser otimizada"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza nos testes",
          "Cobertura de fluxo crítico",
          "Manutenção da legibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima inline, foco em testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Playwright para testes end-to-end da extensão"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extension API",
          "Playwright API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito no código de teste"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises JavaScript"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Local development",
          "Test environment"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Extensão Chrome carregada localmente",
          "Playwright executando Chromium headful"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de ambiente com Chromium instalado",
          "Permissões para carregar extensões locais"
        ]
      }
    ]
  },
  "src/pages/Common/styles.css": {
    "summary": "Este arquivo CSS define um conjunto de estilos utilitários e componentes visuais focados em botões e layout flexível para interfaces web. Ele implementa classes para botões primários com variações sólidas e outline, incluindo efeitos de hover para melhorar a experiência do usuário. Além disso, oferece utilitários para manipulação de flexbox, espaçamentos (padding e margin), tamanhos, alinhamentos e estilos tipográficos, facilitando a construção rápida e consistente de layouts responsivos. O código prioriza usabilidade, acessibilidade e consistência visual, habilitando desenvolvedores a aplicar estilos reutilizáveis e padronizados em projetos front-end, promovendo manutenção simplificada e escalabilidade do design system.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "UI Design System",
          "Biblioteca de estilos para componentes e utilitários CSS"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Front-end Development",
          "Web Interfaces",
          "Design System"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual",
          "Acessibilidade",
          "Responsividade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework CSS explícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Atomic CSS",
          "Component-Based CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "styles/components - componentes reutilizáveis",
          "styles/utilities - classes utilitárias para layout e espaçamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like para componentes (.btn-primary)",
          "abreviações para utilitários (.p-1, .m-4)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes visuais e utilitários CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS padrão com comentários explicativos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação consistente, uso de comentários para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline para propriedades específicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance otimizada via CSS puro e transições leves"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Facilidade de extensão com novas classes utilitárias e componentes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/RecordingDetail.tsx": {
    "summary": "O componente RecordingDetail é uma interface React que exibe detalhes de uma gravação de ações automatizadas, permitindo ao usuário alternar entre a visualização das ações gravadas e o código gerado para diferentes bibliotecas de automação (Cypress, Playwright, Puppeteer). Ele gerencia estados internos para o modo de visualização e feedback de cópia para clipboard, além de formatar datas e apresentar metadados da gravação como título, data, número de ações e hostname. O componente integra-se com módulos externos para renderização da lista de ações e geração de código, suportando seleção dinâmica da biblioteca de script, facilitando a análise e reutilização do conteúdo gravado em diferentes contextos de automação de testes. Essa funcionalidade habilita usuários a revisar, copiar e adaptar scripts automatizados de forma eficiente, promovendo maior produtividade e flexibilidade no processo de QA automatizado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording Automation UI",
          "Interface para visualização e manipulação de gravações de ações automatizadas"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "QA Automation",
          "Test Script Generation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade dos dados da gravação",
          "Precisão na geração de código para múltiplas bibliotecas",
          "Feedback claro para ações do usuário"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "FontAwesome Icons",
          "Clipboard API via react-copy-to-clipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Functional Components with Hooks"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - Tipos TypeScript",
          "src/Content - Componentes reutilizáveis (ActionList, CodeGen)",
          "src/components - Componentes de UI específicos",
          "src/styles - Arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "PascalCase para interfaces e tipos",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, componentes de UI e lógica de apresentação",
          "Dependência unidirecional de tipos para componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para React/TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas e componentes filhos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade da UI",
          "Minimização de re-renderizações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console logs para eventos importantes (ex: cópia de código)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "FontAwesome",
          "react-copy-to-clipboard"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types",
          "../../Content"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e legibilidade do código",
          "Uso correto de tipos",
          "Feedback visual para interações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos",
          "Uso de emojis para logs de debug"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de React Functional Components com hooks",
          "Suporte a múltiplas bibliotecas de automação via enum"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/RecordingHistory.tsx": {
    "summary": "O componente RecordingHistory é uma interface React que gerencia e exibe um histórico de gravações, permitindo aos usuários visualizar, buscar, selecionar, exportar e excluir registros de gravações. Ele integra funcionalidades de filtragem dinâmica por termos de busca, ordenação customizável das colunas e seleção múltipla para operações em lote, como exportação. O componente mantém estados internos para controle de carregamento, seleção e ordenação, além de interagir com um serviço externo RecordingService para persistência e manipulação dos dados. A interface é construída com a biblioteca TanStack Table para renderização eficiente e flexível da tabela, e utiliza ícones FontAwesome para melhorar a usabilidade e a experiência visual. O componente também implementa formatações específicas para datas e durações, facilitando a compreensão dos dados pelo usuário final, e inclui confirmações para ações destrutivas, garantindo segurança na manipulação das gravações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History Management System"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application",
          "User Session Recording",
          "Playback and Analysis"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não permitir exclusão sem confirmação explícita",
          "Integridade dos dados durante exportação",
          "Atualização consistente do estado após operações CRUD"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2",
          "TanStack Table 8.x",
          "FontAwesome React 0.2.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "RecordingService (local storage or backend API)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Service Layer Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/: UI components",
          "storage/: data persistence services",
          "types/: TypeScript type definitions",
          "styles/: CSS files"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase for components",
          "camelCase for functions and variables",
          "kebab-case for CSS classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "UI components depend on types and services",
          "Services encapsulate data access",
          "No circular dependencies"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adapted for TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with TypeScript plugin, rules for no unused vars, consistent return, strict typing"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier with 2 spaces indentation, single quotes, trailing commas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc style comments for components and functions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript mode enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders adjacent to components",
          "unit and integration tests"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock RecordingService methods with Jest mocks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "Passing CI checks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Unit tests",
          "Build",
          "Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não especificado no componente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Confirmação explícita para exclusão de gravações"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados das gravações (URLs, títulos) tratados localmente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável no componente UI"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável no componente UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Carregamento rápido das gravações para boa UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de renderização da tabela e filtragem"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache local via RecordingService (não detalhado)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a grandes listas via virtualização não implementada"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs no console para erros de carregamento, exclusão e exportação"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console logs com emojis para status e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Recarregamento da lista após exclusão",
          "Fallback para estado vazio"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "RecordingService",
          "React",
          "TanStack Table",
          "FontAwesome"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TanStack Table 8.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types/recording",
          "../../storage/recording-service"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de virtualização para tabelas grandes",
          "Tratamento básico de erros"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível lentidão com grandes volumes de dados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Filtragem e renderização client-side sem otimizações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na manipulação de estado",
          "Tratamento de erros",
          "Aderência a padrões React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Uso de emojis em logs para facilitar leitura"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de TanStack Table para flexibilidade e performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável - componente UI"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON para exportação de gravações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Staging",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Containerized React app (Docker) or static hosting"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não especificados no componente"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Requer conexão para acesso ao RecordingService"
        ]
      }
    ]
  },
  "src/pages/Popup/index.css": {
    "summary": "Este arquivo CSS define estilos básicos para o elemento body, configurando dimensões fixas, fontes e propriedades visuais para garantir uma experiência consistente e legível em diferentes contextos de visualização. O código ajusta o layout para páginas específicas, como histórico e detalhes, ampliando a largura e altura e mantendo a rolagem vertical para acomodar conteúdos maiores. A estilização prioriza usabilidade e estética, utilizando fontes modernas e técnicas de suavização para melhorar a renderização do texto, além de aplicar um fundo escuro que favorece interfaces com temas dark, contribuindo para a identidade visual e usabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Interface Web para visualização de histórico e detalhes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web UI",
          "Frontend",
          "User Interface",
          "Dark Theme"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "Estabilização de UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter legibilidade e usabilidade em diferentes views",
          "Garantir scroll vertical para conteúdos extensos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Google Fonts (Roboto)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular CSS com classes condicionais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos base em arquivos CSS globais",
          "Estilos específicos aplicados via classes no body"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes CSS descritivas (ex: history-view, detail-view)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos base e estilos para views específicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS padrão, sem framework específico"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários em português explicativos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Legibilidade e fluidez na rolagem"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Roboto font",
          "Classes CSS aplicadas no body"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de responsividade para dispositivos móveis"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de classes condicionais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de largura fixa para controle de layout em views específicas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/storage/recording-service.ts": {
    "summary": "O código implementa um serviço de gravação (RecordingService) que abstrai a complexidade do armazenamento e manipulação de gravações de ações de usuário em aplicações web. Ele permite criar, listar, buscar, remover e exportar gravações, gerando automaticamente identificadores únicos baseados no hostname e timestamp, além de produzir scripts compatíveis com múltiplos frameworks de automação (Cypress, Playwright, Puppeteer). O serviço mantém a integridade dos dados ao validar entradas, gerenciar colisões de IDs e fornecer filtros por hostname e intervalo de datas, facilitando a gestão e reutilização das gravações em diferentes contextos de teste e automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "RecordingService",
          "Serviço de gerenciamento de gravações de ações para automação de testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Web Testing",
          "Recording Actions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não salvar gravações vazias",
          "IDs únicos para gravações",
          "Geração correta de código para múltiplos frameworks"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Node.js",
          "Possível uso de frameworks de teste como Jest (não explícito)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "recordingStore (abstração de storage, tipo não especificado)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Facade",
          "Static Service Class",
          "Strategy (para geração de código)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types (tipos)",
          "src/services (serviços)",
          "src/builders (geradores de código)",
          "src/store (persistência)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e métodos",
          "snake_case para IDs de gravação",
          "prefixos claros para tipos e funções"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, serviços, armazenamento e geração de código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Possível uso de Airbnb ou padrão TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Não especificado, provável uso de Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript typing"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável no código analisado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável no código analisado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não há manipulação explícita de dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Não especificado, mas operações assíncronas indicam foco em I/O não bloqueante"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Consistência e integridade dos dados priorizadas sobre otimização extrema"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Possível limitação ao filtrar gravações em memória para grandes volumes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Uso de exceções padrão para erros críticos (ex: gravação vazia)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento básico de erros (ex: URL inválida) com fallback"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "recordingStore",
          "genCode",
          "types (RecordingEntry, Action, ScriptType)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types",
          "./recording-store",
          "../builders"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de controle concorrente na geração de IDs",
          "Falta de tratamento detalhado de erros"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível lentidão em buscas com grande volume de gravações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Listagem e filtragem em memória sem paginação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de entradas",
          "Tratamento de erros",
          "Consistência na geração de IDs"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Uso consistente de JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de facade para simplificar acesso ao storage",
          "Geração de código para múltiplos frameworks"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "API interna baseada em métodos estáticos, não exposta via HTTP"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON para exportação de gravações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Não especificado"
        ]
      }
    ]
  },
  "src/pages/storage/recording-store.ts": {
    "summary": "Este arquivo implementa um store singleton para gerenciar o histórico de gravações de ações do usuário, utilizando a API chrome.storage.local para persistência local. Ele oferece funcionalidades para salvar, listar, obter, remover e limpar gravações, além de aplicar uma política de limite máximo de entradas com estratégia de poda (prune) para manter o histórico dentro de um tamanho configurável. O store também suporta migração de dados antigos para o novo formato, garantindo compatibilidade e continuidade. O uso de debounce na escrita previne operações excessivas de I/O, otimizando performance. A arquitetura segue o padrão Singleton para garantir uma única instância gerenciadora, promovendo consistência e controle centralizado do estado do histórico. O código é robusto, com tratamento de erros e logging para facilitar a manutenção e monitoramento, habilitando uma gestão eficiente e confiável do histórico de gravações em aplicações que capturam e reproduzem fluxos de ações do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History Manager",
          "Gerenciamento de histórico de gravações de ações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "User Interaction Recording",
          "Chrome Extensions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Limite máximo de gravações respeitado",
          "Integridade dos dados de gravação",
          "Migração correta de dados antigos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework front-end explícito",
          "Chrome Extensions API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Storage API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Debounce para otimização de escrita"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definições de tipos",
          "src/store - gerenciamento de estado e persistência"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para métodos e variáveis",
          "Constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, store e ações",
          "Dependência unidirecional do store para tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "TypeScript Standard Style",
          "JSDoc para documentação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos ao código"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de chrome.storage.local",
          "Fixtures para gravações"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Testes automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (armazenamento local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de gravação de ações do usuário, armazenados localmente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não implementado, armazenamento local não criptografado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações assíncronas com debounce para evitar latência perceptível"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar operações de I/O no storage",
          "Manter histórico limitado para performance"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache em memória temporário para pendências de salvamento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Limitação de entradas para evitar crescimento descontrolado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras",
          "Logs no console para diagnóstico"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console.warn para alertas",
          "Console.error para erros críticos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros com fallback para evitar falhas críticas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.storage.local",
          "Types definidos em ../types/recording"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript 4.x compatível"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types/recording",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso de 'object.entries' e 'object.fromEntries' com 'object' minúsculo pode causar erros"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível erro de digitação em chamadas a Object.entries e Object.fromEntries"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações síncronas no storage podem impactar performance sem debounce"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração da última gravação implementada e acionável"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Consistência do singleton",
          "Performance de debounce"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do padrão Singleton para gerenciamento centralizado"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (API local chrome.storage)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises com tipos definidos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Debounce para limitar frequência de escrita"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local",
          "Produção em extensão Chrome"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension package"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de armazenamento local do navegador"
        ]
      }
    ]
  },
  "src/pages/types/recording.ts": {
    "summary": "Este arquivo define tipos TypeScript para um sistema de histórico de gravações de ações realizadas em páginas web, focado em registrar, armazenar e recuperar sessões de gravação automatizadas. Ele modela entradas de gravação com metadados detalhados, incluindo timestamps, URLs, hostname e ações capturadas, além de códigos gerados para frameworks de automação como Cypress, Playwright e Puppeteer. Também especifica uma configuração para controle do tamanho do histórico e uma interface para backend que suporta operações assíncronas de salvamento, listagem, recuperação, remoção e limpeza das gravações, garantindo flexibilidade e escalabilidade na gestão do histórico. O código enfatiza a persistência e organização eficiente das gravações, habilitando funcionalidades críticas para automação de testes e análise de sessões gravadas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History System",
          "Sistema de histórico de gravações para automação de testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Web Recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade dos dados de gravação",
          "Não exceder limite máximo de entradas",
          "Garantir unicidade do ID da gravação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Node.js",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Repository Pattern",
          "Interface Segregation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/interfaces - definições de tipos e contratos",
          "src/backends - implementações de persistência",
          "src/models - modelos de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para interfaces e tipos",
          "camelCase para propriedades e métodos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, configuração e backend",
          "Dependência unidirecional do backend para tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para interfaces e propriedades"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de tipos e lógica",
          "tests/integration para backend"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para backend de persistência"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "IDs únicos das gravações",
          "URLs gravadas"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Eficiência na leitura e escrita do histórico"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Gerenciamento de limite máximo de entradas com estratégia de poda"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Pruning strategy para evitar overflow do histórico"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "./index (Action type)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "index.ts para definição de Action"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Cobertura de testes",
          "Clareza na documentação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para interfaces e métodos públicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de interface para backend para permitir múltiplas implementações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  }
}
