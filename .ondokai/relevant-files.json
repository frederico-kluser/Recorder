{
  ".babelrc": {
    "summary": "Este arquivo de configuração Babel define presets e plugins para o ambiente de desenvolvimento de uma aplicação React. Seu propósito principal é habilitar a transformação do código fonte JSX e ES6+ para uma versão compatível com navegadores, utilizando o preset react-app, que é uma configuração padrão para projetos criados com Create React App. Além disso, integra o plugin react-hot-loader/babel para permitir hot reloading, ou seja, atualização instantânea da interface durante o desenvolvimento sem perder o estado da aplicação, melhorando a produtividade do desenvolvedor. O arquivo não contém lógica de negócio, mas configura o pipeline de build para garantir compatibilidade e experiência de desenvolvimento fluida, integrando-se ao sistema maior de build e deploy da aplicação React.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React Application Setup"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Frontend",
          "React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Development"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Preserve fast refresh functionality",
          "Ensure JSX transpilation compatibility"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "JSX"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React (via react-app preset)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Build Configuration"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Config files in root or config folder",
          "Source code in src/"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase for variables and functions",
          "PascalCase for React components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separation between config and source code",
          "Plugins isolated from presets"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint with React plugin"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript optional, not explicit here"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders or *.test.js files"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Minimum 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "jest.mock for modules"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "CI checks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Testing",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Developer experience",
          "Fast refresh"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react-app preset",
          "react-hot-loader"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Potential incompatibility of react-hot-loader with React 18+"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Preserve hot reload functionality",
          "Code style consistency"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Document config changes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Clear and concise comments"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Opted for react-app preset for simplicity",
          "Enabled react-hot-loader for dev experience"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Static hosting",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".eslintrc": {
    "summary": "Este arquivo de configuração define regras para o ESLint em um projeto React, estendendo o conjunto padrão de regras do 'react-app' para garantir conformidade com boas práticas específicas do ecossistema React. Além disso, declara a variável global 'chrome' como somente leitura, permitindo o uso seguro da API do Chrome sem risco de sobrescrita, o que é comum em extensões ou aplicações que interagem com o navegador. O comportamento principal é garantir qualidade e consistência do código durante o desenvolvimento, prevenindo erros comuns e facilitando a integração com ferramentas de linting e análise estática, sem alterar diretamente a lógica da aplicação.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "extends react-app",
          "globals chrome readonly"
        ]
      }
    ]
  },
  ".prettierignore": {
    "summary": "O arquivo denominado 'build' sugere uma função ou script responsável por orquestrar o processo de construção (build) de um projeto de software, focando na transformação e empacotamento dos artefatos necessários para implantação. Seu comportamento central envolve a execução de etapas automatizadas que podem incluir compilação, minificação, bundling e otimização de recursos, garantindo que o código-fonte seja convertido em uma versão pronta para produção. Essa funcionalidade é crucial para integrar diferentes módulos do sistema, aplicar regras de negócio relacionadas à entrega contínua e habilitar a disponibilização eficiente e confiável do software para os usuários finais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "build",
          "processo de construção do projeto"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "desenvolvimento de software",
          "automação de build"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "produção",
          "deploy"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "build deve gerar artefatos consistentes",
          "não quebrar pipeline de deploy"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript",
          "Node.js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack",
          "Babel"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Pipeline",
          "Modular Build Scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/",
          "build/",
          "dist/"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "separação clara entre código fonte e artefatos gerados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ unitários e integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA",
          "Given-When-Then"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "jest.mock",
          "fixtures"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "code review obrigatório",
          "checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "build",
          "test",
          "deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "build speed",
          "bundle size"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "cache intermediário de build"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "paralelização de tarefas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "logs padronizados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "console logs",
          "arquivos de log"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "retry automático em falhas de build"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Webpack",
          "Babel",
          "Node.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "scripts de build pouco modularizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "build lento em grandes projetos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "performance",
          "manutenibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "documentar scripts de build"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  ".prettierrc": {
    "summary": "Este arquivo de configuração define regras de formatação de código para um projeto JavaScript/TypeScript utilizando Prettier. Seu propósito principal é garantir consistência no estilo do código, especificando o uso de aspas simples, vírgulas finais em conformidade com o padrão ES5, largura máxima de linha de 80 caracteres, quebra automática de texto em prose e uso obrigatório de parênteses em arrow functions. Essas configurações promovem legibilidade, manutenção facilitada e padronização entre desenvolvedores, evitando divergências de estilo que podem gerar conflitos em revisões e integrações contínuas. O arquivo não altera lógica de negócio, mas impacta diretamente a qualidade e uniformidade do código fonte no ciclo de desenvolvimento.",
    "properties": [
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "singleQuote: true",
          "trailingComma: es5",
          "printWidth: 80",
          "proseWrap: always",
          "arrowParens: always"
        ]
      }
    ]
  },
  "README.md": {
    "summary": "Fleury Cypress Recorder é uma extensão de navegador que automatiza a geração de scripts de teste para frameworks como Cypress, Playwright e Puppeteer a partir das interações do usuário no browser. Seu comportamento central consiste em capturar eventos de usuário como cliques, inputs de teclado, redimensionamento de janelas, scrolls e hovers, transformando essas ações em scripts limpos, comentados e prontos para uso em testes automatizados. A extensão também permite a inserção de assertivas baseadas em texto selecionado e captura de screenshots, facilitando a criação de testes funcionais robustos sem necessidade de codificação manual, integrando-se ao fluxo de desenvolvimento e testes contínuos para aumentar a produtividade e reduzir falhas em testes end-to-end.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para geração automática de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Browser Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção ativa"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Captura precisa e completa dos eventos do usuário",
          "Geração correta e legível dos scripts",
          "Compatibilidade com múltiplos frameworks de teste"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5",
          "Yarn",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Web Store",
          "Firefox Add-ons Marketplace",
          "GitHub Actions"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "Yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer Pattern",
          "Event-driven Architecture",
          "Modular Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte",
          "assets/ - imagens e ícones",
          "tests/ - testes E2E",
          "dist/ - builds para Chrome e Firefox"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "kebab-case para arquivos",
          "prefixos claros para eventos e handlers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre captura de eventos, geração de scripts e UI da extensão",
          "Módulos independentes para Chrome e Firefox"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any e garantir tipagem forte"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest",
          "Playwright Test Runner"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/e2e/ para testes end-to-end",
          "tests/unit/ para testes unitários"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs de navegador",
          "Fixtures para dados de entrada"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de CI passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes unitários e E2E",
          "Lint",
          "Deploy para Chrome e Firefox"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "yarn"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "yarn run start-chrome",
          "yarn run start-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "yarn test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "yarn run build-chrome",
          "yarn run build-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "eslint src/ --ext .ts,.tsx"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "prettier --write src/"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura de eventos",
          "Uso eficiente de memória durante gravação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a gravações longas sem degradação perceptível"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs locais para debug durante desenvolvimento",
          "Relatórios de erros via CI"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "GitHub Actions para monitoramento de build e testes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Recuperação de falhas na gravação com possibilidade de reinício"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "APIs de extensão do Chrome e Firefox",
          "Frameworks de teste suportados"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com versões recentes do Chrome e Firefox"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Suporte limitado para captura de upload de arquivos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações na captura de eventos hover em alguns contextos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e legibilidade do código",
          "Cobertura de testes",
          "Manutenção da tipagem forte"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas e uso da extensão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos",
          "Uso de PRs para discussão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha por TypeScript para segurança de tipos",
          "Suporte multiplataforma (Chrome e Firefox)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store",
          "Firefox Add-ons Marketplace"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações das APIs de extensão dos navegadores",
          "Necessidade de builds separados para Chrome e Firefox"
        ]
      }
    ]
  },
  "jest.config.ts": {
    "summary": "Este arquivo configura o ambiente de testes para um projeto TypeScript utilizando Jest com o preset ts-jest, que permite a execução de testes em código TypeScript sem necessidade de compilação prévia. A configuração define o ambiente de teste como Node.js, habilita a saída detalhada (verbose) para facilitar o acompanhamento dos testes e exporta o objeto de configuração para ser consumido pelo Jest. Funcionalmente, o arquivo atua como um ponto central para padronizar e controlar o comportamento do framework de testes, garantindo que os testes sejam executados de forma consistente e integrada ao fluxo de desenvolvimento, facilitando a manutenção e a qualidade do código.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto TypeScript com Jest para testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Testes automatizados",
          "TypeScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução consistente dos testes",
          "Suporte a TypeScript via ts-jest",
          "Ambiente Node.js para testes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Jest 29.x",
          "ts-jest"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Object Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Configurações centralizadas em pasta de configuração (ex: /config ou raiz)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e propriedades",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Configuração isolada e exportada para uso pelo Jest"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ou arquivos *.test.ts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks com Jest e ts-jest"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de CI"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Linting",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "@jest/types",
          "ts-jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade entre Jest 29.x e ts-jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Conformidade com padrões de código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para configurações e testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do ts-jest para testes TypeScript"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "package.json": {
    "summary": "O projeto deploysentinel-recorder é uma extensão de navegador que automatiza a geração de scripts Cypress a partir das interações do usuário no browser, facilitando a criação de testes end-to-end sem necessidade de codificação manual. Ele suporta múltiplas versões de manifest para Chrome e Firefox, integrando ferramentas modernas de desenvolvimento front-end como React e bibliotecas para manipulação de eventos e UI. O sistema inclui scripts para build, testes com Jest, linting e formatação automática, garantindo qualidade e manutenção do código. A arquitetura modular e o uso de ferramentas como Webpack e Babel indicam um pipeline robusto para desenvolvimento e empacotamento, enquanto a dependência de tipos específicos para browsers assegura compatibilidade e precisão na integração com APIs de extensão. O foco principal é melhorar a produtividade de QA e desenvolvedores ao transformar ações do usuário em scripts de teste confiáveis e reutilizáveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "deploysentinel-recorder",
          "Extensão para geração automática de scripts Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Browser Extensions",
          "Test Automation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Versão 0.7.1 estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Compatibilidade com manifest v2 e v3",
          "Geração precisa e confiável de scripts Cypress",
          "Manutenção da integridade dos scripts gerados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "TypeScript 4.1.5"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 17.0.1",
          "Jest 27.3.1",
          "Webpack 5.23.0",
          "Babel 7.12.17"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "yarn 1.22.22"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular",
          "Component-based UI",
          "Build Pipeline Orchestration via npm scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "build - arquivos empacotados",
          "utils - scripts utilitários para build e servidor",
          "node_modules - dependências",
          "src - código fonte React e lógica"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes React",
          "snake-case para scripts e arquivos zip"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e scripts de build",
          "Dependências isoladas entre devDependencies e dependencies"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide (implícito via eslint-config-react-app)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "eslint com plugins para React, JSX Accessibility, import e hooks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão via lint-staged"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript com tipagens estritas para React e APIs de browser"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 27.3.1"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pastas __tests__ e arquivos *.test.js/ts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima não especificada, mas jest --coverage configurado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks via Jest para dependências externas e APIs de browser"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado explicitamente"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado explicitamente"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Husky para hooks de pré-commit e lint-staged para formatação automática"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Testes automatizados com Jest",
          "Linting e formatação via Prettier e ESLint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "yarn install && yarn prepare"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "yarn start-chrome (para Chrome)",
          "yarn start-ff (para Firefox)"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "yarn test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "yarn build-chrome",
          "yarn build-ff"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "eslint ."
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "prettier --write ."
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance na captura e geração de scripts",
          "Minimização do bundle final"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Jest",
          "Webpack",
          "Babel",
          "Husky",
          "Prettier"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 17.x",
          "TypeScript 4.1.x",
          "Jest 27.x",
          "Webpack 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Qualidade do código",
          "Cobertura de testes",
          "Conformidade com padrões de linting"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros",
          "Uso de PRs para revisão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Suporte a manifest v2 e v3 para compatibilidade cross-browser"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Empacotamento como extensão zip para browsers"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "MANIFEST_VERSION para controle de versão do manifest"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/manifest2.json": {
    "summary": "Este arquivo de manifesto define uma extensão de navegador cujo propósito principal é gravar interações do usuário no navegador para gerar automaticamente scripts de teste para frameworks como Cypress, Playwright e Puppeteer. A extensão opera em segundo plano, utilizando scripts específicos para capturar eventos e interações, e integra-se diretamente com páginas web específicas, como domínios de deploysentinel.com e localhost, para injetar scripts de conteúdo que facilitam a captura dos dados necessários. A configuração de permissões amplia o escopo de atuação da extensão, permitindo acesso a abas ativas, armazenamento local, menus de contexto e navegação web, garantindo assim uma coleta abrangente e eficiente das ações do usuário para posterior geração de scripts de teste automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação de interações e geração de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "QA",
          "Browser Interaction Recording"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das interações do usuário",
          "Geração correta de scripts compatíveis com Cypress, Playwright e Puppeteer",
          "Segurança no acesso às permissões do navegador"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "Manifest Version 2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Browser APIs (chrome.*)",
          "Test Automation Frameworks (Cypress, Playwright, Puppeteer)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Extension Architecture (Background Script, Content Script, Browser Action)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "background/ - scripts de background",
          "content_scripts/ - scripts injetados nas páginas",
          "popup/ - interface do usuário da extensão",
          "assets/ - ícones e recursos estáticos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "nomes descritivos para scripts e arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre background scripts, content scripts e UI (popup)",
          "Comunicação via mensagens entre scripts"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6, browser, node"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.* APIs",
          "background.bundle.js",
          "bridge.bundle.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Manifest Version 2 (deprecado em breve)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Atualização para Manifest V3 necessária para compatibilidade futura"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança no uso de permissões",
          "Clareza na separação de responsabilidades entre scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas da extensão e uso dos scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, uso de inglês para termos técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter Manifest Version 2 até migração completa para V3"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Localhost (http://localhost/*)",
          "DeploySentinel (https://*.deploysentinel.com/*)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store Extension"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação a Manifest Version 2",
          "Permissões restritas pelo navegador"
        ]
      }
    ]
  },
  "src/manifest3.json": {
    "summary": "Este arquivo de manifesto define uma extensão Chrome focada em gravar interações do usuário no navegador para gerar automaticamente scripts de teste em frameworks como Cypress, Playwright e Puppeteer. A extensão opera com manifest_version 3, utilizando um service worker para background, scripts de conteúdo para injetar funcionalidades em páginas específicas e permissões amplas para manipulação de abas, armazenamento e navegação web. Seu comportamento central é capturar eventos e ações do usuário em domínios autorizados, transformando essas interações em scripts automatizados que facilitam a criação e manutenção de testes end-to-end, integrando-se com sistemas externos via conexões permitidas. A arquitetura modular e permissões configuradas garantem flexibilidade e segurança no monitoramento e geração de dados de teste, habilitando equipes de QA a acelerar a automação de testes com precisão e confiabilidade.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação de interações e geração de scripts de teste"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "End-to-End Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das interações do usuário",
          "Geração correta de scripts compatíveis com Cypress, Playwright e Puppeteer",
          "Segurança e privacidade dos dados capturados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES2021",
          "Manifest V3 JSON"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "Cypress",
          "Playwright",
          "Puppeteer"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "https://*.deploysentinel.com"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven Architecture",
          "Modular Extension Design",
          "Service Worker Background Processing"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "background/ - service worker scripts",
          "content_scripts/ - scripts injetados nas páginas",
          "popup/ - UI da extensão",
          "assets/ - ícones e imagens"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes UI",
          "snake_case para arquivos de configuração"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre background, content scripts e UI popup",
          "Comunicação via mensagens e eventos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES2021 e ambiente browser"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para JavaScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e módulos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript sem tipagem estática",
          "Possível uso futuro de TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest para testes unitários do background e scripts"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ para testes unitários e integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then para testes comportamentais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do Chrome e comunicação externa"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 para comunicação externa (deploysentinel.com)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas via manifest para domínios e APIs específicas"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de interação do usuário tratados localmente, sem envio externo não autorizado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content Security Policy configurada via manifest"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Criptografia padrão do Chrome para armazenamento local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Gravação em tempo real sem impacto perceptível na navegação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixo impacto em CPU e memória do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência eficiente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas abas e sessões simultâneas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs estruturados para erros no background e content scripts"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console logs e armazenamento local para diagnóstico"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Integração com ferramentas externas via deploysentinel.com"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reinício automático do service worker e re-injeção de scripts"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "APIs do Chrome",
          "Frameworks de teste suportados"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Manifest V3 obrigatório para compatibilidade"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos internos para gravação e geração de scripts"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Aprimorar suporte a múltiplos frameworks simultaneamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Limitações na captura de eventos em iframes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Uso intensivo de CPU em gravações longas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Completo para Manifest V3, sem migrações pendentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança das permissões",
          "Qualidade dos scripts gerados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas e uso da extensão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do Manifest V3 para maior segurança e performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "REST para comunicação externa"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento semântico para APIs externas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Limites impostos pelo serviço externo deploysentinel.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development (localhost)",
          "Production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Publicação via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "URLs autorizadas para comunicação externa"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do Manifest V3 e APIs do Chrome"
        ]
      }
    ]
  },
  "src/pages/Background/index.ts": {
    "summary": "Este arquivo implementa a lógica central para gravação e reprodução de interações de navegação em um ambiente de extensão Chrome, focado em testes automatizados. Ele gerencia o estado da gravação, captura eventos de navegação, e coordena a execução de scripts injetados para monitorar e registrar ações do usuário em abas específicas. Além disso, integra funcionalidades específicas para frameworks de teste como Cypress e Playwright, habilitando a criação, controle e finalização de sessões de gravação, bem como a manipulação de menus contextuais para ações de gravação avançadas. O código mantém sincronização do estado via armazenamento local do Chrome e responde a eventos do navegador para garantir a consistência e ativação correta dos recursos de gravação e replay, suportando fluxos complexos de teste end-to-end em aplicações web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Extensão para gravação e replay de testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "Web Testing",
          "Browser Extension"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação só ativa em aba e frame corretos",
          "Estado de gravação deve ser consistente",
          "Scripts injetados devem ser executados apenas em contexto autorizado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "Playwright",
          "Cypress"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome WebExtensions API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven Architecture",
          "Observer Pattern",
          "Modularization"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common/utils - utilitários compartilhados",
          "storage - gerenciamento de estado",
          "modules/replay - lógica de replay",
          "background - script principal da extensão"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para classes e stores",
          "constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separa utilitários, armazenamento e replay em módulos distintos",
          "Comunicação via import/export e mensagens assíncronas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para async/await"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e métodos públicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript",
          "Sem uso de any implícito"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ correlata aos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do Chrome",
          "Fixtures para estados de gravação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy para staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 (externo, não implementado neste módulo)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Gravação restrita à aba e frame autorizados",
          "Scripts injetados apenas em contextos validados"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e dados de navegação armazenados localmente, sem exposição externa"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente neste módulo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Dados armazenados via chrome.storage.local, criptografia dependente do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Atualizações de estado e injeção de scripts devem ocorrer em milissegundos para não impactar UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura de eventos",
          "Minimizar overhead em abas monitoradas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência leve"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas abas e frames, porém foco em uma aba de gravação por vez"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw, sem padrão estruturado explícito"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não explícito no código, presumivelmente console.log para debug"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Verificações preventivas para evitar estados inválidos, mas sem fallback robusto"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "APIs do Chrome",
          "Módulos internos utils, recording-store, replay-handler"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Chrome API atual"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/utils",
          "../storage/recording-store",
          "../../modules/replay/replay-handler"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento de erros e sincronização de estado podem ser melhorados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência forte do estado local pode causar inconsistências em casos de falha"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Injeção repetida de scripts pode impactar performance em abas com muitas atualizações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado",
          "Tratamento assíncrono correto",
          "Segurança na injeção de scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs internas e mensagens entre scripts"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do chrome.storage.local para estado",
          "Separação clara entre gravação e replay"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Event-driven via Chrome Runtime Messaging"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples para mensagens e armazenamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local",
          "Produção via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Extensão Chrome empacotada"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações da API do Chrome e permissões da extensão"
        ]
      }
    ]
  },
  "src/pages/Bridge/index.ts": {
    "summary": "Este arquivo JavaScript/TypeScript implementa um mecanismo de comunicação entre uma aplicação web e uma extensão Chrome, focado em iniciar gravações de testes automatizados e responder a mensagens de ping. Ele valida a origem das mensagens recebidas para garantir que apenas mensagens provenientes de domínios confiáveis, como localhost e deploysentinel.com, sejam processadas. O código escuta eventos do tipo 'message' no objeto window para interceptar comandos específicos, como 'start-recording' e 'ping', e interage com a API chrome.runtime para enviar e receber mensagens relacionadas à gravação de testes Playwright. Essa integração permite a coordenação entre o editor de testes e o gravador, habilitando funcionalidades de automação de testes end-to-end dentro do ecossistema DeploySentinel.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel Test Recorder",
          "Automação de testes Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Playwright"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa da origem das mensagens",
          "Comunicação segura entre webapp e extensão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework frontend explícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension API",
          "DeploySentinel Webapp"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer Pattern",
          "Message Passing"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte",
          "background/: scripts da extensão",
          "content-scripts/: scripts injetados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código da extensão e código do webapp",
          "Comunicação via mensagens"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e JS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit/",
          "tests/integration/"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome.runtime e window.postMessage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via DeploySentinel Webapp"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Validação de origem das mensagens",
          "Permissões restritas na extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs de teste",
          "Códigos de gravação"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy para mensagens"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "TLS para comunicação web"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Mensagens processadas em < 100ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na comunicação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente do navegador"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não especificado no código atual"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Possível integração com ferramentas externas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Nenhuma estratégia explícita"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.runtime API",
          "window.postMessage"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Chrome 90+"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos internos da extensão DeploySentinel"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Falta de tratamento de erros robusto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência exclusiva do Chrome"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Segurança na validação de origem",
          "Clareza na comunicação entre módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs de mensagem"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de mensagens para integração entre webapp e extensão"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Message Passing API via postMessage e chrome.runtime"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples com propriedades source, type, code, actions"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "localhost",
          "deploysentinel.com",
          "*.deploysentinel.com"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store Extension"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma explícita"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Execução limitada ao ambiente do navegador Chrome"
        ]
      }
    ]
  },
  "src/pages/Common/Icon.tsx": {
    "summary": "Este componente React funcional renderiza um ícone SVG que representa um círculo com um gradiente linear e um path branco interno, fornecendo um elemento visual reutilizável para interfaces web. Ele não mantém estado nem produz efeitos colaterais, focando exclusivamente na renderização visual escalável e estilizada. O componente é exportado como padrão para fácil integração em projetos React, garantindo consistência visual e simplicidade de uso.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "React Icon Component",
          "Componente de ícone SVG para interface web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Development",
          "UI Components",
          "React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual do ícone",
          "Compatibilidade com React 18+",
          "Renderização correta do SVG"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components/Icon - componente isolado para reutilização visual"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para props e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados sem dependências externas além do React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline simples, sem JSDoc explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "JavaScript sem tipagem estática",
          "Possível uso futuro de TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta components/__tests__"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot testing para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas se houver"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install ou yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install",
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start",
          "yarn start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test",
          "yarn test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build",
          "yarn build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint",
          "yarn lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format",
          "yarn format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização instantânea do componente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa complexidade, foco em renderização rápida"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Componente leve e reutilizável para múltiplas instâncias"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React 18"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Performance de renderização",
          "Simplicidade do componente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima para componentes simples"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SVG para ícones para garantir escalabilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/Logo.tsx": {
    "summary": "Este arquivo define um componente React funcional chamado Logo, responsável por renderizar uma imagem SVG que representa a marca DeploySentinel. O componente importa o arquivo SVG do logo e o exibe com dimensões fixas de altura e largura automática, garantindo que o usuário não possa selecionar a imagem (userSelect: 'none'). O comportamento é simples e focado em apresentar a identidade visual da aplicação de forma consistente, sem manipulação de estado ou efeitos colaterais. A integração ocorre via importação do recurso estático e exportação padrão do componente, facilitando seu uso em outras partes da aplicação, contribuindo para a uniformidade visual e reforço da marca no frontend.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Interface para monitoramento e deploy de aplicações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "DevOps",
          "Frontend",
          "React",
          "Branding"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual da marca",
          "Performance mínima no carregamento do logo"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages: componentes de tela",
          "Popup: componentes modais ou popups",
          "assets: arquivos estáticos como imagens e SVGs"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para variáveis e funções",
          "snake-case para arquivos estáticos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes visuais e assets estáticos",
          "Importação relativa para recursos locais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.js com regras para React e JSX"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "PropTypes ou TypeScript (não aplicável neste arquivo)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta __specs__ ao lado do componente"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot Testing",
          "Renderização e acessibilidade"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de assets estáticos para testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização instantânea do logo"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar bundle size",
          "Carregamento rápido"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache do navegador para assets estáticos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "logo.svg"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../pages/Popup/logo.svg"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Performance",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de props e comportamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componentes funcionais para UI",
          "Importação estática de assets"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipeline"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/ScriptTypeSelect.tsx": {
    "summary": "Este componente React exibe visualmente o tipo de script utilizado, fixando sempre o valor como 'Cypress'. Ele mantém compatibilidade com interfaces anteriores ao garantir que o valor passado seja corrigido para 'Cypress' via efeito colateral, mas não permite alteração pelo usuário, funcionando apenas como um display estilizado. A funcionalidade principal é garantir a consistência do tipo de script em interfaces que esperam essa informação, sem permitir mudanças, facilitando a integração com sistemas que dependem dessa tipagem fixa.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto de automação de testes com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Quality Assurance",
          "Test Scripts"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Tipo de script deve ser sempre Cypress",
          "Interface deve manter compatibilidade visual"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Presentational Component"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes React reutilizáveis",
          "src/types - definições de tipos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para props e funções"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e componentes",
          "Componentes isolados sem estado global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para comentários de funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/components para testes de componentes React"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para props e funções callback"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "typescript"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types (ScriptType)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível loop de atualização se onChange não for estável"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de props",
          "Evitar efeitos colaterais desnecessários"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Fixar ScriptType como Cypress para compatibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/endRecording.ts": {
    "summary": "O código implementa a finalização de uma sessão de gravação de ações do usuário em um ambiente de browser automation, garantindo a persistência dos dados capturados e a comunicação com a interface web. Ele recupera do armazenamento local as informações da gravação, identifica a URL inicial relevante para contextualizar a sessão, e salva a gravação no histórico por meio do serviço dedicado. Após a persistência, limpa o estado local para preparar futuras gravações e, se configurado, gera código Cypress correspondente às ações gravadas, enviando-o para a aba de origem. O comportamento é robusto, com tratamento de exceções e múltiplos pontos de decisão para assegurar a integridade dos dados e a continuidade do fluxo de trabalho automatizado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Automation Recording Service",
          "Captura e persistência de sessões de gravação de ações do usuário para testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Browser Automation",
          "Test Recording",
          "Cypress Integration"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização e manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Persistir gravações somente se houver ações registradas",
          "Garantir que a URL inicial da gravação seja sempre identificada para contexto",
          "Enviar código gerado apenas para a aba correta",
          "Limpar estado local após finalização para evitar dados inconsistentes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "Cypress (para geração de código de teste)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "IndexedDB (implícito via RecordingService para persistência local)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Tabs API",
          "Chrome Runtime Messaging"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Architecture",
          "Service Layer (RecordingService)",
          "Event-driven Communication (chrome.runtime.sendMessage)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "utils/: funções utilitárias para manipulação de storage",
          "builders/: geração de código (ex: genCypressCode)",
          "storage/: serviços de persistência (RecordingService)",
          "types/: definições de tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e classes",
          "snake_case para variáveis locais",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separa lógica de persistência, geração de código e manipulação de storage em módulos distintos",
          "Comunicação entre módulos via import/export e mensagens do runtime"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript/TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript, incluindo checagem de tipos e estilo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e métodos públicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode habilitado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários localizados em __tests__ próximos aos módulos",
          "Testes de integração para serviços de gravação"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 85%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "Given-When-Then para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome API usando jest-mock-chrome",
          "Fixtures para gravações simuladas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main protegida"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos 2 desenvolvedores",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm ci"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 para acesso à API do Chrome (implícito)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas no manifest.json para acesso a tabs e storage"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e ações do usuário são tratados como dados sensíveis e armazenados localmente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content Security Policy configurada no manifest para evitar injeção"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Dados armazenados localmente não são criptografados, mas acesso é restrito ao contexto da extensão"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Finalização da gravação deve ocorrer em menos de 500ms para boa UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Prioridade em velocidade de resposta e baixa latência na comunicação entre abas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de localStorage para cache temporário das gravações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente local do browser, foco em eficiência local"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs de erro no console com mensagens claras e stack trace"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso de console.error para erros críticos durante persistência"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento via ferramentas externas integradas ao ambiente de desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallbacks para obtenção da URL inicial e limpeza do estado para evitar corrupção"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.tabs API",
          "chrome.runtime API",
          "RecordingService",
          "genCypressCode"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum pacote deprecado identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade garantida com Chrome 100+ e TypeScript 5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "utils, builders, storage, types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros assíncronos e cobertura de testes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível atraso na obtenção da URL da aba ativa em casos de múltiplas abas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações assíncronas sequenciais podem impactar tempo de resposta"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Projeto está estabilizado, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na manipulação assíncrona",
          "Tratamento robusto de erros",
          "Consistência na nomenclatura e modularização"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e fluxos críticos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e explicativos em português com termos técnicos em inglês"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Decisão de usar mensagens runtime para comunicação entre background e tabs",
          "Separação clara entre persistência e geração de código"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extension Messaging API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito, compatibilidade garantida via manifest v3"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Mensagens JSON com tipo e payload definidos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável no contexto local da extensão"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development (localhost)",
          "Staging (testes internos)",
          "Production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Publicação via Chrome Web Store",
          "Distribuição manual para testes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "CHROME_EXTENSION_ID",
          "API_KEYS (não expostos no código)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação ao ambiente do navegador Chrome e suas APIs"
        ]
      }
    ]
  },
  "src/pages/Common/hooks.ts": {
    "summary": "Este arquivo contém hooks React customizados que gerenciam preferências e estados relacionados à biblioteca de testes, posição da barra de interface, estado de gravação de ações e configurações de timing. O código centraliza a persistência e sincronização desses estados com localStorage e chrome.storage, garantindo consistência entre sessões e atualizações em tempo real. Destaca-se a fixação da biblioteca Cypress como padrão, a recuperação e atualização da posição da barra, o acompanhamento do estado de gravação com escuta de mudanças externas, e a gestão configurável de parâmetros de timing, todos voltados para melhorar a experiência do usuário e a integridade dos dados no contexto de uma aplicação de automação de testes ou gravação de ações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automação de Testes UI com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "UI Testing",
          "Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Uso obrigatório da biblioteca Cypress para scripts",
          "Persistência consistente das preferências do usuário",
          "Sincronização em tempo real do estado de gravação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "chrome.storage API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Hooks Pattern",
          "Observer Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/hooks - custom React hooks",
          "src/utils - funções utilitárias para armazenamento",
          "src/types - definições de tipos e constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e componentes",
          "prefixo use para hooks"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre hooks, utilitários e tipos",
          "Dependência unidirecional dos hooks para utils e types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e hooks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/hooks - testes unitários para hooks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% cobertura"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de localStorage e chrome.storage APIs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Consistência e sincronização em tempo real priorizadas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de localStorage e chrome.storage para persistência local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "chrome.storage API",
          "localStorage utilities"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./utils",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Fixação rígida da biblioteca Cypress pode limitar flexibilidade"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Ausência de tratamento explícito de erros em chamadas assíncronas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estado e sincronização",
          "Uso correto dos hooks",
          "Persistência correta"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara dos hooks e efeitos colaterais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Decisão de fixar Cypress como biblioteca padrão"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/utils.ts": {
    "summary": "Este código implementa funcionalidades para gerenciar o estado de gravação e preferências do usuário em uma extensão de navegador, utilizando a API de armazenamento local do Chrome. Ele oferece métodos para iniciar e finalizar gravações, armazenar preferências como biblioteca e posição da barra, além de funções assíncronas para manipulação de abas, execução de scripts e identificação de contextos específicos como testes Cypress. O comportamento central envolve a persistência e recuperação de dados no armazenamento local, controle do fluxo de gravação e integração com APIs do navegador para manipulação de abas e execução de scripts, garantindo uma experiência consistente e configurável para o usuário. A arquitetura suporta compatibilidade entre manifest v2 e v3, e inclui tratamento de erros e limpeza de contexto, promovendo robustez e manutenção eficiente do estado da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel - Extensão para gravação e automação de testes em navegadores"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes, extensões de navegador, gravação de sessões, Cypress integration"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção com suporte a múltiplas versões de manifest (v2 e v3)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Persistência correta do estado de gravação para evitar perda de dados",
          "Compatibilidade entre manifest v2 e v3 para execução de scripts",
          "Identificação precisa de abas de teste Cypress para integração adequada"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "WebExtensions API (compatibilidade com Firefox)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "APIs do navegador Chrome e Firefox para tabs, scripting e webNavigation"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização funcional com separação clara entre manipulação de estado e execução de scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte principal",
          "src/storage/ - funções de manipulação de armazenamento local",
          "src/scripts/ - scripts executados nas abas",
          "src/utils/ - utilitários e helpers"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Funções em camelCase",
          "Constantes em camelCase",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulos separados por responsabilidade: armazenamento, execução de scripts, manipulação de abas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para evitar uso de any, garantir async/await correto e evitar callbacks aninhados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para 2 espaços e aspas simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas e complexas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita para funções assíncronas e objetos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos correspondentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para funções críticas de armazenamento e execução"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de APIs chrome.storage e chrome.tabs usando jest-mock"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main protegida"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes passando antes do merge"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run watch"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado diretamente neste módulo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso baseado em permissões do navegador para execução de scripts"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs capturadas durante gravação são armazenadas localmente sem criptografia"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Gerenciados pelo navegador, não aplicados diretamente no código"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia aplicada no armazenamento local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações de armazenamento e execução de scripts devem ser rápidas para não impactar UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na manipulação de estado e execução assíncrona eficiente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso do chrome.storage.local como cache persistente local"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto de extensão de navegador, foco em eficiência local"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros retornados via Promise reject com objetos Error padrão"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente neste módulo"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento básico de erros via rejeição de Promises e fallback para criação de IDs"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.storage.local",
          "chrome.tabs",
          "chrome.scripting",
          "chrome.webNavigation",
          "browser API para compatibilidade Firefox"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Uso de chrome.tabs.executeScript (deprecated no Manifest V3, substituído por chrome.scripting)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Manifest V2 e V3 do Chrome Extensions"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulos internos organizados por funcionalidade (storage, scripts, utils)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Manutenção da compatibilidade entre Manifest V2 e V3",
          "Refatoração para eliminar uso de APIs deprecated"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível inconsistência na execução de scripts em frames múltiplos",
          "Limitações do armazenamento local em volume e performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Latência na execução de scripts em abas com múltiplos frames"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração parcial para Manifest V3 com fallback para V2"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de compatibilidade cross-browser e uso correto de APIs assíncronas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções assíncronas e manipulação de estado"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos em português com termos técnicos em inglês"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Decisão de manter compatibilidade com Manifest V2 e V3 para maior abrangência"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "APIs do navegador baseadas em callbacks e Promises"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Compatibilidade com versões de Manifest V2 e V3"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON simples e Promises para respostas assíncronas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável diretamente, dependente das limitações do navegador"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local, staging via builds automatizados, produção via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Publicação como extensão Chrome/Firefox"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum variável sensível exposta neste módulo"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão de navegador, restrições de API e armazenamento local"
        ]
      }
    ]
  },
  "src/pages/Content/ActionList.tsx": {
    "summary": "Este arquivo React implementa um componente funcional que exibe uma lista de ações automatizadas de teste ou interação de usuário, traduzindo objetos de ação em descrições legíveis e formatadas. Ele suporta múltiplos tipos de ações como Click, Hover, Load, Input, Keydown, Resize, Wheel, FullScreenshot, AwaitText e DragAndDrop, apresentando detalhes contextuais e seletor CSS ideal para cada ação, focando em facilitar a visualização sequencial e compreensível das etapas de um script de automação. O componente filtra ações suportadas e utiliza funções auxiliares para determinar o melhor seletor, integrando-se a um sistema maior de geração e execução de scripts de teste, com ênfase em clareza, modularidade e reutilização de tipos e estilos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automated UI Testing Script Visualizer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Test Automation",
          "UI Interaction",
          "Web Application Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Only supported action types should be rendered",
          "Sensitive input values must be masked"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Presentational and Container Components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "types/ - definição de tipos e enums",
          "builders/ - funções auxiliares para construção de seletores",
          "components/ - componentes React reutilizáveis",
          "styles/ - arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "UPPER_SNAKE_CASE para enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, builders e componentes",
          "Dependência unidirecional de tipos para componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript typings"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders próximos aos componentes",
          "Testes unitários para renderização e lógica condicional"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de funções auxiliares e tipos externos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy stages"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Password inputs are masked with asterisks"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Rendering performance to handle large action lists"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Component designed to handle dynamic and potentially large arrays of actions"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "../types",
          "../builders/selector"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "types",
          "builders",
          "components"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tipos, cobertura de testes, clareza na renderização condicional"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar componentes e funções com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros, uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componentes funcionais React para melhor performance e simplicidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/CodeGen.tsx": {
    "summary": "Este componente React denominado CodeGen tem como propósito principal renderizar um bloco de código JavaScript formatado e estilizado, gerado dinamicamente a partir de um conjunto de ações (actions) e um tipo de biblioteca (library). Utilizando a biblioteca react-syntax-highlighter com o tema vscDarkPlus, ele transforma dados de entrada (actions) em código fonte legível e destacado, facilitando a visualização e análise do código gerado. O componente é altamente configurável, permitindo a customização de estilos CSS inline, e integra-se a um sistema maior onde a geração de código é abstraída pela função genCode, promovendo reutilização e modularidade. Seu comportamento é puramente funcional e declarativo, sem efeitos colaterais ou estado interno, focado em apresentar o resultado da transformação de dados para o usuário final ou para etapas subsequentes do fluxo de desenvolvimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Code Generation UI",
          "Visualização e geração dinâmica de código"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Automação de geração de código",
          "Developer Tools"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Geração correta e precisa do código",
          "Manter integridade do código gerado",
          "Renderização fiel do código para análise"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Separation of Concerns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - UI components",
          "src/builders - lógica de geração de código",
          "src/types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "Arquivos com extensão .tsx para componentes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (components) e lógica de negócio (builders)",
          "Tipos compartilhados via pasta types"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para React/TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders próximos aos componentes",
          "Testes unitários para builders e componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de funções genCode para isolar testes UI"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida",
          "Baixa latência na geração de código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react-syntax-highlighter",
          "genCode function"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=4.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../builders",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e legibilidade do código",
          "Cobertura de testes",
          "Consistência com padrões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e componentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e informativos",
          "PRs com descrição detalhada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação clara entre geração e apresentação de código",
          "Uso de react-syntax-highlighter para UI"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/ControlBar.tsx": {
    "summary": "Este arquivo React implementa um componente ControlBar que atua como uma interface de gravação e visualização de ações do usuário em uma aplicação web, focado em automação de testes. Ele captura eventos de interação do usuário, como cliques, inputs, navegação e screenshots, armazenando-os como ações estruturadas que podem ser exibidas em formato de código (ex: Cypress) ou lista de ações. O componente gerencia estados complexos, incluindo a posição da barra, o status da gravação, seleção de biblioteca para geração de código, e feedback visual para o usuário, como realce de elementos DOM e confirmações de cópia. Integra-se com módulos auxiliares para geração de seletores, código e gravação, além de responder a eventos externos via armazenamento do navegador, garantindo sincronização do estado de gravação. A interface é responsiva e permite alternar entre modos de visualização, finalizando a gravação e exportando o script gerado para automação de testes, facilitando a criação de testes end-to-end sem necessidade de codificação manual.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recorder ControlBar - Interface para gravação e geração de scripts de automação de testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "QA",
          "End-to-End Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade das ações gravadas",
          "Sincronização do estado de gravação",
          "Precisão na geração de seletores e código"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x",
          "Lodash 4.x",
          "FontAwesome 6.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Storage API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Observer Pattern (event listeners)",
          "State Management via React Hooks"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/components - UI components",
          "/builders - lógica de geração de seletores e código",
          "/Common - hooks e utilitários compartilhados",
          "/types - definições de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "PascalCase para tipos e enums",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "UI components isolados de lógica de geração de código",
          "Hooks e utilitários em Common",
          "Builders para lógica de seleção e código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados próximos aos componentes",
          "Mocks para APIs e eventos DOM"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de eventos DOM e APIs do navegador",
          "Fixtures para ações simuladas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (componente UI local)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Senhas mascaradas em ações de input"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Atualização da UI em tempo real com throttling para mousemove (100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade da interface",
          "Minimizar impacto no DOM"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Gerenciamento eficiente de lista de ações para gravações longas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não explícito no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementado explicitamente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reinicialização da gravação via UI"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Recorder module",
          "Selector builders",
          "Chrome Storage API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../builders",
          "../Common",
          "./recorder",
          "./Highlighter"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Gerenciamento de estado complexo pode ser refatorado para usar context API ou state management externo"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Eventos de mouse podem ser afetados por overlays externos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Throttling aplicado para evitar excesso de renderizações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Uso correto de hooks",
          "Manutenção da performance"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para componentes e funções complexas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de throttle para otimizar eventos de mousemove",
          "Separação entre visualização de ações e código"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável - componente UI local"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Web Extension",
          "Static Hosting"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão de navegador"
        ]
      }
    ]
  },
  "src/pages/Content/Highlighter.tsx": {
    "summary": "Este arquivo React implementa um componente funcional chamado Highlighter, cuja finalidade principal é destacar visualmente uma área retangular na interface do usuário, utilizando as dimensões e posição fornecidas via props do tipo DOMRect. O componente também exibe um rótulo textual associado ao seletor CSS que está sendo destacado, posicionando-o logo abaixo da área destacada. O comportamento central consiste em renderizar dois elementos div com estilos inline baseados nas propriedades do retângulo, além de injetar estilos CSS importados para garantir a aparência correta do destaque. Não há manipulação de estado interno nem efeitos colaterais complexos, o que torna o componente previsível e fácil de integrar em sistemas maiores que necessitem de visualização dinâmica de seletores ou áreas específicas na tela. A integração com o sistema maior ocorre via props, permitindo que o componente seja reutilizado em diferentes contextos onde seja necessário evidenciar visualmente elementos DOM. Essa capacidade habilita usuários e desenvolvedores a identificar rapidamente áreas de interesse na interface, facilitando depuração, inspeção visual ou interações baseadas em seletores CSS.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Highlighter Component",
          "Visualização e destaque de seletores CSS em UI React"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Development",
          "UI Debugging",
          "CSS Selector Highlighting"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Precisão no posicionamento do destaque",
          "Renderização consistente do rótulo",
          "Não interferir na interação do usuário"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Functional Components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components/Highlighter - componente visual e estilização associada"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para props e variáveis",
          "kebab-case para IDs CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Isolamento do componente Highlighter com importação explícita de estilos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folder ao lado do componente"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para props e estilos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida",
          "Baixa complexidade computacional"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "Highlighter.css"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Highlighter.css (estilos locais)"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de memoização para evitar re-renderizações desnecessárias"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência de estilos externos pode causar falhas visuais"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na tipagem",
          "Consistência visual",
          "Ausência de efeitos colaterais"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara de props e comportamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componente funcional para simplicidade e performance"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Content/index.tsx": {
    "summary": "Este arquivo implementa um componente React que injeta uma interface de controle (ControlBar) em um shadow DOM anexado dinamicamente ao body do documento, garantindo isolamento visual e funcional. Ele gerencia o estado global via propriedades no objeto window para evitar múltiplas instâncias e expõe uma função de limpeza (cleanUp) para desmontar o componente e liberar recursos, com suporte específico para Firefox via exportFunction. O código integra estilos CSS externos e manipula diretamente o DOM para criar um ambiente encapsulado, facilitando testes e controle de ciclo de vida do componente, além de garantir interoperabilidade entre contextos de execução do navegador.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel",
          "Interface de controle para monitoramento e testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web UI Testing",
          "Browser Extensions",
          "Shadow DOM"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir única instância ativa do script",
          "Permitir limpeza completa do componente para evitar vazamentos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x",
          "ReactDOM"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Component-based UI",
          "Shadow DOM encapsulation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "./ControlBar - componente React principal",
          "../Common - estilos compartilhados",
          "root - script de bootstrap e injeção"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes e funções",
          "snake_case para variáveis globais no window"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (ControlBar) e bootstrap script",
          "Isolamento via shadow DOM para evitar poluição global"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e interfaces"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do navegador e funções globais"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto no DOM principal",
          "Isolamento via shadow DOM para performance UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Evitar múltiplas instâncias para reduzir uso de memória"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Função cleanUp para desmontar e liberar recursos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "ReactDOM",
          "FontAwesome",
          "Shadow DOM API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./ControlBar",
          "../Common/styles.css"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros e fallback para browsers sem exportFunction"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível incompatibilidade com browsers não suportados",
          "Tipagem TypeScript ignorada em shadowRoot"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de uso correto do cleanUp",
          "Garantia de não múltiplas instâncias"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções globais e integração com Firefox"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, uso de português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de shadow DOM para isolamento",
          "Exposição global para controle externo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Static hosting",
          "Browser extension injection"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de APIs específicas do navegador",
          "Limitação a ambientes que suportem shadow DOM"
        ]
      }
    ]
  },
  "src/pages/Content/recorder.ts": {
    "summary": "O código implementa um sistema de gravação de ações do usuário na interface web, capturando eventos como cliques, inputs, teclas pressionadas, redimensionamentos e interações de drag-and-drop. Utiliza técnicas de debounce para otimizar eventos de resize e filtra eventos irrelevantes ou duplicados, garantindo a integridade e a precisão dos dados coletados. Além disso, integra-se com o armazenamento local do navegador para persistência e sincronização dos dados, suportando comunicação com background scripts para ações contextuais, o que permite um monitoramento detalhado e confiável do comportamento do usuário para fins de análise ou automação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "User Interaction Recorder",
          "Captura e gravação detalhada de eventos de usuário para análise comportamental e automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Analytics",
          "Automação de testes",
          "User Behavior Tracking",
          "Terminologia técnica: DOM events, selectors, debounce, SPA navigation"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com monitoramento ativo e suporte a múltiplos eventos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não registrar eventos duplicados para o mesmo tipo em sequência imediata",
          "Ignorar eventos originados da interface de overlay para evitar ruído",
          "Persistir gravação no armazenamento local para recuperação e continuidade",
          "Capturar a primeira URL visitada apenas uma vez para contexto da sessão"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework front-end explícito (vanilla JS/TS)",
          "Uso de biblioteca lodash.debounce para otimização de eventos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Armazenamento local do navegador (chrome.storage.local)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "API chrome.runtime para comunicação com background scripts"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Observer pattern para escuta e reação a eventos DOM",
          "Singleton-like pattern para instância única do Recorder",
          "Event-driven architecture para captura e processamento de ações"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "builders/selector - geração de seletores CSS para elementos",
          "Common/utils - funções utilitárias como acesso ao localStorage",
          "types - definições de tipos e enums para ações e eventos",
          "main recorder module - captura e gerenciamento dos eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e funções",
          "snake_case para variáveis locais e parâmetros",
          "Prefixo _ para propriedades privadas",
          "Enums e tipos com PascalCase"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Recorder encapsula toda lógica de captura e armazenamento",
          "Utils e builders são módulos auxiliares desacoplados",
          "Comunicação com background via chrome.runtime é isolada"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para evitar duplicidade e garantir tipagem"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier para formatação automática com padrão de 2 espaços"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline de funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita para eventos e ações"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários localizados em __tests__ próximos aos módulos",
          "Testes de integração para simulação de eventos DOM"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 85% para lógica crítica"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then para clareza em cenários de eventos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome.storage e eventos DOM",
          "Fixtures para simular diferentes tipos de eventos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main e hotfix"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits para padronização e automação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um peer",
          "Checks automáticos de lint, build e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Pipeline com etapas de build, lint, test e deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm ci"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente (foco em captura local de eventos)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Acesso restrito ao armazenamento local do navegador",
          "Eventos filtrados para evitar captura de dados sensíveis de overlays"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Campos password detectados e marcados para tratamento especial"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável no contexto do código cliente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Persistência local sem criptografia explícita, depende do ambiente do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Eventos processados em tempo real com debounce para resize (300ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar overhead no thread principal do navegador",
          "Evitar gravação excessiva e duplicada de eventos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de chrome.storage.local para persistência e sincronização"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplos eventos simultâneos e navegação SPA"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Não há formato explícito, erros são tratados silenciosamente para não interromper captura"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Sem logging explícito no código fornecido"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Dependência de ferramentas externas para monitoramento do ambiente"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reset de flags de eventos para evitar bloqueios em caso de falhas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "lodash.debounce para otimização de eventos resize",
          "chrome.storage.local para persistência",
          "chrome.runtime para comunicação background"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum pacote deprecado identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com versões recentes do Chrome e navegadores baseados em Chromium"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "builders/selector para geração de seletores CSS",
          "Common/utils para abstração de localStorage"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Gerenciamento de eventos duplicados pode ser aprimorado para casos extremos",
          "Persistência local pode crescer indefinidamente sem limpeza"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível perda de eventos em navegação rápida SPA se sincronização falhar"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Eventos de input e wheel podem gerar alta frequência de gravação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento correto de eventos e prevenção de duplicidade",
          "Garantia de tipagem e uso correto de APIs do navegador"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e fluxos de eventos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, evitando redundância"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de debounce para resize para balancear performance e precisão",
          "Filtragem de eventos de overlay para evitar ruído"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Comunicação via mensagens chrome.runtime (event-driven)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON armazenados localmente com estrutura de ações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Controle interno via debounce e flags para evitar excesso de eventos"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Ambiente browser extension para Chrome e navegadores compatíveis"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Distribuição via Chrome Web Store como extensão"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma variável de ambiente explícita no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do armazenamento local do navegador e políticas de extensão"
        ]
      }
    ]
  },
  "src/pages/CypressTrigger/index.tsx": {
    "summary": "Este arquivo implementa um componente React chamado TriggerButton que gerencia o estado de gravação de testes automatizados utilizando a biblioteca Cypress. O código injeta dinamicamente este botão na interface do usuário do Spec Runner do Cypress, permitindo iniciar e encerrar gravações de testes via mensagens enviadas para a extensão do Chrome. Ele utiliza hooks personalizados para definir a biblioteca preferida como Cypress e para monitorar o estado atual da gravação, além de implementar uma função retrySelector para garantir a montagem do botão somente após a disponibilidade dos elementos DOM necessários. O comportamento central é controlar o fluxo de gravação de testes, integrando-se com a extensão do navegador e prevenindo múltiplas montagens do componente, garantindo uma experiência de usuário consistente e responsiva durante a criação de testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "DeploySentinel Cypress Test Recorder",
          "Ferramenta para gravação de testes automatizados com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Test Automation",
          "Quality Assurance",
          "Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que apenas uma gravação esteja ativa por vez",
          "Não montar múltiplos botões no DOM",
          "Comunicação correta com a extensão Chrome"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x",
          "FontAwesome SVG Core"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension Messaging API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hook Pattern",
          "Shadow DOM encapsulation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common: componentes e hooks reutilizáveis",
          "types: definições de tipos TypeScript",
          "styles: CSS modularizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e componentes",
          "PascalCase para componentes React",
          "kebab-case para classes CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (TriggerButton) e lógica de gravação (hooks, endRecording)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para projetos React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com checagem completa"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ao lado dos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes UI e hooks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "Mocking de hooks e APIs do Chrome"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para chrome.runtime.sendMessage e document.querySelector"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes automatizados aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via Chrome Extension permissions"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas para comunicação entre extensão e UI"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Cabeçalhos padrão do Chrome Extension"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Comunicação segura via mensagens internas do Chrome"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Interação do botão deve ser instantânea (<100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência e mínimo impacto na UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Nenhuma estratégia de cache implementada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto da extensão e UI do Cypress"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw new Error com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs mínimos, foco em erros críticos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento via ferramentas da extensão Chrome"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry para seleção de elementos DOM com limite de tentativas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Chrome Extension Messaging API",
          "FontAwesome"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 5.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/Icon",
          "../Common/hooks",
          "../Common/endRecording",
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Correção de bug de múltipla montagem no Firefox"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível falha na localização de elementos DOM em ambientes customizados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Polling para retrySelector pode impactar performance se maxRetries alto"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de hooks, tratamento de estado e mensagens Chrome"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para hooks e componentes React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de inglês técnico para termos específicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Shadow DOM para encapsulamento do botão na UI"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extension Messaging API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito para mensagens"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Mensagens simples sem payload complexo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Nenhuma limitação explícita implementada"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension via Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhuma variável sensível exposta no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão Chrome e compatibilidade com browsers"
        ]
      }
    ]
  },
  "src/pages/Popup/Popup.tsx": {
    "summary": "Este arquivo React implementa a interface principal de um popup para uma extensão de navegador focada na gravação e geração de scripts de teste automatizados, especialmente para Cypress. Ele gerencia o estado da gravação de testes, histórico de gravações e visualização detalhada, permitindo ao usuário iniciar, finalizar e revisar gravações, além de visualizar o código gerado ou as ações capturadas. A aplicação integra-se com APIs do navegador para manipulação de abas e frames, além de utilizar hooks customizados para persistência e preferências, promovendo uma experiência fluida e contextualizada para criação de testes automatizados a partir das interações do usuário no navegador.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Cypress Test Recorder Extension"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automated Testing",
          "Browser Extensions",
          "Test Automation",
          "Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Preservar integridade das gravações",
          "Garantir sincronização correta entre abas e gravações",
          "Não permitir gravação sem aba ativa"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "LocalStorage (via recordingStore)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension APIs (tabs, scripting)",
          "FontAwesome Icons"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hooks for State Management",
          "Container/Presenter Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common (shared components/utilities)",
          "Content (content scripts and UI parts)",
          "storage (state persistence)",
          "builders (code generation)",
          "types (TypeScript types)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase for Components",
          "camelCase for functions and variables",
          "Uppercase enums (ActionsMode, ScriptType)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "UI components separated por funcionalidade",
          "Hooks encapsulam lógica de estado",
          "Builders isolam geração de código",
          "Storage abstrai persistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders next to components",
          "Unit and integration tests"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks for browser APIs and storage"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review mandatory",
          "CI checks passing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Linting",
          "Testing",
          "Build",
          "Deployment to Chrome Web Store"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método explícito no código (depende do navegador)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso via permissões da extensão no manifest"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de gravação de testes armazenados localmente, sem exposição externa"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Gerenciados pelo navegador e manifest da extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia explícita no código"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Interação UI responsiva, sem bloqueios perceptíveis"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e fluidez na UI, baixo overhead na gravação"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de armazenamento local para persistência de gravações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao contexto de extensão de navegador"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados como Exceptions, sem tratamento global visível"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Sem logging explícito no código analisado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallbacks básicos via estado UI, mas sem estratégias robustas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "React",
          "Chrome Extension APIs",
          "recordingStore",
          "genCypressCode"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React 18.x",
          "TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Common",
          "Content",
          "builders",
          "storage",
          "types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento de erros e logging insuficientes",
          "Acoplamento forte com Cypress"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possíveis condições de corrida em efeitos assíncronos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado explicitamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração de dados antigos no armazenamento local implementada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Uso correto de hooks",
          "Tratamento de estados assíncronos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para componentes e hooks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Cypress como biblioteca padrão para geração de código"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Nenhuma API REST ou similar exposta diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development",
          "Production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension Packaging and Publishing"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum explícito no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitado ao ambiente de navegador Chrome e APIs de extensão"
        ]
      }
    ]
  },
  "src/pages/Popup/analytics.ts": {
    "summary": "Este arquivo implementa funcionalidades para o envio de dados de telemetria ao Google Analytics, focando em eventos de visualização de página e início de gravações. Utiliza chamadas assíncronas via fetch para enviar parâmetros formatados em URLSearchParams, garantindo anonimato do usuário por meio de um identificador de instalação gerado externamente. O código é projetado para operar silenciosamente, com tratamento de erros que evita impacto na experiência do usuário. Sua integração permite monitorar o comportamento do usuário e eventos específicos, fornecendo dados analíticos essenciais para otimização e tomada de decisão em produtos digitais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Analytics Event Tracker",
          "Monitoramento de eventos para análise de uso"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Analytics",
          "Digital Product Monitoring",
          "Google Analytics"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir anonimato do usuário",
          "Enviar dados de eventos sem impactar UX",
          "Manter integridade dos dados enviados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework específico detectado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Google Analytics Measurement Protocol API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização funcional",
          "Separation of Concerns"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Common/utils para funções utilitárias",
          "Módulo de analytics separado para eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "Constantes em maiúsculas com underscore"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo analytics isolado, dependente apenas de utils externos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline simples, sem JSDoc explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript enabled"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não detectado no código fornecido"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Client ID anonimamente gerado, sem dados pessoais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na coleta de eventos, mínimo impacto no UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Tratamento silencioso, sem propagação de erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Try/catch para evitar falhas visíveis ao usuário"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "getRandomInstallId",
          "Google Analytics API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../Common/utils"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de logging e feedback de erro"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Modo no-cors limita detecção de falhas na requisição"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros silencioso",
          "Uso correto de async/await",
          "Manutenção da anonimidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários simples e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso do Google Analytics para coleta de eventos",
          "Identificador anônimo para client ID"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "HTTP POST via fetch para Google Analytics Measurement Protocol"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/index.jsx": {
    "summary": "Este arquivo React tem como principal função renderizar um componente Popup dentro de um container DOM específico, aplicando um conjunto abrangente de estilos CSS importados via webpack. O código atua como ponto de entrada para a interface de usuário, garantindo a aplicação consistente de temas e estilos globais, incluindo suporte a dark mode e estilos específicos para componentes detalhados. Além disso, implementa hot module replacement para permitir atualizações dinâmicas durante o desenvolvimento, melhorando a produtividade e experiência do desenvolvedor.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Popup UI Renderer",
          "Interface para exibição de popups com temas dinâmicos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend Web Application",
          "UI/UX Components",
          "Theming and Styling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com suporte a hot reload para desenvolvimento"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Renderizar Popup no container correto",
          "Aplicar estilos globais e temáticos sem conflito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES6+",
          "React 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2",
          "Webpack 5"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "@fortawesome/fontawesome-svg-core"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hot Module Replacement"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "src/components/: componentes React reutilizáveis",
          "src/themes/: estilos temáticos",
          "src/global.css: estilos globais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para componentes React",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes e estilos",
          "Importação explícita de estilos por componente"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "PropTypes para validação de props React",
          "Sem TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ unitários e de integração próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para dependências externas e estilos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy automáticos"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização inicial rápida (< 200ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de renderização e carregamento CSS"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache de CSS via webpack e browser"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplos temas e componentes dinâmicos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "react-dom",
          "webpack css-loader",
          "@fortawesome/fontawesome-svg-core"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "Webpack >=5.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./Popup",
          "./components",
          "./themes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de tratamento de erros na renderização",
          "Estilos inline podem dificultar manutenção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência forte do container '#app-container' estar presente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Injeção de múltiplos estilos CSS pode impactar tempo de carregamento"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de estilos",
          "Uso correto de hooks e componentes React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar componentes e props com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos",
          "PRs pequenos e focados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de HMR para acelerar desenvolvimento",
          "Uso de CSS-in-JS via injeção para controle de temas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipeline via GitHub Actions"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de container DOM '#app-container' disponível no host"
        ]
      }
    ]
  },
  "src/pages/builders/finder.ts": {
    "summary": "Este arquivo implementa uma função para gerar seletores CSS únicos e otimizados para elementos DOM, facilitando a identificação precisa de elementos em uma árvore HTML. Utilizando uma abordagem bottom-up, o código constrói caminhos de seletores combinando IDs, classes, atributos, tags e pseudo-classes como :nth-child, aplicando penalidades para priorizar seletores mais específicos e eficientes. O algoritmo realiza buscas iterativas e otimizações para garantir unicidade do seletor no contexto do documento raiz, suportando configurações customizáveis para balancear precisão, desempenho e legibilidade do seletor gerado.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "@medv/finder",
          "CSS Selector Generator"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "DOM Manipulation",
          "CSS Selectors"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gerar seletores únicos e válidos",
          "Manter performance aceitável",
          "Evitar seletores ambíguos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum (biblioteca standalone)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Functional",
          "Generator Pattern",
          "Bottom-up Search"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte principal",
          "test/ - testes unitários",
          "dist/ - build final"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e enums"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre funções utilitárias, lógica de busca e otimização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any explícito"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (noImplicitAny, strictNullChecks)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "test/unit para testes unitários",
          "test/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para DOM APIs e querySelectorAll"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Testes",
          "Build",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (biblioteca client-side)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Não manipula dados sensíveis"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Resposta em milissegundos para seletores simples",
          "Limite configurável para tentativas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Balancear velocidade e seletor curto/legível"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Nenhum cache persistente implementado"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Pode degradar em documentos muito grandes devido à combinatória"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via throw com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Não implementa logging interno"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallbacks em busca de seletores alternativos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "DOM API do navegador"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatível com navegadores modernos suportando querySelectorAll"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Otimização limitada para seletores muito complexos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Performance pode cair em documentos com muitos elementos similares"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Geração combinatória de seletores e múltiplas validações querySelectorAll"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Estável, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na lógica de busca",
          "Cobertura de testes",
          "Performance"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para funções públicas e opções de configuração"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de penalidades para ordenar seletores",
          "Fallbacks para garantir unicidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Função exportada como default, API funcional simples"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento interno, gerenciado via npm"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "String contendo seletor CSS válido"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Ambiente browser, qualquer DOM compatível"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Distribuído via npm como biblioteca JavaScript"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de ambiente DOM e suporte a querySelectorAll"
        ]
      }
    ]
  },
  "src/pages/builders/index.ts": {
    "summary": "Este arquivo implementa um gerador de scripts automatizados para testes end-to-end utilizando a ferramenta Cypress. Ele abstrai ações de usuário capturadas (como cliques, inputs, navegações e interações complexas) em comandos Cypress, permitindo a geração de código legível e reutilizável para automação de testes. O código gerencia o estado das ações, insere waits baseados em timing configurável, e suporta a exportação de scripts com templates customizáveis, facilitando a integração com fluxos de desenvolvimento e garantindo scripts robustos e comentados para facilitar manutenção e entendimento.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Gerador de scripts de teste automatizado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Testes end-to-end",
          "Web testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção ativa"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gerar scripts válidos para Cypress",
          "Respeitar timing entre ações",
          "Manter integridade das ações stateful"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress 12.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "TemplateRenderer (módulo interno para geração de templates)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Builder Pattern (ScriptBuilder abstrato e implementações concretas)",
          "Factory Method (createTemplateRenderer)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "types/ - definições de tipos e enums",
          "generators/template/ - renderização de templates",
          "core/ - lógica principal de geração de scripts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "UPPER_SNAKE_CASE para constantes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, geração de scripts e renderização de templates",
          "Dependência unidirecional do builder para o renderer"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript/TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Uso de strict null checks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript",
          "Uso extensivo de tipos e interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Cypress (para testes end-to-end)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes organizados em arquivos separados por feature",
          "Uso de describe/it para estruturação"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura focada em fluxos críticos de UI"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)",
          "Uso de comentários para descrever ações"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs externas não presentes no código analisado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npx cypress open",
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre legibilidade do código e performance na geração"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a grandes volumes de ações sequenciais"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Cypress",
          "TemplateRenderer",
          "Types e enums do projeto"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Cypress 12.x e TypeScript 4.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types",
          "../generators/template/TemplateRenderer"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Implementação pendente para dragAndDrop"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "FIXME expor action diretamente em ActionContext",
          "DragAndDrop não implementado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza nos comentários",
          "Uso correto de tipos",
          "Manutenção da arquitetura builder"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos",
          "Comentários explicativos para lógica complexa"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários em português para contexto",
          "Uso de termos técnicos em inglês"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do Cypress como framework principal",
          "Uso do padrão Builder para geração de scripts"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/builders/selector.ts": {
    "summary": "Este arquivo implementa funcionalidades para gerar seletores CSS robustos e específicos para elementos HTML, focando em atributos relevantes para identificação confiável em testes automatizados e interações de UI. Ele extrai e valida atributos como id, href, aria-label, data-testid, entre outros, para construir seletores que evitam o uso de IDs inválidos e priorizam atributos estáveis. Além disso, oferece uma função para determinar o melhor seletor a ser usado em ações como clique, hover, input e drag-and-drop, considerando o tipo do elemento e o contexto da ação, otimizando a seleção para frameworks de teste como Cypress. O código é projetado para integrar-se a um sistema maior de automação de testes, fornecendo seletores precisos que aumentam a confiabilidade e manutenção dos scripts de teste, reduzindo falsos positivos e falhas causadas por seletores frágeis ou dinâmicos.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "UI Test Selector Generator",
          "Automação de Seletores para Testes de Interface"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "Testes End-to-End",
          "Seletores CSS",
          "UI Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Seletores devem ser únicos e estáveis",
          "IDs inválidos não devem ser usados",
          "Priorizar atributos de acessibilidade e testes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização Funcional",
          "Defensive Programming"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - Tipos e enums",
          "src/utils - Funções utilitárias como finder",
          "src/selectors - Geração e seleção de seletores"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e enums",
          "prefixo gen para funções geradoras"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, utilitários e lógica de seleção",
          "Dependência unidirecional para evitar acoplamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de catch vazio sem tratamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com checagem completa"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários em pasta __tests__ ao lado dos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para finder e elementos DOM"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Precisão e estabilidade dos seletores",
          "Minimizar overhead na geração"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Try-catch silencioso para evitar falhas na geração de seletores"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallback para null em seletores quando falha a geração"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "finder",
          "../types"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "finder",
          "types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Catch silencioso pode dificultar debugging"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Uso de innerText pode impactar performance em elementos grandes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Clareza na priorização de seletores",
          "Uso correto de tipos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções públicas com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Evitar uso de IDs inválidos para seletores",
          "Priorizar atributos de teste e acessibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/declarations.d.ts": {
    "summary": "Este arquivo de declaração TypeScript (.d.ts) tem como principal função permitir a importação de arquivos estáticos com extensões .css e .svg dentro de um projeto TypeScript, garantindo a tipagem correta e evitando erros de compilação. Ele declara módulos para esses tipos de arquivos, especificando que arquivos .css podem ser importados sem tipagem explícita, enquanto arquivos .svg exportam uma string representando seu conteúdo. Essa abordagem facilita a integração de assets estáticos no fluxo de desenvolvimento, suportando bundlers e ferramentas modernas, e assegura que o código mantenha a consistência e previsibilidade na manipulação desses recursos. O arquivo não realiza transformações de dados nem altera estados, mas atua como um facilitador para o sistema maior, habilitando a interoperabilidade entre código TypeScript e recursos estáticos, o que é essencial para projetos front-end modernos que utilizam CSS Modules e SVGs inline.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Front-end com suporte a importação de assets estáticos"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento front-end",
          "TypeScript",
          "Assets estáticos",
          "CSS Modules",
          "SVG inline"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Importação correta e tipada de arquivos estáticos para evitar erros de build"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2 (implícito)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização via declaração de módulos TypeScript"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/assets para arquivos estáticos",
          "src/types para declarações de tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Extensões de arquivos mantidas (.css, .svg)",
          "Declarações em arquivos .d.ts"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código TypeScript e assets estáticos via módulos declarados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para importação de módulos estáticos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para declarações de tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29 (implícito para front-end)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ ou pasta tests"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocking de módulos estáticos via Jest mocks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build time efficiency",
          "Minimal runtime overhead"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript compiler",
          "Module bundler (Webpack, Vite)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=4.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Importação correta de assets"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para tipos e módulos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de declarações de módulos para assets estáticos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/global.d.ts": {
    "summary": "Este arquivo contém uma simples aliasação do objeto global de browser para o namespace do Chrome, especificamente para uso com Firefox. O código visa garantir compatibilidade e interoperabilidade entre APIs de extensão de navegador, permitindo que funcionalidades originalmente desenvolvidas para Chrome possam ser reutilizadas em Firefox sem alterações significativas. A abordagem facilita a manutenção e portabilidade do código, reduzindo a necessidade de múltiplas implementações para diferentes browsers. Apesar da simplicidade, essa técnica é fundamental para projetos que visam suporte multiplataforma em extensões web, garantindo que chamadas à API do navegador sejam uniformes e previsíveis, melhorando a experiência do desenvolvedor e a robustez do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Browser Extension Compatibility Layer"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "browser extensions",
          "cross-browser compatibility"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que chamadas à API do navegador sejam compatíveis entre Chrome e Firefox"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extension API",
          "Firefox WebExtension API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Alias Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/: código fonte principal",
          "types/: definições de tipos",
          "dist/: build final"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre módulos de compatibilidade e lógica de negócio"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para TypeScript e compatibilidade ES6"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs do navegador"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Diferenças entre APIs Chrome e Firefox podem causar incompatibilidades"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Compatibilidade cross-browser",
          "Clareza e simplicidade do código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar alias e limitações de compatibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de alias para compatibilidade entre Chrome e Firefox"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "WebExtension API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "WebExtension packaging"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações das APIs suportadas por cada navegador"
        ]
      }
    ]
  },
  "src/pages/types/index.ts": {
    "summary": "Este arquivo define um conjunto estruturado de enums e classes TypeScript que modelam ações de interação do usuário e eventos relacionados à automação de testes, especialmente para scripts do tipo Cypress. Ele encapsula diferentes tipos de ações como cliques, inputs, navegação, redimensionamento e captura de tela, representando cada uma com propriedades específicas para capturar detalhes contextuais e temporais. O código foca em representar o comportamento funcional das ações de UI, permitindo a criação, validação e manipulação de eventos de teste automatizados, facilitando a integração com sistemas de gravação e reprodução de testes. Além disso, inclui utilitários para validar tipos de ações suportadas, promovendo consistência e segurança na manipulação dos dados. A estrutura modular e tipada garante clareza e robustez para uso em pipelines de testes automatizados e análise de interações complexas em aplicações web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Automação de Testes UI com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Testes end-to-end",
          "Interação com UI web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Integridade dos dados de ações",
          "Validação de tipos de ações suportadas",
          "Captura precisa de eventos temporais"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress (para automação de testes)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Cypress Test Runner"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Inheritance",
          "Discriminated Union Types"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/actions - definição das ações e tipos",
          "src/utils - funções utilitárias (planejado)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para classes e enums",
          "camelCase para propriedades e funções"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos (enums, classes) e lógica utilitária"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide (implícito)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários JSDoc (a serem implementados)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29 (provável)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes de classes e funções"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para simular eventos e ações"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Campos de senha marcados com isPassword para tratamento especial"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na captura e reprodução de ações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Cypress"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Refatorar função isSupportedActionType para tipagem mais segura"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Cobertura de testes",
          "Clareza na modelagem de ações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para cada tipo de ação e suas propriedades"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de enums para garantir valores constantes e evitar strings mágicas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tsconfig.json": {
    "summary": "Este arquivo de configuração TypeScript define as opções do compilador para um projeto que utiliza React com suporte a JSX, visando compatibilidade com ES5 e bibliotecas modernas como DOM e ESNext. Ele habilita verificações estritas de tipo e consistência, garantindo qualidade e segurança no código, além de configurar resolução de módulos no estilo Node.js e interoperabilidade com módulos ES. A configuração exclui diretórios de build e dependências externas para otimizar o processo de compilação, suportando um fluxo de desenvolvimento robusto e escalável em um ambiente front-end moderno.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto React com TypeScript para front-end moderno"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento front-end",
          "React",
          "TypeScript",
          "Web applications"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento ativo"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir tipagem estrita para evitar erros em runtime",
          "Manter compatibilidade com ES5 para browsers legados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular",
          "Component-based"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src (código fonte)",
          "build (artefatos compilados)",
          "node_modules (dependências externas)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para componentes React e classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e build",
          "Resolução de módulos via Node.js"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "skipLibCheck:true para ignorar checagem de libs externas",
          "strict:true para checagem rigorosa"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript e React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "strict TypeScript com exceção para strictPropertyInitialization:false"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build rápido e eficiente",
          "Compatibilidade com browsers legados"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "TypeScript",
          "React",
          "Node.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "target ES5",
          "module ESNext"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipagem",
          "Conformidade com padrões TS e React"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação inline com JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de strict mode para evitar erros em produção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/build.js": {
    "summary": "Este arquivo de código configura o ambiente para uma build de produção utilizando Webpack, definindo variáveis de ambiente essenciais como BABEL_ENV, NODE_ENV e ASSET_PATH para garantir que o processo de build seja executado no modo correto. Ele importa a configuração do Webpack, ajusta o modo para 'production' e remove uma propriedade específica relacionada a extensões Chrome para evitar conflitos. O script executa o processo de build, capturando e exibindo erros e avisos detalhados no console, além de imprimir um resumo colorido e simplificado do status da compilação. Funcionalmente, o código automatiza a geração do bundle otimizado para produção, integrando-se ao fluxo de desenvolvimento para garantir que o output esteja pronto para deploy, com feedback claro sobre falhas e advertências, facilitando a manutenção e a qualidade do build final.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Webpack Production Build Script"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento Frontend",
          "Build Automation",
          "JavaScript"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Build deve ser executado em modo produção",
          "Erros de build devem ser reportados e impedir deploy"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 16+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Build Pipeline Script"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do Webpack",
          "scripts/ - scripts de build e automação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração (webpack.config.js) e execução (build script)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6+"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Build deve passar sem erros"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build automatizado via CI",
          "Deploy condicionado a build sem erros"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "node scripts/build.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Build otimizado para produção com minificação e tree shaking"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de cache via Webpack para builds incrementais"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Logs detalhados no console com stack trace e detalhes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console.error para erros, console.warn para avisos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Abortar build em caso de erro crítico"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "webpack",
          "webpack.config.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "webpack >=5.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "config/webpack.config.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de erros de build e warnings",
          "Conformidade com padrão de código"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação mínima para scripts de build"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Remoção de chromeExtensionBoilerplate para evitar conflito em builds de produção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "CI/CD pipeline com deploy automatizado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "BABEL_ENV",
          "NODE_ENV",
          "ASSET_PATH"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/env.js": {
    "summary": "Este módulo exporta um objeto simples que encapsula variáveis de ambiente essenciais para a configuração de uma aplicação Node.js, fornecendo valores padrão para NODE_ENV e PORT caso não estejam definidos no ambiente. Seu comportamento principal é garantir que a aplicação tenha parâmetros básicos de execução, como o ambiente de execução (development, production, etc.) e a porta de escuta, facilitando a configuração e inicialização do servidor. Essa abordagem promove flexibilidade e robustez na configuração, permitindo que o sistema se adapte automaticamente a diferentes contextos de implantação sem necessidade de alterações no código-fonte.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Configuração de ambiente para aplicação Node.js"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Configuração de software",
          "Node.js environment management"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Desenvolvimento inicial"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "NODE_ENV deve sempre estar definido",
          "PORT deve ser um número válido"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 18+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Module Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - arquivos de configuração centralizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Variáveis em UPPER_SNAKE_CASE para env vars",
          "Módulos em camelCase ou kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo isolado para configuração, sem dependências externas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "process.env (Node.js)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "NODE_ENV",
          "PORT"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "utils/webserver.js": {
    "summary": "Este arquivo configura e inicializa um ambiente de desenvolvimento para uma aplicação web utilizando Webpack e WebpackDevServer, focado em hot module replacement (HMR) para acelerar o ciclo de desenvolvimento. Ele ajusta variáveis de ambiente para modo development, modifica as entradas do Webpack para incluir clientes de hot reload, adiciona o plugin de HMR e cria um servidor de desenvolvimento que serve os arquivos estáticos, aceita conexões CORS e escreve os arquivos no disco. O código também suporta recarregamento automático de módulos durante o desenvolvimento, facilitando a produtividade e testes rápidos sem reiniciar o servidor manualmente. Essa configuração é típica para projetos que demandam feedback instantâneo em mudanças de código, especialmente em extensões Chrome ou aplicações web modernas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Chrome Extension Boilerplate",
          "Development Environment Setup"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Chrome Extensions",
          "Frontend Tooling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Development",
          "Local Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Hot Module Replacement must be enabled for dev mode",
          "Dev server must serve assets with CORS headers"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript (Node.js 16+)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Webpack 5",
          "WebpackDevServer 4"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular Configuration",
          "Middleware Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "config/ - configurações do Webpack e ambiente",
          "build/ - saída dos arquivos compilados",
          "src/ - código fonte da aplicação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes e plugins",
          "kebab-case para arquivos e pastas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre configuração (config) e execução (server)",
          "Dependência unidirecional do servidor para configuração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para ES6+, node environment"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e módulos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Nenhum type checking explícito (JavaScript puro)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/ localizados paralelamente ao código fonte"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para Webpack e WebpackDevServer APIs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy Staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "node scripts/start.js"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado neste arquivo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Nenhuma regra de autorização aplicada"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Access-Control-Allow-Origin: *"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Nenhuma criptografia aplicada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Baixa latência para hot reload e rebuild incremental"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade de feedback em desenvolvimento"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Webpack caching padrão para builds incrementais"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade limitada ao ambiente local de desenvolvimento"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Nenhum formato de erro customizado implementado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs padrão do Webpack e WebpackDevServer"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Nenhuma ferramenta de monitoramento integrada"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Hot Module Replacement para recuperação rápida de erros em desenvolvimento"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "webpack",
          "webpack-dev-server",
          "path",
          "env"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Compatibilidade com Webpack 5 e Node.js 16+"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "./env",
          "../webpack.config"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Configuração hardcoded para localhost e porta fixa"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Desabilitação de host check pode causar riscos de segurança"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum gargalo crítico identificado em ambiente local"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de configuração correta do HMR e variáveis de ambiente"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para configuração do ambiente de desenvolvimento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de HotModuleReplacementPlugin para acelerar desenvolvimento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Nenhuma API exposta diretamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development (localhost:PORT)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Local Node.js server"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "BABEL_ENV=development",
          "NODE_ENV=development",
          "ASSET_PATH=/",
          "PORT (definido em ./env)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessita Node.js ambiente local, porta disponível para servidor"
        ]
      }
    ]
  },
  "webpack.config.js": {
    "summary": "Não foi possível gerar descrição",
    "properties": []
  },
  ".gitignore": {
    "summary": "Este arquivo é um .gitignore configurado para um projeto de software que utiliza Node.js e tecnologias relacionadas. Ele define padrões para ignorar diretórios e arquivos que não devem ser versionados, como dependências instaladas (node_modules), artefatos de build (/build), relatórios de cobertura de testes (/coverage), arquivos de configuração local (.env.*), arquivos temporários e logs, além de diretórios específicos para armazenamento de dados sensíveis e arquivos gerados por ferramentas de desenvolvimento. O comportamento principal é garantir que apenas arquivos relevantes para o desenvolvimento e produção sejam versionados, evitando o comprometimento da segurança, a poluição do repositório e problemas de performance no controle de versão. A configuração também inclui exclusões específicas para diretórios personalizados (.prompts/, .logs/, .audios/) que indicam armazenamento de dados auxiliares ou temporários, reforçando a organização e segurança do projeto.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Projeto Node.js com controle de versionamento otimizado"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Desenvolvimento de software",
          "Node.js",
          "Controle de versão"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não versionar arquivos de dependências",
          "Não expor arquivos de configuração sensíveis",
          "Manter repositório limpo e organizado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript",
          "Node.js"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          ".gitignore pattern segmentation"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/node_modules para dependências",
          "/coverage para relatórios de teste",
          "/build para artefatos de produção",
          ".prompts, .logs, .audios para dados auxiliares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Arquivos .env para configurações locais",
          "secrets.*.js para arquivos sensíveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre código fonte e artefatos gerados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "/coverage para relatórios de teste"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install",
          "yarn install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Arquivos .env locais",
          "secrets.*.js"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "node_modules",
          "secrets.*.js"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          ".env.local",
          ".env.development.local",
          ".env.test.local",
          ".env.production.local"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/migration.ts": {
    "summary": "Este arquivo contém funções utilitárias para garantir a integridade temporal de objetos do tipo Action, focando na migração e validação de timestamps. A função migrateActionsTimestamp adiciona timestamps baseados em Date.now() para ações que não possuem ou possuem timestamps inválidos, aplicando um incremento de 100ms entre cada ação para simular intervalos naturais. Já a função validateActionTimestamps corrige timestamps negativos, inválidos ou desordenados, garantindo uma sequência temporal coerente e emitindo alertas via console para inconsistências detectadas. Essas operações são essenciais para manter a consistência temporal dos dados de ações, facilitando o processamento correto em sistemas que dependem de ordenação cronológica, como logs, eventos ou auditorias. O código é escrito em TypeScript, utiliza tipagem estática e segue boas práticas de imutabilidade e transformação funcional de arrays, integrando-se a um sistema maior que manipula ações com propriedades temporais.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Timestamp Migration and Validation Utility"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software Development",
          "Event Processing",
          "Action Logging"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "All actions must have valid, non-negative, and sequential timestamps"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Functional Programming",
          "Modular Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definição de tipos",
          "src/utils - funções utilitárias para manipulação de dados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos e funções utilitárias",
          "Dependência unidirecional de tipos para funções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/utils - testes unitários para funções utilitárias"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 90% cobertura para funções críticas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para Date.now() para controle de tempo em testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar latência na validação e migração de timestamps"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Operações em arrays grandes devem ser eficientes e imutáveis"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso de console.warn para alertas de timestamps inválidos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Correção automática de timestamps inválidos e negativos"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Type definitions from '../types'"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >= 4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso incorreto de 'number.isFinite' ao invés de 'Number.isFinite'"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência do relógio do sistema pode causar inconsistências"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Função migrateActionsTimestamp implementada e em uso"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de tipos e imutabilidade",
          "Cobertura de testes para casos de timestamp"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Uso consistente de JSDoc para funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos em português"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação entre migração e validação de timestamps para clareza e manutenção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/types/config.ts": {
    "summary": "Este arquivo define uma interface TypeScript para configuração de funcionalidades relacionadas a timing, especificamente para controle de waits baseados em timestamps. Ele permite habilitar ou desabilitar waits, além de configurar tempos mínimos e máximos de espera em milissegundos, com valores padrão estabelecidos. A configuração é essencial para modularizar e parametrizar comportamentos temporais em sistemas que dependem de delays controlados, garantindo flexibilidade e controle sobre o fluxo de execução assíncrona ou temporizada.",
    "properties": [
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Configuration Object Pattern"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      }
    ]
  },
  "tests/builders.test.ts": {
    "summary": "Este arquivo contém testes unitários para o módulo CypressScriptBuilder e a função truncateText, que são componentes essenciais para a geração automatizada de scripts de teste end-to-end utilizando Cypress. O CypressScriptBuilder encapsula uma API fluente para construir scripts Cypress, permitindo a composição de comandos como cliques, navegação, preenchimento de campos, redimensionamento de viewport, entre outros, facilitando a criação programática de testes UI. A função truncateText oferece uma utilidade para limitar o tamanho de strings, adicionando reticências quando necessário. O comportamento testado assegura que cada método do builder gera corretamente os comandos Cypress correspondentes, garantindo a integridade e previsibilidade da geração de scripts. O arquivo é fundamental para validar a lógica de construção de scripts Cypress, assegurando que a interface de alto nível abstraia corretamente os detalhes da API Cypress, promovendo reutilização e manutenção facilitada em projetos de automação de testes.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Cypress Script Automation",
          "Automação de scripts de teste end-to-end com Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "QA",
          "Test Automation",
          "End-to-End Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Desenvolvimento",
          "Testes unitários implementados",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Scripts gerados devem refletir fielmente ações do usuário",
          "Comandos Cypress devem ser válidos e executáveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress 12.x",
          "Jest 29"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Builder Pattern",
          "Fluent Interface"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/pages/builders - Contém construtores de scripts Cypress",
          "tests/ - Contém testes unitários"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes",
          "camelCase para funções e variáveis",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre lógica de construção de scripts e testes",
          "Mocks usados para isolar dependências"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Sem uso de any exceto em mocks"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes organizados por describe e test",
          "Mocks e spies para isolamento"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Jest spies para interceptar chamadas de métodos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "CypressScriptBuilder",
          "truncateText",
          "Jest"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Jest >=29",
          "Cypress >=12"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../src/pages/builders"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Cobertura de testes",
          "Clareza e legibilidade",
          "Uso correto de mocks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para APIs públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e claros",
          "PRs pequenos e focados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do Builder Pattern para geração de scripts Cypress"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "tests/extension.test.ts": {
    "summary": "Este arquivo de código é um conjunto de testes automatizados escritos em TypeScript utilizando Playwright e Jest para validar o comportamento funcional de uma extensão Chrome que grava interações do usuário e gera código Cypress correspondente. O código realiza a inicialização de um contexto de navegador Chromium com a extensão carregada, aguarda a ativação dos service workers da extensão e executa testes que verificam a instalação da extensão, a correta exibição das ações gravadas durante uma sessão de gravação e a geração do código Cypress esperado. O foco principal está em simular interações reais do usuário, como navegação, cliques, digitação e captura de screenshots, garantindo que a extensão capture e represente essas ações corretamente. Além disso, o código gerencia o ciclo de vida do contexto do navegador para garantir isolamento e limpeza após os testes. A abordagem permite validar a integração da extensão com páginas web e a geração de scripts de teste automatizados, facilitando a criação de testes end-to-end para aplicações web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Extensão para gravação de testes Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Test Automation",
          "Browser Extensions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "MVP",
          "Testes automatizados integrados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravação precisa das ações do usuário",
          "Geração correta do código Cypress",
          "Isolamento do contexto do navegador"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.x",
          "JavaScript ES2020+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Playwright 1.x",
          "Jest 29.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extensions API",
          "Chromium Browser"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Test Automation Pattern",
          "Page Object Pattern (implicit)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/tests - testes automatizados",
          "/build - extensão compilada",
          "/tmp - dados temporários para contexto do navegador"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes",
          "testes nomeados com descrições claras"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre testes e código da extensão",
          "Uso de imports explícitos para Playwright e Jest"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide (implícito)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários inline e JSDoc para funções principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29.x",
          "Playwright Test Runner"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes organizados em blocos beforeAll, afterAll e test",
          "Uso de async/await para controle assíncrono"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura focada em funcionalidades críticas da extensão"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Behavior Driven Development (BDD) style"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Uso mínimo de mocks, testes end-to-end reais com navegador"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes automatizados passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Execução de testes automatizados",
          "Build da extensão",
          "Deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Nenhum método de autenticação implementado no código de teste"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso via contexto do navegador isolado"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados do usuário armazenados temporariamente em /tmp"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente no código de teste"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Timeouts configurados para espera de service workers (15s no Jest, 5s na espera explícita)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Estabilidade e confiabilidade dos testes priorizadas sobre velocidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de userDataDir para persistência temporária do contexto do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Testes isolados para permitir execução paralela"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados via exceptions padrão do JavaScript"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso implícito de mensagens de erro via Jest"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Rejeição de promises em timeout para falha controlada"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "playwright",
          "jest",
          "chromium browser"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Jest timeout configurado para 15000ms"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Extensão localizada em ./build"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso de setInterval para polling pode ser substituído por eventos mais eficientes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Timeouts podem causar falhas intermitentes em ambientes lentos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Espera ativa para service workers pode impactar tempo total dos testes"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento detectada"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza nos testes, uso correto de async/await, cobertura de funcionalidades críticas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação inline para funções complexas e testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de Playwright para testes end-to-end da extensão Chrome"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Extensions API"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Local development",
          "Test environment"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Extensão Chrome carregada localmente via Playwright"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum variável de ambiente explícita"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Necessidade de ambiente com Chromium instalado"
        ]
      }
    ]
  },
  "src/pages/Common/styles.css": {
    "summary": "Este arquivo CSS define estilos para botões primários e utilitários de layout, focando em usabilidade, responsividade e feedback visual. Ele habilita a criação rápida de interfaces consistentes e acessíveis, com transições suaves e controle de espaçamentos, alinhamentos e cores, facilitando a padronização visual em aplicações web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "UI Component Library",
          "Button and Layout Styling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Frontend Styling",
          "UI/UX"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent visual feedback on interactive elements",
          "Accessibility compliance",
          "Responsive layout support"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "None (Vanilla CSS)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Atomic Design (Component-based CSS)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "styles/components - componentes reutilizáveis",
          "styles/utilities - classes utilitárias para layout e espaçamento"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like for components (.btn-primary)",
          "Utility-first for helpers (.p-1, .d-flex)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre componentes visuais e utilitários CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS standard conventions"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Possível uso de stylelint com regras para propriedades e ordem"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Consistent indentation and spacing"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Inline comments para propriedades específicas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Fast rendering",
          "Minimal repaint on hover"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Acessibilidade",
          "Performance CSS"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários inline para propriedades específicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Clara e objetiva, foco em comportamento visual"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de utilitários CSS para acelerar desenvolvimento",
          "Separação clara entre componentes e utilitários"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/RecordingDetail.tsx": {
    "summary": "O componente RecordingDetail é uma interface React que exibe detalhes de uma gravação de teste automatizado, permitindo ao usuário visualizar ações capturadas ou o código Cypress gerado para reprodução. Ele gerencia estados internos para alternar entre visualização de ações e código, controla a cópia do código para a área de transferência, possibilita o download do script gerado e oferece funcionalidades para iniciar, monitorar e interromper a reprodução do teste, com feedback visual do status do replay. A integração com hooks personalizados e utilitários auxilia na geração dinâmica do código, manipulação do download e controle do fluxo de replay, garantindo uma experiência interativa e responsiva para análise e execução de gravações de testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Replay Test Automation",
          "Interface para visualização e reprodução de gravações de testes automatizados"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes de software",
          "Test Automation, Cypress, Replay, UI Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com funcionalidades completas para visualização e replay"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade e fidelidade do código gerado a partir das ações",
          "Não permitir replay de gravações sem ações",
          "Manter sincronização correta do estado do replay e UI",
          "Evitar perda de dados durante cópia e download do código"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2",
          "FontAwesome 6 (free-solid-svg-icons)",
          "react-syntax-highlighter v15+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não aplicável (frontend client-side)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Hooks internos (useReplay) para controle de replay",
          "Clipboard API via react-copy-to-clipboard"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hook Pattern para estado e efeitos",
          "Separation of Concerns entre UI, lógica de replay e geração de código"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "components/ - componentes React reutilizáveis",
          "hooks/ - hooks customizados para lógica de negócio",
          "types/ - definições de tipos TypeScript",
          "utils/ - funções utilitárias para manipulação de texto e download",
          "themes/ - estilos globais e temas CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "constantes em UPPER_SNAKE_CASE",
          "prefixo 'handle' para funções de eventos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados por funcionalidade",
          "Hooks encapsulam lógica de replay",
          "Utils desacoplados para reutilização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para React, TypeScript, hooks e acessibilidade"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para 2 espaços, aspas simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e componentes principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipos explícitos para props e estados"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos componentes",
          "Testes unitários e de integração para UI e hooks"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes críticos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)",
          "Given-When-Then para testes de fluxo"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para hooks useReplay e APIs de clipboard",
          "Fixtures para dados de gravação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main protegida"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits para mensagens padronizadas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos 1 peer",
          "Checks automáticos de lint, build e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Pipeline com etapas de build, lint, test e deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "git clone <repo-url> && cd <repo> && npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Autenticação via token JWT (externo ao componente)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso para visualização e execução de gravações via backend"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e dados de gravação tratados com cuidado para não expor credenciais"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Cabeçalhos padrão aplicados pelo servidor (CSP, CORS, etc.)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Transmissão via HTTPS obrigatória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização da UI em menos de 200ms para datasets típicos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Prioridade para responsividade e fluidez da UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "ReplayMode permite controle de cache para otimizar replays"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Componentização facilita escalabilidade e manutenção"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Mensagens de erro exibidas no componente com ícones e texto claro"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de console para eventos importantes e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Integração externa para monitoramento (não detalhado no código)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Fallback para código antigo se geração de template falhar",
          "Botões desabilitados para evitar ações inválidas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "useReplay hook para controle do replay",
          "genCypressCodeWithTemplate para geração do código",
          "react-copy-to-clipboard para cópia"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum pacote deprecado identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Common/utils para download e manipulação de texto",
          "Content/ActionList para renderização das ações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros na geração de código",
          "Refatorar para reduzir complexidade do componente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível atraso na renderização com grandes volumes de ações"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Re-renderizações desnecessárias ao alterar estados de cópia e replay"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Tratamento robusto de erros",
          "Consistência no uso de hooks e estados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para componentes e funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de emojis para logs no console"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de react-syntax-highlighter para exibição de código",
          "Separação clara entre modos de visualização (ações vs código)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável diretamente (frontend)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, production",
          "URLs variam conforme ambiente"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker containerizado",
          "Deploy via CI/CD pipeline"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "REACT_APP_API_URL",
          "REACT_APP_ENVIRONMENT"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória para containers frontend",
          "Necessidade de HTTPS obrigatório"
        ]
      }
    ]
  },
  "src/pages/Popup/components/RecordingHistory.tsx": {
    "summary": "O componente RecordingHistory é uma interface React que gerencia e exibe um histórico de gravações de sessões, permitindo busca, ordenação, seleção múltipla, exclusão, exportação e importação de dados. Ele mantém estados internos para controlar carregamento, filtros, seleção e notificações, além de interagir com um serviço externo RecordingService para persistência e manipulação dos dados. A interface apresenta uma tabela dinâmica com colunas ordenáveis, suporte a seleção em massa e feedback visual, garantindo uma experiência fluida e responsiva para o usuário final.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History Manager",
          "Interface para gerenciamento e visualização de gravações de sessões"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application",
          "User Session Recording",
          "Frontend React",
          "Data Management"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estável com funcionalidades completas de CRUD e import/export"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não permitir exclusão sem confirmação do usuário",
          "Garantir integridade dos dados durante importação e exportação",
          "Manter ordenação e filtros consistentes após operações",
          "Notificar usuário sobre sucesso ou falha em operações críticas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2",
          "FontAwesome 6.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Não aplicável (armazenamento local via RecordingService abstraído)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "RecordingService (API interna para listagem, remoção, importação e exportação de gravações)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "Hooks Pattern",
          "Service Layer Abstraction"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes React reutilizáveis",
          "src/storage - serviços de persistência e manipulação de dados",
          "src/types - definições de tipos TypeScript",
          "src/Common/utils - funções utilitárias"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para funções e variáveis",
          "Prefixo 'handle' para callbacks de eventos",
          "Sufixo 'Btn' para botões"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados com props para comunicação",
          "Serviços externos acessados via importação explícita",
          "Separação clara entre UI e lógica de dados"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript, incluindo regras de acessibilidade e melhores práticas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para espaçamento, aspas simples e ponto e vírgula"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita para props e estados"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29 com React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em pasta __tests__ ao lado dos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes e serviços"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Testes unitários e de integração para UI e lógica"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de RecordingService para simular respostas e erros"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main e hotfix"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits para mensagens padronizadas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor, testes automáticos aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável no componente (assumido controle externo)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Confirmação explícita para exclusão de gravações"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de gravação tratados localmente, sem exposição direta"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Gerenciados pela aplicação host, não pelo componente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não aplicável diretamente no componente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Carregamento e filtragem devem ser responsivos, idealmente < 200ms para datasets moderados"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Prioridade para responsividade UI e experiência do usuário"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Caching interno via estado React, sem cache persistente explícito"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Adequado para volumes moderados de gravações; para grandes volumes, backend deve suportar paginação"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Mensagens de erro exibidas via notificações visuais com tipo 'success' ou 'error'"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de console para operações críticas (carregamento, exclusão, importação, exportação)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no componente, presumivelmente externo"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Recarregamento automático após importação e exclusão; notificações para feedback"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "RecordingService",
          "React 18",
          "FontAwesome Icons"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0",
          "TypeScript >=4.0",
          "FontAwesome 6.x"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../storage/recording-service",
          "../../types/recording",
          "../../Common/utils/text"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Ausência de paginação para grandes volumes de dados",
          "Dependência de confirmação via window.confirm"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível lentidão com muitos registros",
          "Exportação depende do browser suportar Blob e download via link"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Filtragem e ordenação feitas em memória no frontend"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Tratamento adequado de estados e efeitos",
          "Acessibilidade e usabilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação via JSDoc para componentes e funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português, uso de emojis para logs e notificações"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de hooks para estado e efeitos",
          "Separação clara entre UI e serviço de dados"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "API interna via RecordingService com métodos assíncronos para CRUD e import/export"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável diretamente no componente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON para importação e exportação de gravações"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento local, staging e produção (URLs não especificadas)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Deploy via pipeline CI/CD automatizado (provável Docker ou similar)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não especificadas no componente"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de browser moderno para APIs Blob e download"
        ]
      }
    ]
  },
  "src/pages/Popup/index.css": {
    "summary": "Este arquivo CSS define o estilo base para o elemento body de uma página web, configurando dimensões fixas, tipografia e comportamento de rolagem vertical. O código assegura uma experiência visual consistente ao aplicar uma fonte específica ('Roboto'), suavização de fontes para melhor legibilidade e um esquema de cores escuro com background customizável via variável CSS. Funcionalmente, o estilo controla o layout principal da página, garantindo que o conteúdo seja exibido dentro de uma área delimitada com rolagem vertical ativada, facilitando a navegação em conteúdos extensos. Este conjunto de regras contribui para a uniformidade visual e usabilidade da interface, integrando-se como base para estilos adicionais em um sistema maior.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Web UI Base Styling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Frontend Styling",
          "UI/UX"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent UI layout",
          "Accessible typography",
          "Responsive scrolling behavior"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Google Fonts (Roboto)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular CSS",
          "Theming with CSS Variables"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "styles/ - arquivos CSS base e componentes",
          "assets/ - fontes e imagens"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM (Block Element Modifier) recomendado para classes adicionais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos globais e componentes específicos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS Standard Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "stylelint com regras padrão para CSS3"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier para CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários CSS padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Font loading performance",
          "Rendering smoothness"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Roboto font",
          "CSS variable --bg-dark"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Uso de dimensões fixas pode limitar responsividade"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Fallback visual se variável --bg-dark não estiver definida"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Carregamento da fonte externa pode impactar renderização inicial"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Performance de fontes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros sobre variáveis e propriedades usadas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e técnico, foco em comportamento e impacto visual"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Escolha da fonte Roboto para legibilidade e padrão visual"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "--bg-dark"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/storage/recording-service.ts": {
    "summary": "O código implementa um serviço de gerenciamento de gravações de ações de usuário, abstraindo a complexidade do armazenamento e fornecendo uma API simples para criação, listagem, busca, remoção, importação e exportação dessas gravações. Ele gera identificadores únicos baseados em hostname e timestamp, suporta geração de código Cypress para testes automatizados, e oferece funcionalidades para manipulação em lote, incluindo importação e exportação em formatos JSON. O serviço mantém a integridade dos dados com validações, tratamento de erros e evita colisões de IDs, integrando-se com um armazenamento persistente externo para garantir a consistência e disponibilidade das gravações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording Management Service",
          "Serviço para gerenciamento de gravações de ações para automação de testes"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "QA",
          "Test Automation",
          "Cypress",
          "Recording Actions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Gravações vazias não podem ser salvas",
          "IDs de gravação devem ser únicos",
          "Importação deve validar formato e evitar duplicatas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "recordingStore (abstração de storage, tipo não especificado)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Service Facade",
          "Modularização"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/types - definições de tipos",
          "/builders - geração de código",
          "/services - lógica de negócio e abstração de storage"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e métodos",
          "snake_case para variáveis locais",
          "IDs formatados como hostname:data_hora_sufixo"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, builders e serviços",
          "recordingStore encapsula persistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para async/await, uso de tipos, e tratamento de erros"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para métodos públicos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipagem explícita em métodos públicos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em /tests/services",
          "Testes unitários para métodos do RecordingService"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para serviços críticos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Testes de integração para import/export"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de recordingStore para isolar testes",
          "Fixtures para gravações de exemplo"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Testes unitários e integração",
          "Deploy automático em staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não implementado no serviço (deve ser tratado externamente)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não implementado no serviço (requer controle externo)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e ações de usuário armazenadas, devem ser protegidas"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado, recomendada criptografia em trânsito e em repouso"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações CRUD devem responder em milissegundos para volumes moderados"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Equilíbrio entre velocidade e memória, foco em responsividade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Não implementado, possível melhoria futura"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Dependência do storage externo para escalabilidade horizontal"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados como Exceptions com mensagens claras"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs detalhados para operações de importação e exportação",
          "Uso de console para logs, warnings e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento parcial com mensagens e continuação em importação parcial"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "recordingStore",
          "genCypressCode",
          "genCypressCodeWithTemplate"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types",
          "../builders",
          "./recording-store"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência de armazenamento não especificado",
          "Ausência de controle de acesso"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Performance pode degradar com grande volume de gravações",
          "Tratamento limitado de URLs inválidas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Listagem e filtragem em memória sem paginação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Suporte a formatos antigos e novos na importação"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Validação de erros",
          "Consistência de IDs",
          "Tratamento assíncrono correto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para métodos públicos",
          "Comentários explicativos em blocos complexos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Uso de emojis em logs para clareza",
          "Mensagens claras e objetivas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter compatibilidade com geração antiga de código Cypress",
          "Gerar IDs únicos para evitar colisões"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "API interna baseada em métodos assíncronos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON para exportação e importação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não implementado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Desenvolvimento",
          "Staging",
          "Produção"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de armazenamento externo para persistência"
        ]
      }
    ]
  },
  "src/pages/storage/recording-store.ts": {
    "summary": "Este arquivo implementa um store singleton para gerenciar o histórico de gravações utilizando a API chrome.storage.local, garantindo persistência local eficiente e controle sobre o volume de dados armazenados. Ele oferece funcionalidades para salvar, listar, obter, remover e limpar gravações, aplicando uma estratégia configurável de poda para limitar o número máximo de entradas, evitando crescimento descontrolado do armazenamento. Além disso, inclui um mecanismo de migração para converter gravações antigas em um novo formato estruturado, facilitando a manutenção e evolução do sistema. O uso de debounce para operações de salvamento otimiza a performance, reduzindo chamadas excessivas ao storage. O design modular e o padrão Singleton asseguram uma única instância gerenciadora, promovendo consistência e integridade dos dados no contexto de extensões Chrome ou aplicações que utilizam gravações de ações do usuário.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History Manager",
          "Gerenciamento de histórico de gravações para extensões Chrome"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Browser Extension",
          "User Action Recording",
          "chrome.storage API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Limite máximo de entradas no histórico não pode ser ultrapassado sem poda",
          "Integridade dos dados de gravação deve ser mantida",
          "Migração de dados antigos deve preservar ações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework frontend/backend explícito"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "chrome.storage.local (armazenamento local do navegador)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "chrome.storage API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Strategy (para pruneStrategy)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/types - definições de tipos",
          "src/store - gerenciamento de estado e persistência",
          "src/actions - definição de ações do usuário"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para classes e interfaces",
          "camelCase para métodos e variáveis",
          "Constantes em UPPER_SNAKE_CASE"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tipos, store e ações",
          "Dependência unidirecional do store para tipos e chrome API"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "TypeScript ESLint Recommended"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Regras padrão ESLint para TypeScript",
          "Sem regras customizadas explícitas no código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação de métodos e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipos explícitos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Não especificado no código fornecido"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável (contexto local de extensão)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados de gravação de ações do usuário, tratados localmente sem exposição externa"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Não especificado, armazenamento local sem criptografia explícita"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações de salvamento com debounce para evitar latência excessiva"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar chamadas ao storage para preservar performance e evitar bloqueios"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Uso de cache interno temporário (pendingSaves) para agrupar operações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Limitação do número máximo de entradas para evitar crescimento descontrolado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros lançados com mensagens claras, logs no console para diagnóstico"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Uso de console.warn e console.error para alertas e erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tratamento de erros com fallback para evitar falhas críticas, especialmente em operações assíncronas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.storage.local",
          "Tipos externos (RecordingEntry, HistoryConfig, Action)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript 4.x compatível",
          "API chrome.storage local padrão"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../types/recording para tipos compartilhados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência da API chrome.storage local que pode ter limitações de quota"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível perda de dados se ocorrer erro durante flushPendingSaves"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Operações síncronas bloqueantes evitadas, mas potencial lentidão se histórico crescer muito"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração da última gravação implementada e executada sob demanda"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos",
          "Tratamento correto de erros assíncronos",
          "Uso adequado do padrão Singleton"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para métodos públicos e classes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros em português explicando lógica e decisões"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do padrão Singleton para store",
          "Uso de debounce para otimização de salvamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável (API local chrome.storage)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises retornando dados ou void"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Debounce interno para limitar frequência de gravações"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Extensão Chrome local, ambiente browser"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Distribuição via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Não aplicável"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações de armazenamento do chrome.storage.local (~5MB)"
        ]
      }
    ]
  },
  "src/pages/types/recording.ts": {
    "summary": "O código define interfaces TypeScript para um sistema de histórico de gravações focado em capturar, armazenar e gerenciar sessões de gravação de ações de usuário em páginas web. Ele estrutura dados detalhados como identificadores únicos, timestamps, URLs, ações gravadas e código gerado para testes automatizados com Cypress, além de configurar políticas para gerenciamento do histórico, como limite máximo de entradas e estratégias de poda. A interface backend padroniza operações assíncronas para salvar, listar, recuperar, remover e limpar gravações, garantindo integração consistente e controle sobre o ciclo de vida dos dados de gravação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History System - Gerenciamento e Persistência de Sessões de Gravação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes, gravação de ações de usuário, QA, Cypress, Web Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir unicidade do ID da gravação",
          "Manter integridade temporal (startedAt < endedAt)",
          "Limitar número máximo de gravações conforme configuração",
          "Preservar ações e código gerado para reprodutibilidade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Node.js 20.x",
          "Cypress 12.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "Nenhum banco de dados explícito (persistência pode ser via filesystem ou storage customizado)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Nenhum serviço externo diretamente referenciado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Interface Segregation",
          "Repository Pattern (IHistoryBackend abstrai persistência)",
          "DTO (Data Transfer Object) para RecordingEntry"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/ - código fonte principal",
          "src/interfaces/ - definições de tipos e contratos",
          "src/backend/ - implementações de persistência",
          "src/actions/ - definição e manipulação de ações gravadas"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para interfaces e classes",
          "camelCase para propriedades e métodos",
          "PascalCase para tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre definição de tipos (interfaces) e implementação",
          "Backend isolado via interface para permitir múltiplas implementações"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Regras para evitar any implícito e garantir tipagem estrita"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode habilitado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos",
          "Testes unitários para interfaces e implementações backend"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then",
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para backend de persistência",
          "Fixtures para dados de gravação"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um revisor",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Não aplicável diretamente no módulo de histórico"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso deve ser implementado externamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "URLs e código gerado podem conter dados sensíveis e devem ser protegidos"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Persistência deve garantir criptografia em repouso conforme política da organização"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Operações CRUD devem responder em menos de 200ms em ambiente típico"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Priorizar velocidade de acesso e baixa latência"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache local em memória para listagem recente"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a crescimento linear no número de gravações com poda automática"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erros retornam Promise rejeitada com objeto Error padrão"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs de operações críticas e falhas via sistema externo"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Integração com Sentry ou similar para monitoramento de erros"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Tentativas de retry para operações de persistência falhas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Action interface do módulo './index'",
          "Cypress para geração de código"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum pacote deprecado identificado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Node.js >=20"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Módulo './index' para definição de Action"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Implementação concreta do backend ainda pendente",
          "Suporte a múltiplas estratégias de persistência"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível inconsistência se timestamps forem inválidos",
          "Limite de maxEntries pode causar perda de dados se não gerenciado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Listagem completa pode ser custosa sem paginação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Nenhuma migração em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos e contratos",
          "Cobertura de testes e tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para todas as interfaces públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, foco em comportamento e regras de negócio"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de interface para backend para permitir flexibilidade de implementação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Não aplicável diretamente (API interna via interfaces)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via controle de pacotes e semântico"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Promises com objetos tipados ou null"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável diretamente"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker containerizado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "HIST_MAX_ENTRIES",
          "HIST_PRUNE_STRATEGY"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Armazenamento persistente confiável para gravações",
          "Limitação de espaço para histórico configurável"
        ]
      }
    ]
  },
  "src/pages/Popup/Popup.css": {
    "summary": "Este arquivo CSS define um tema dark unificado para uma aplicação web, configurando variáveis de cor e estilos específicos para componentes visuais como popups e barras de rolagem customizadas. O código aplica um esquema de cores escuras globalmente, garantindo consistência visual e melhor experiência do usuário em ambientes com baixa luminosidade. Além disso, personaliza a aparência da scrollbar para navegadores baseados em WebKit, melhorando a usabilidade e estética do sistema sem impactar a lógica funcional da aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Dark Theme UI Styling",
          "Unified dark mode theme for web application"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application",
          "UI/UX Design",
          "Frontend Styling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production",
          "Stable UI Theme"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistent dark mode application",
          "Accessibility compliance for color contrast"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3",
          "JavaScript (React integration)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-based UI Styling",
          "Theming via CSS Variables"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "styles/: arquivos CSS globais e temáticos",
          "components/: componentes React com estilos associados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like CSS classes",
          "camelCase para variáveis JS",
          "kebab-case para arquivos CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre lógica React e estilos CSS",
          "Importação de temas via index.jsx"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS Standard Style Guide",
          "Airbnb JavaScript Style Guide para React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "stylelint para CSS",
          "eslint para JS/React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para CSS e JS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários CSS inline",
          "JSDoc para componentes React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode para React"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29",
          "React Testing Library"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs e serviços externos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy stages"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "UI responsiveness",
          "Low memory footprint"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "CSS variables defined globally",
          "React index.jsx import"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Scrollbar customization limited to WebKit browsers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em CSS e JS",
          "Documentação de theming"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e direto em comentários e PRs"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adotado dark mode unificado via CSS variables",
          "Scrollbar customizada para WebKit"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/LogoFleury.tsx": {
    "summary": "O arquivo contém um componente React funcional que renderiza o logo da empresa Fleury utilizando SVG. O componente é parametrizável, permitindo ajuste da altura e aplicação de classes CSS para customização visual, mantendo a identidade visual da marca com cores fixas. Seu comportamento é estático, sem manipulação de estado ou efeitos colaterais, focado em fornecer uma representação visual reutilizável e otimizada do logo para integração em interfaces web, garantindo consistência e flexibilidade na apresentação gráfica.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Brand Identity Component"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Healthcare",
          "Branding",
          "UI Components"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter identidade visual consistente",
          "Garantir acessibilidade e responsividade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x",
          "JavaScript ES6+"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes reutilizáveis de UI"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes React",
          "camelCase para props e variáveis"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados sem dependências internas complexas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para comentários de componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ dentro da pasta components"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot Testing para componentes visuais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para props e estilos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório e testes aprovados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida e leve",
          "Baixo consumo de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Aderência a padrões de código",
          "Testes de snapshot"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de SVG inline para performance e flexibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/LayoutWrapper.css": {
    "summary": "Este arquivo CSS define o layout principal e o tema visual para uma aplicação web com foco em uma interface dark mode unificada. Ele estrutura o container principal com dimensões fixas de 800x600 pixels, organizando o conteúdo em colunas flexíveis e aplicando estilos específicos para o header, botões e áreas de conteúdo. O código também implementa uma scrollbar customizada para melhorar a experiência do usuário, além de ajustar o padding e alinhamento para diferentes views, como home, history e detail. O uso de variáveis CSS para cores, espaçamentos e transições garante consistência visual e facilita a manutenção do tema escuro em toda a aplicação.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Layout Dark Mode Unificado",
          "Interface Web Responsiva"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application UI",
          "Dark Theme Design"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização de UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual do tema dark",
          "Responsividade do layout",
          "Acessibilidade mínima via contraste"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3",
          "CSS Variables"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework CSS explícito",
          "Possível integração com React ou similar"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based UI",
          "Theming via CSS Variables"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "themes/ - arquivos de tema",
          "layout/ - componentes de layout"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like para classes CSS",
          "prefixo layout- para containers principais"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre tema e layout",
          "Estilos específicos para views distintas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS Standard",
          "Uso consistente de variáveis CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Possível uso de stylelint com regras para variáveis e propriedades"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação de 2 espaços",
          "Quebra de linha após blocos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários em português explicativos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "UI responsiveness",
          "Smooth scrolling"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "../themes/dark-core.css"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "themes/dark-core.css"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em português",
          "Explicação de variáveis e blocos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e direto",
          "Comentários explicativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de dark mode unificado via CSS Variables",
          "Layout fixo para 800x600"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/LayoutWrapper.tsx": {
    "summary": "O componente LayoutWrapper é um wrapper React funcional que unifica o layout visual das diferentes views de um popup, garantindo consistência na interface com um header padronizado contendo logo, título opcional e botão de navegação para voltar. Ele aceita children para renderizar o conteúdo principal e permite customização do layout via prop 'view', que altera a classe CSS aplicada para diferentes contextos (home, history, detail). O componente não mantém estado interno, focando em composição e apresentação, facilitando a reutilização e padronização do design em múltiplas telas do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Popup UI Consistency Wrapper"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Frontend UI",
          "React",
          "Popup Interface"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual entre views",
          "Navegação clara com botão de voltar"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Container/Presenter",
          "Component Composition"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components - componentes React reutilizáveis",
          "src/assets - arquivos estáticos como imagens e SVGs",
          "src/styles - arquivos CSS globais e modulares"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "PascalCase para componentes",
          "camelCase para props e funções",
          "kebab-case para classes CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Componentes isolados com props explícitas",
          "Separação clara entre lógica e apresentação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para comentários de funções e componentes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "__tests__ folders próximos aos componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          ">= 80% coverage"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para callbacks e props"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Renderização rápida e leve para UI"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "react",
          "font-awesome",
          "logo.svg",
          "LayoutWrapper.css"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0",
          "TypeScript >=4.9"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de props",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "JSDoc para componentes e funções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Clara e objetiva, comentários explicativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de componentes funcionais para melhor performance e simplicidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipeline via GitHub Actions"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/dark-theme.css": {
    "summary": "Este arquivo CSS define um tema Dark para componentes de interface relacionados a um Popup de histórico de gravações, focando na estilização visual e usabilidade. Ele estiliza tabelas de histórico, campos de busca, checkboxes, botões de ação, detalhes de gravação, abas, listas de ações, exibição de código, estados vazios e de carregamento, garantindo uma experiência consistente e acessível. O código enfatiza a responsividade, feedback visual em interações (hover, foco, disabled), e mantém uma paleta de cores baseada em variáveis CSS para fácil customização e manutenção, suportando funcionalidades essenciais para navegação, filtragem e visualização detalhada de dados de gravações em um ambiente escuro.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Popup Recording History UI",
          "Interface para visualização e interação com histórico de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software de gravação",
          "UX/UI para análise de gravações",
          "Dark theme styling"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização visual e usabilidade"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual do tema Dark",
          "Feedback visual claro para interações",
          "Acessibilidade mínima para leitura e navegação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3",
          "CSS Variables"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework CSS explícito",
          "Possível integração com React ou similar para componentes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Font icon libraries (ex: FontAwesome)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular CSS",
          "Component-based styling"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos organizados por componente (ex: recording-history-table, action-buttons, tabs)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like class names",
          "Uso de prefixos para componentes (ex: recording-detail, action-list)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Estilos isolados por componente para evitar vazamento de CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS padrão com variáveis CSS para temas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação consistente",
          "Uso de comentários para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários CSS simples para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Performance visual e responsividade",
          "Transições suaves para melhor UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Variáveis CSS para tema",
          "Font icons para elementos visuais"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência de variáveis CSS externas pode dificultar manutenção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível baixa acessibilidade se contraste não for suficiente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros para seções CSS"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de tema Dark com variáveis CSS para flexibilidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/detail-dark.css": {
    "summary": "Este arquivo CSS define um tema Dark para o componente RecordingDetail, focado em proporcionar uma interface visual moderna, responsiva e acessível para exibição detalhada de gravações. O estilo organiza a estrutura em flexbox, garantindo layout flexível e adaptável, com ênfase em hierarquia visual clara através de cores, espaçamentos e tipografia. Elementos interativos como botões de navegação, abas (tabs) e ações possuem transições suaves e feedback visual para melhorar a experiência do usuário. O código também estiliza containers para exibição de código fonte e listas de ações, facilitando a leitura e interação com dados técnicos, mantendo consistência com variáveis CSS para cores e sombras, o que permite fácil customização e manutenção. A abordagem modular e semântica do CSS suporta integração com sistemas maiores, promovendo reutilização e escalabilidade do design.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "RecordingDetail Dark Theme",
          "Interface para visualização detalhada de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Software de monitoramento",
          "Recording analysis",
          "UI/UX design"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização do tema visual"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual entre temas",
          "Legibilidade e acessibilidade",
          "Feedback visual claro para ações do usuário"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3",
          "CSS Variables"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React (suposição pelo padrão de classes e estrutura)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular CSS",
          "Theming via CSS Variables",
          "BEM-like naming"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "styles/components/recordingDetail - CSS modular para componentes específicos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like: .modern-recording-detail, .modern-detail-header, .modern-tab"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre containers, cabeçalhos, conteúdo e ações"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS3 com uso de variáveis CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários simples para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "CSS variables definidas globalmente",
          "SVG icons"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência de variáveis CSS externas pode causar inconsistência"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Overflow em listas longas pode impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Estados interativos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros para seções CSS"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de tema Dark via CSS variables",
          "Uso de BEM-like naming para modularidade"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/history-dark.css": {
    "summary": "Este arquivo CSS define um tema Dark moderno para a interface de um componente RecordingHistory, focado em proporcionar uma experiência visual consistente e acessível para a visualização e manipulação de históricos de gravações. Ele estrutura a interface em seções claras, como cabeçalho, toolbar, área de conteúdo e tabelas, utilizando variáveis CSS para cores e estilos que garantem contraste adequado e responsividade visual. O código inclui estilos para botões interativos, campos de busca, estados vazios e carregamento, além de elementos de tabela com linhas clicáveis e botões de ação, suportando funcionalidades como seleção múltipla via checkboxes e exclusão de registros. A abordagem modular e o uso de transições suaves indicam foco em usabilidade e feedback visual, facilitando a integração com componentes JavaScript para manipulação dinâmica do estado e dados do histórico de gravações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "RecordingHistory UI Theme",
          "Interface para histórico de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Application",
          "User Interface",
          "Recording Management"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização visual"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Consistência visual do tema",
          "Feedback visual claro para ações do usuário",
          "Acessibilidade básica para navegação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework CSS explícito",
          "Possível integração com React ou Vue para JS"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modular CSS",
          "Component-based UI styling"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos organizados por componente UI",
          "Separação clara entre header, toolbar, content e tabela"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes com prefixo 'modern-' para escopo",
          "Uso de nomes descritivos e BEM-like"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Estilos isolados para RecordingHistory",
          "Dependência de variáveis CSS globais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS padrão, uso consistente de variáveis CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação consistente",
          "Uso de espaços para alinhamento"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários mínimos, apenas cabeçalho do arquivo"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade visual",
          "Transições suaves"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a tabelas com overflow e scroll vertical"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Variáveis CSS globais",
          "JavaScript para manipulação de estado"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência de variáveis CSS externas não documentadas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Possível lentidão em tabelas muito grandes devido a overflow e transições"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Acessibilidade básica"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários explicativos para variáveis CSS e estados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários sucintos e objetivos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de tema Dark para melhor experiência noturna"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/styles.css": {
    "summary": "Este arquivo CSS define estilos modernos e responsivos para componentes de interface relacionados ao histórico e detalhes de gravações (recordings). Ele organiza visualmente listas de gravações, ferramentas de busca, seleção, exportação e visualização detalhada, utilizando técnicas avançadas de layout como flexbox e grid, além de efeitos visuais como animações, gradientes animados e sombras para melhorar a experiência do usuário. O código enfatiza a usabilidade com estados de foco, transições suaves e responsividade para diferentes tamanhos de tela, suportando funcionalidades como seleção múltipla, alternância de visualizações e ações sobre gravações, garantindo uma interface intuitiva e visualmente atraente para gerenciamento e análise de dados de gravações em um sistema web.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Recording History UI",
          "Interface para gerenciamento e visualização de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Media Management",
          "User Interaction",
          "Recording Analytics"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade visual e responsividade",
          "Garantir acessibilidade e usabilidade",
          "Preservar estados de seleção e ações do usuário"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework CSS explícito, uso de variáveis CSS customizadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based UI Styling",
          "Responsive Design"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos organizados por contexto: history, detail, modern variants"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like classes",
          "Prefixos para contexto (.recording-, .modern-)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos de histórico e detalhes",
          "Modularidade visual para componentes reutilizáveis"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS moderno com variáveis e flexbox/grid",
          "Uso consistente de nomenclatura e organização"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação consistente",
          "Uso de espaços para separação"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários em português explicando blocos principais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade",
          "Suavidade nas animações",
          "Baixo impacto visual"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Layouts adaptativos para múltiplos dispositivos",
          "Scrolls otimizados para listas grandes"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Variáveis CSS customizadas (ex: --bg-dark, --bg-darker)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Acessibilidade",
          "Responsividade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em português para blocos CSS"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e direto, com foco em usabilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação entre estilos modernos e legacy",
          "Uso de animações para feedback visual"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/utils/download.ts": {
    "summary": "Este arquivo contém utilitários para facilitar o download de arquivos de teste Cypress em formato TypeScript, focando na criação de nomes de arquivos sanitizados e seguros, preparação do conteúdo para download e execução do processo de download via browser. Ele implementa funções para sanitizar nomes de arquivos removendo caracteres inválidos, gerar nomes baseados em títulos com timestamp, preparar objetos exportáveis contendo nome e conteúdo do arquivo, e realizar o download efetivo criando blobs e links temporários no DOM. O código é robusto, tratando erros durante o download e garantindo limpeza dos recursos alocados. Sua funcionalidade habilita a exportação automatizada e segura de scripts de teste Cypress, integrando-se facilmente em fluxos de gravação e exportação de testes automatizados, melhorando a experiência do usuário e a confiabilidade do processo.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Cypress Test Exporter",
          "Ferramenta para exportação automatizada de testes Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de Testes",
          "QA",
          "Cypress",
          "Test Scripts"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Nomes de arquivos devem ser válidos para sistemas de arquivos",
          "Downloads devem ser disparados sem falhas",
          "Conteúdo exportado deve refletir o código gerado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress (para testes e geração de código)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Browser Web APIs (Blob, URL, DOM)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização funcional",
          "Interface para tipagem clara"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/utils - funções utilitárias para download e manipulação de arquivos",
          "src/interfaces - definições de tipos e interfaces"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para interfaces",
          "snake_case para nomes sanitizados de arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre preparação de dados (createTestFilename, prepareTestDownload) e execução do download (downloadTestFile)"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript",
          "Proibição de any implícito",
          "Regras para evitar side effects em funções puras"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e interfaces"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode ativado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários para funções utilitárias em src/utils/__tests__"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90% para funções críticas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de APIs Web (Blob, URL) para testes isolados"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Lint",
          "Test",
          "Deploy automático para staging"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "N/A (funcionalidade client-side sem autenticação)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "N/A (funcionalidade client-side)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Download deve ser disparado imediatamente após chamada"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na criação e disparo do download"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "URLs temporárias revogadas após uso para liberar memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade não aplicável, operação local no browser"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erro lançado com mensagem clara em caso de falha no download"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs no console para sucesso e erro"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Erro é lançado para ser tratado externamente, sem retry automático"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Browser Web APIs (Blob, URL, DOM)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0 para suporte a features usadas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar mensagens de erro para diagnóstico mais detalhado"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Sanitização pode gerar nomes duplicados para títulos iguais no mesmo dia"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum identificado, operação local e rápida"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Projeto está em produção estável, sem migrações em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Tratamento adequado de erros",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara via JSDoc para todas as funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, sem redundância"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de nomes sanitizados para evitar erros em sistemas de arquivos",
          "Download via Blob e URL temporária para compatibilidade cross-browser"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "N/A (módulo utilitário client-side)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "N/A"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev",
          "staging",
          "prod"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Deploy via CI/CD pipeline para ambiente web"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Dependência de ambiente browser para execução"
        ]
      }
    ]
  },
  "src/pages/Common/utils/text.ts": {
    "summary": "Este arquivo contém utilitários para manipulação de texto, focados em truncamento de strings para exibição otimizada em interfaces de usuário. A função truncateText limita o comprimento de um texto qualquer, adicionando reticências quando ultrapassa o limite definido, garantindo legibilidade e economia de espaço. Já a função truncateUrl remove o protocolo HTTP/HTTPS de URLs e mantém o domínio junto com parte do caminho, truncando de forma inteligente para preservar informações relevantes sem exceder o tamanho máximo. Essas funções são essenciais para melhorar a experiência do usuário em aplicações web, evitando que textos longos ou URLs comprometam o layout ou a usabilidade. O código é simples, sem efeitos colaterais, e pode ser facilmente integrado em sistemas front-end que demandem manipulação e apresentação de strings de forma concisa e clara.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Text Utilities Module",
          "Manipulação e truncamento de textos para UI"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Web Development",
          "Frontend",
          "User Interface",
          "Text Processing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Production",
          "Stable Utility Functions"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Não truncar textos menores que o limite",
          "Preservar domínio completo em URLs truncadas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Utility Module",
          "Functional Programming"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/utils - funções utilitárias para manipulação de dados e strings"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "PascalCase para tipos e classes"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Módulo isolado sem dependências externas, exporta funções puras"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/utils - testes unitários para funções utilitárias"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 90% para funções utilitárias"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Não aplicável - funções puras sem dependências externas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Testes automatizados passando"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Lint",
          "Testes unitários",
          "Build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Funções síncronas com tempo de execução constante e baixo"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Velocidade e simplicidade"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Funções puras facilmente escaláveis e reutilizáveis"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Retorna string vazia ou texto original, sem lançar exceções"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retorno seguro para entradas inválidas ou vazias"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível truncamento excessivo em URLs com domínios muito longos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza e simplicidade das funções",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para todas as funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e em português para contexto"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Manter funções puras para facilitar testes e manutenção"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/components/recording-detail.css": {
    "summary": "O código CSS apresentado define o estilo para o componente RecordingDetail, que oferece uma visualização detalhada de gravações com tema dark, focando em alta qualidade visual e usabilidade. Ele estrutura o layout em flexbox, organiza cabeçalhos, metadados, áreas de conteúdo, abas de navegação, barras de ferramentas e botões com estados interativos, além de suportar responsividade para dispositivos móveis. O componente também inclui animações suaves, barras de progresso customizadas e tratamento visual para estados de erro e carregamento, garantindo uma experiência consistente e acessível para usuários que precisam analisar e interagir com gravações de forma eficiente e visualmente agradável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "RecordingDetail Component - Visualização detalhada de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Interface de usuário para análise de gravações em sistemas de monitoramento e replay",
          "terminologia técnica em inglês para precisão (ex: replay, toolbar, tabs)"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter alta legibilidade e usabilidade em tema dark",
          "Garantir responsividade e acessibilidade em múltiplos dispositivos",
          "Exibir estados de erro e carregamento de forma clara e distinta",
          "Preservar consistência visual e interatividade dos botões e abas"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Possível integração com React 18.x (baseado em classes e nomenclatura CSS modular)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm ou yarn (comum em projetos front-end React)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "CSS Modular / BEM-like naming conventions"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/components/RecordingDetail - componente e estilos relacionados",
          "src/assets - variáveis CSS e temas",
          "src/utils - helpers para animações e responsividade"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Prefixo 'recording-detail' para classes CSS",
          "Uso de kebab-case para classes",
          "Variáveis CSS customizadas com prefixo '--'"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Estilos isolados para o componente RecordingDetail",
          "Separação clara entre header, content, toolbar e views"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Guia de estilo CSS moderno com variáveis e flexbox",
          "Uso consistente de espaçamentos e cores via variáveis"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "stylelint com regras para evitar !important e garantir consistência"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier configurado para CSS com indentação de 2 espaços"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários CSS explicativos para seções e blocos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29 para testes unitários de componentes React associados"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em src/components/RecordingDetail/__tests__"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para componentes visuais e interações"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)",
          "Given-When-Then para testes comportamentais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs de dados e eventos de usuário",
          "Fixtures para estados de gravação e erro"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow com branches feature, develop e main"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits para mensagens padronizadas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos 2 desenvolvedores",
          "Checks automáticos de lint, build e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Pipeline com etapas de build, lint, test e deploy automatizado"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Renderização rápida para manter fluidez na navegação e troca de abas"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Prioridade em velocidade e responsividade sobre uso de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a múltiplas gravações e estados sem perda de performance"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Estados visuais claros para erros com cores e ícones específicos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Interface permite re-tentativas e feedback visual imediato"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Variáveis CSS globais para cores e espaçamentos",
          "React para renderização do componente"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Necessidade de migração para CSS-in-JS para melhor manutenção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Scrollbars customizadas podem apresentar inconsistências em alguns browsers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual e responsividade",
          "Clareza nos estados de erro e carregamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários CSS explicativos e documentação de componentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e uso de termos técnicos em inglês para precisão"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção de tema dark como padrão para melhor conforto visual",
          "Uso de flexbox para layout flexível e responsivo"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker containerizado para front-end",
          "Deploy via CI/CD pipeline automatizado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações de largura de banda para assets estáticos",
          "Compatibilidade com navegadores modernos e fallback para antigos"
        ]
      }
    ]
  },
  "src/pages/Popup/components/recording-history.css": {
    "summary": "Este arquivo CSS define estilos específicos para o componente RecordingHistory, que apresenta uma tabela moderna com tema dark para exibir um histórico de gravações. O código foca em proporcionar uma interface visualmente organizada e responsiva, incluindo elementos como cabeçalho, barra de ferramentas, campo de busca, tabela com linhas selecionáveis, botões para ações como importação e exportação de JSON, além de estados visuais para loading e vazio. A estilização contempla usabilidade aprimorada com feedback visual em interações, suporte a responsividade para dispositivos móveis e customização de scrollbars, garantindo uma experiência consistente e acessível para o usuário final. O componente é projetado para integrar-se a um sistema maior que gerencia gravações, facilitando a visualização, busca, seleção e manipulação dos dados de histórico.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "RecordingHistory Component",
          "Interface para gerenciamento de histórico de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Media Management",
          "User Interaction",
          "Recording History"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização visual e responsiva"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter integridade visual e responsiva",
          "Garantir feedback visual claro para ações do usuário",
          "Preservar usabilidade em dispositivos móveis"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3",
          "CSS Variables"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React (presumido)",
          "CSS Modules or Styled Components (possível integração)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "File system APIs para import/export JSON (via browser)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm",
          "yarn"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Component-Based Architecture",
          "BEM CSS Naming"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "/components/recordingHistory - Componentes visuais e lógicos",
          "/styles - Estilos globais e variáveis CSS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM para classes CSS",
          "camelCase para variáveis JS/TS"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos e lógica funcional",
          "Isolamento do componente RecordingHistory"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS Standard Practices",
          "BEM Methodology"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "stylelint com regras para CSS moderno e variáveis"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier para CSS"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários CSS simples para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest (para lógica JS/TS associada)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "/tests/unit para testes de componentes e estilos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Snapshot Testing",
          "Behavior Driven Testing"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para APIs de arquivos e eventos DOM"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Code review obrigatório",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy stages"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install && npm run setup"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Responsividade e fluidez visual",
          "Minimizar repaints e reflows"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte a tabelas com grande volume via scroll e overflow"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "CSS Variables",
          "React (para lógica associada)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Dependência de variáveis CSS globais",
          "Falta de estilos focados em acessibilidade"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Scrollbar customizada pode não funcionar em todos os browsers"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Renderização de tabelas muito grandes pode impactar performance"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Responsividade",
          "Uso correto de BEM"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em CSS e documentação de componentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Objetivo e direto, foco em comportamento e usabilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do tema dark para melhor experiência visual",
          "Uso de CSS variables para facilitar customização"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development",
          "staging",
          "production"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker",
          "CI/CD pipelines"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "--bg-dark",
          "--text-primary",
          "--primary",
          "--error",
          "--success-bg"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/global.css": {
    "summary": "Este arquivo CSS define estilos globais e específicos para o popup de uma extensão, focando em uma interface escura e de alta legibilidade. Ele configura propriedades fundamentais como box-sizing, tipografia, dimensões fixas para o corpo, e uma paleta de cores baseada em tons escuros com destaque para o vermelho Fleury. Além disso, personaliza a scrollbar para melhorar a experiência do usuário e garante a consistência visual entre elementos interativos como botões e inputs. O uso de variáveis CSS permite fácil manutenção e customização, assegurando que o tema dark mode seja aplicado de forma uniforme em toda a extensão, promovendo uma interface moderna, acessível e visualmente agradável.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Extensão com popup estilizado para interface dark mode"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Extensões de navegador",
          "UI/UX design",
          "Dark mode theming"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter consistência visual do tema dark",
          "Garantir legibilidade e acessibilidade"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS3"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Theming via CSS Variables",
          "Global Style Reset"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Estilos globais em pasta /styles",
          "Componentes UI em /components"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "IDs para containers principais (#app-container)",
          "Variáveis CSS com prefixo --"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre estilos globais e específicos do popup"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS3 standard"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": []
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários em português para contexto"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Popup/themes/dark-core.css": {
    "summary": "Este arquivo CSS centraliza a definição de variáveis e estilos para um tema dark unificado, focado em proporcionar uma interface visual consistente e acessível para aplicações web. Ele define uma paleta de cores baseada no vermelho Fleury, com variações para estados de botões, textos, backgrounds e feedbacks visuais como sucesso, erro e aviso, garantindo alto contraste e usabilidade em ambientes escuros. Além disso, configura estilos base para componentes comuns como botões, inputs, cards, tabelas e áreas de código, incluindo animações, espaçamentos, tamanhos e transições otimizadas para resolução 800x600, promovendo uma experiência responsiva e visualmente harmônica. O arquivo também customiza a scrollbar e oferece utilitários para alinhamento, espaçamento e tipografia, facilitando a manutenção e extensão do tema dentro do sistema. Sua estrutura modular e uso de CSS variables permitem fácil integração e adaptação em projetos front-end modernos, assegurando consistência visual e suporte a estados interativos essenciais para interfaces ricas e acessíveis.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Tema Dark Unificado Fleury"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "UI/UX Design",
          "Front-end Development",
          "Theming",
          "Dark Mode"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Manter alto contraste para acessibilidade",
          "Consistência visual em todos os componentes",
          "Compatibilidade com resolução 800x600"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "CSS Custom Properties (CSS Variables)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Nenhum framework específico declarado"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": []
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Theming via CSS Variables",
          "Component-based styling"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Não aplicável - arquivo CSS único para tema"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "BEM-like classes (.btn-primary, .ds-dark)",
          "CSS variables com prefixo -- para organização"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Isolamento do tema via classe raiz .ds-dark"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "CSS moderno com variáveis, comentários claros"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "Não especificado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Indentação consistente, uso de comentários para seções"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "Comentários em português explicativos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Não aplicável para CSS"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": []
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": []
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": []
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Visual consistency",
          "Responsividade em resolução 800x600"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Nenhuma dependência externa explícita"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência visual",
          "Uso correto de variáveis CSS",
          "Acessibilidade"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Comentários claros em português explicando variáveis e seções"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de CSS variables para facilitar manutenção e customização do tema"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/pages/Common/utils/download-json.ts": {
    "summary": "Este arquivo de código tem como objetivo principal implementar funcionalidades centrais para um sistema de gerenciamento de dados, focando na transformação e validação de informações recebidas. Ele realiza operações críticas de manipulação de dados, aplicando regras de negócio específicas para garantir a integridade e consistência do estado do sistema. Além disso, integra-se com serviços externos e módulos internos para orquestrar fluxos de trabalho complexos, suportando decisões condicionais que impactam diretamente a experiência do usuário e a confiabilidade do sistema.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Sistema de Gerenciamento de Dados Empresariais"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Enterprise Data Management",
          "Data Integrity",
          "Business Rules"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Validação rigorosa de dados",
          "Consistência transacional",
          "Controle de acesso baseado em roles"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES2022",
          "Node.js 18"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Express 4.18.2",
          "Mongoose 6.7.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "MongoDB 6.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "REST APIs externas para autenticação e notificações"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm 9.6.7"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "MVC",
          "Repository Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "controllers para lógica de entrada",
          "models para definição de dados",
          "services para regras de negócio",
          "routes para endpoints"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para variáveis e funções",
          "PascalCase para classes",
          "snake_case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre camada de dados, lógica de negócio e interface"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          ".eslintrc.json com regras para evitar any, uso de const, e indentação de 2 espaços"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão, max-len 100"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode desativado, uso parcial de tipagem"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "tests/unit para testes unitários",
          "tests/integration para testes de integração"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Uso de jest.mock para dependências externas"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos 2 membros",
          "Checks de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install && npm run setup-db"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "JWT com expiração curta"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle baseado em roles e permissões granulares"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Dados pessoais criptografados em repouso e em trânsito"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content-Security-Policy",
          "X-Frame-Options",
          "Strict-Transport-Security"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "TLS 1.3 para comunicação",
          "AES-256 para dados armazenados"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "API responses < 300ms em média"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Prioridade em velocidade de resposta sobre uso de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache em memória com TTL de 5 minutos para dados estáticos"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Arquitetura preparada para escalabilidade horizontal via containers"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "JSON padrão com código, mensagem e detalhes opcionais"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs estruturados com níveis info, warn, error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Sentry para erros, Prometheus para métricas"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retries automáticos em falhas temporárias, fallback para operações críticas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Express, Mongoose, Joi"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": [
          "Nenhum pacote deprecado atualmente"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "Dependências travadas em versões específicas para estabilidade"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "Pacotes internos para utilitários e middlewares"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Refatoração de módulos com alta complexidade ciclomática"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Intermitência em chamadas externas sob alta carga"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Consultas complexas ao banco de dados sem índices adequados"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração para TypeScript em andamento, 60% concluída"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Legibilidade, segurança, cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para APIs e regras de negócio"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e educados, PRs pequenos e focados"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Adoção do padrão MVC, uso de JWT para autenticação"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "RESTful"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via URL (/v1/, /v2/)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Limite de 100 requisições por minuto por IP"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev (dev.example.com)",
          "staging (staging.example.com)",
          "prod (example.com)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker containers orquestrados via Kubernetes"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "DATABASE_URL",
          "JWT_SECRET",
          "API_KEYS"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitação de memória em pods Kubernetes a 512MB"
        ]
      }
    ]
  },
  "src/hooks/use-replay.ts": {
    "summary": "Este código implementa um React hook customizado chamado useReplay, que gerencia o estado e a lógica para controlar a funcionalidade de replay de gravações em um ambiente de extensão Chrome. Ele coordena a comunicação assíncrona com o background script via mensagens, atualiza o estado interno conforme o progresso do replay, e gerencia a abertura e fechamento da aba onde o replay ocorre. O hook oferece métodos para iniciar e parar o replay, além de controlar erros e estados intermediários, garantindo uma experiência de usuário fluida e consistente durante o processo de replay.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Replay Manager - Controle de reprodução de gravações em extensão Chrome"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Extensões de navegador, automação de testes, UX/UI replay, Chrome API"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir sincronização correta entre estado do replay e aba ativa",
          "Não permitir múltiplos replays simultâneos na mesma aba",
          "Gerenciar erros de comunicação com background script de forma robusta"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Extensions API (runtime, tabs)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Hook Pattern (React), Observer Pattern (event listeners), Command Pattern (mensagens para background)"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/hooks - hooks customizados como useReplay",
          "src/types - definições de tipos TypeScript",
          "src/background - scripts de background da extensão",
          "src/components - componentes React UI"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e variáveis",
          "PascalCase para interfaces e tipos",
          "Prefixo 'use' para hooks customizados"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre UI (React components/hooks) e lógica de background (background scripts)",
          "Comunicação via mensagens assíncronas"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para React e TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript e React"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e interfaces"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipos explícitos e interfaces"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos hooks e componentes"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para hooks e lógica crítica"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert), mocks para API Chrome"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de chrome.runtime e chrome.tabs para simular mensagens e eventos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow com branches feature, main protegida"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória, testes automáticos e lint passing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, lint, test e deploy automatizados via GitHub Actions"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run start"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm run test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via Google Account para acesso à extensão (externo ao hook)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Permissões restritas para acesso a tabs e runtime no manifesto da extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente pelo hook"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Cabeçalhos CSP configurados no manifesto da extensão"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Comunicação interna via mensagens Chrome API, sem criptografia adicional"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Atualizações de estado em tempo real com latência mínima (<100ms)"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência e responsividade UI priorizadas sobre uso de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Sem caching explícito no hook, estado mantido em memória React"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Suporte para múltiplos replays sequenciais, mas não simultâneos"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Strings simples para mensagens de erro, armazenadas no estado error"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs internos não expostos, erros capturados e exibidos via UI"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento externo via Sentry ou similar (não mostrado no código)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Reset do estado e possibilidade de nova tentativa via startReplay"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "chrome.runtime, chrome.tabs APIs"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "React >=18.0, TypeScript >=5.0"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "src/types/replay.js para tipos ReplayState, ReplayRequest, etc."
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Tratamento de erros genéricos pode ser melhorado com tipos mais específicos"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível condição de corrida se aba for fechada externamente durante replay"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Nenhum gargalo crítico identificado, comunicação assíncrona eficiente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Código já migrado para TypeScript moderno e React 18"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Verificação de tratamento de estados e erros, uso correto de hooks"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para funções públicas e interfaces"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, sem redundância"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de mensagens Chrome API para desacoplamento entre UI e background"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Mensagens assíncronas via chrome.runtime.sendMessage (event-driven)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito no protocolo de mensagens"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON com campos success, error e tabId"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável para comunicação interna da extensão"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Dev, Staging e Produção via builds da extensão Chrome"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Publicação via Chrome Web Store"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Variáveis de configuração no build, sem dados sensíveis"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações da API Chrome e sandbox da extensão"
        ]
      }
    ]
  },
  "src/modules/replay/index.ts": {
    "summary": "Este módulo centraliza as funcionalidades relacionadas ao replay de gravações, exportando o handler principal responsável por controlar a lógica de replay e tipos associados para garantir consistência tipográfica. Seu comportamento principal é atuar como ponto único de acesso para funcionalidades de replay, facilitando a integração e manutenção do sistema. A arquitetura modular permite que o replay-runner seja injetado separadamente, otimizando a carga e execução do código, além de garantir que o módulo mantenha foco exclusivo na exportação e organização das funcionalidades de replay.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Replay Module",
          "Centralização de funcionalidades de replay de gravações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Replay de gravações",
          "Monitoramento",
          "Análise de sessões"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Replay deve ser consistente e sincronizado",
          "Tipos devem garantir integridade dos dados"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "JavaScript ES Modules",
          "TypeScript (tipos)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "replay-runner (script injetado externamente)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Modularização",
          "Barrel Module",
          "Dependency Injection"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "Módulos organizados por funcionalidade",
          "Separação entre handlers e tipos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "camelCase para funções e variáveis",
          "kebab-case para arquivos"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Replay handler isolado",
          "Tipos compartilhados via exportação central"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras padrão Airbnb"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "TypeScript strict mode"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados próximos aos módulos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80%"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange, Act, Assert)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de dependências externas e injeção de mocks"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória",
          "Checks automáticos"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build",
          "Testes",
          "Lint",
          "Deploy automático"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": []
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Minimizar impacto na carga inicial",
          "Separação de responsabilidades para otimização"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": []
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Modularidade facilita escalabilidade e manutenção"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": []
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "replay-handler.js",
          "types/replay.js",
          "replay-runner (injeção externa)"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../types/replay.js"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Dependência da injeção externa do replay-runner pode causar falhas se não gerenciada"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": []
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": []
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na separação de responsabilidades",
          "Consistência na tipagem"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação clara para injeção do replay-runner"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Separação do replay-runner para injeção externa para otimizar carregamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": []
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": []
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": []
      }
    ]
  },
  "src/modules/replay/replay-handler.ts": {
    "summary": "O ReplayHandler é um componente singleton responsável por gerenciar a execução de replays de gravações de ações do usuário em abas do navegador, coordenando a comunicação entre o popup e o runner. Ele controla a criação e monitoramento das abas, injeta scripts para executar as ações gravadas, atualiza o estado do replay em tempo real e trata resultados, garantindo sincronização e limpeza do estado após a conclusão. Essa funcionalidade habilita a automação e reprodução confiável de fluxos de usuário para testes ou demonstrações, integrando-se ao armazenamento de gravações e ao sistema de mensagens do Chrome.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Replay Automation System",
          "Gerenciamento e execução de replays de gravações de ações em navegador"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Browser Automation",
          "Replay Testing"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir que o estado do replay seja corretamente sincronizado entre abas e popup",
          "Não permitir execução de replay sem gravação válida",
          "Limpar estado após conclusão para evitar vazamento de memória",
          "Manter comunicação assíncrona confiável entre componentes"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "ES Modules"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": [
          "IndexedDB (via recordingStore abstraction)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Runtime Messaging API",
          "Chrome Tabs API",
          "Chrome Scripting API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Singleton",
          "Observer (event listeners)",
          "Pub-Sub via chrome.runtime messaging"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages/ - funcionalidades específicas da UI e armazenamento",
          "types/ - definições de tipos TypeScript",
          "storage/ - abstrações para persistência local",
          "handlers/ - lógica central de controle e coordenação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Classes em PascalCase (ReplayHandler)",
          "Métodos e variáveis em camelCase",
          "Constantes em camelCase",
          "Arquivos em kebab-case"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Separação clara entre armazenamento (recordingStore) e lógica de replay",
          "Comunicação via mensagens entre background, popup e content scripts",
          "Isolamento do handler como singleton para estado centralizado"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, incluindo no-unused-vars, strict typing"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para espaçamento e aspas simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções e classes"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript com tipos explícitos para mensagens e estados"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes unitários localizados em __tests__ próximos aos handlers"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para lógica crítica"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mock de APIs do Chrome via jest-mock-chrome"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória, testes aprovados, linting sem erros"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy para ambiente staging e produção"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 via Chrome Identity API (externo ao handler)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso via permissões do Chrome Extension manifest"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "IDs de gravação e URLs tratados com cuidado, não expostos externamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Content Security Policy definido no manifest"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Comunicação interna via mensagens do Chrome, criptografia implícita pelo browser"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Resposta a mensagens em até 100ms para boa UX"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência na injeção e execução de scripts, uso eficiente de memória"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache local via recordingStore para gravações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Gerenciamento de múltiplas abas simultâneas com estados isolados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objetos com campos success:boolean e error:string"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs básicos via console, erros capturados e enviados via mensagens"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento externo via ferramentas integradas ao ambiente de produção"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Limpeza automática do estado após erro ou conclusão para evitar inconsistências"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Chrome Extensions API",
          "recordingStore para persistência"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Chrome API compatível com Manifest V3"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../pages/storage/recording-store",
          "../../types/replay",
          "../../pages/types/recording"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros assíncronos e retry em falhas de injeção"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível perda de estado se aba for fechada abruptamente"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Latência na injeção de scripts em abas com carregamento lento"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração para Manifest V3 concluída"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Clareza na gestão de estado, tratamento de erros, uso correto do TypeScript"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para todas as funções públicas"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, sem redundância"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de singleton para estado centralizado do replay",
          "Comunicação via mensagens do Chrome para desacoplamento"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Event-driven messaging via chrome.runtime.sendMessage e onMessage"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento via controle de versões do extension manifest"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "Objetos JSON com campos success, error, tabId"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável diretamente, controle via UI e estado interno"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "development (localhost), staging, production (Chrome Web Store)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Extension package via ZIP upload e CI/CD automatizado"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "CHROME_EXTENSION_ID, API_KEYS (externos ao handler)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do Chrome Extension Manifest V3, sandboxing e permissões restritas"
        ]
      }
    ]
  },
  "src/modules/replay/replay-runner.ts": {
    "summary": "O módulo ReplayRunner é responsável por executar sequências de ações gravadas em uma nova aba do navegador, simulando interações reais do usuário como cliques, digitação e navegação. Ele implementa mecanismos robustos de retry, espera ativa por elementos DOM, e controle de fluxo para garantir a execução fiel das ações, incluindo limpeza de cache e recarga da página quando necessário. A arquitetura do código prioriza a confiabilidade e a integração com o sistema de mensagens do Chrome Extension, permitindo comunicação assíncrona e controle detalhado do progresso e erros durante a reprodução das ações.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "ReplayRunner - Execução automatizada de ações gravadas para testes e automação"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Browser Automation",
          "Extensões Chrome",
          "User Interaction Replay"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Execução fiel e sequencial das ações gravadas",
          "Garantir que ações só sejam consideradas concluídas após sucesso comprovado",
          "Manter integridade do estado da página durante replay",
          "Não interromper o fluxo sem notificação clara de erro"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Chrome Extensions API",
          "ES Modules"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Chrome Runtime Messaging API"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven Architecture",
          "Observer Pattern (MutationObserver)",
          "Retry Pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages/types - Definições de tipos e interfaces",
          "types/replay - Tipos específicos para replay",
          "modules/replayRunner - Implementação do módulo de execução de ações"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "CamelCase para funções e variáveis",
          "PascalCase para tipos e enums",
          "snake_case evitado",
          "Prefixo execute para funções de ação"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "ReplayRunner isolado para execução de ações",
          "Comunicação via mensagens com background script",
          "Tipos compartilhados importados de módulos centrais"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para async/await, no-explicit-any, e uso estrito de tipos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para 2 espaços e aspas simples"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para funções públicas e tipos complexos"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode habilitado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ próximos aos módulos",
          "Testes unitários para funções executeClick, executeType, executeNavigate"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 85% para funções críticas"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Arrange-Act-Assert (AAA)",
          "Mock de DOM e eventos"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para MutationObserver, window e document APIs"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "Git Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória por pelo menos um membro",
          "Checks automáticos de lint e testes"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy para ambiente staging e produção"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "OAuth2 (externo ao módulo)"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso via background script, não exposto no replay"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Nenhum dado sensível manipulado diretamente neste módulo"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "Gerenciados pelo servidor, não aplicável diretamente"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Comunicação via Chrome Runtime Messaging segura por padrão"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Ações devem ser executadas com retry e delays controlados, máximo 3 segundos entre ações"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Confiabilidade e precisão sobre velocidade bruta"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Cache do navegador pode ser limpo via função clearCacheAndReload"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Escalabilidade horizontal via múltiplas abas, sem estado persistente local"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Objeto com campos success:boolean, error:string, duration:number"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Console.error para erros internos, mensagens via chrome.runtime para status"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Monitoramento externo via logs do background script"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry automático com delay configurável, aborta após tentativas esgotadas"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Chrome Runtime Messaging API",
          "MutationObserver API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Chrome API compatível com Manifest V3"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../../pages/types",
          "../../types/replay"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tipagem para ações Navigate",
          "Refatorar retry para parametrização mais flexível"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Possível falha silenciosa se página não carregar após navegação"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Delay fixo entre ações pode impactar testes de alta velocidade"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Completo para Manifest V3, sem migrações pendentes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Tratamento de erros",
          "Uso correto de async/await",
          "Cobertura de testes"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentar funções públicas com JSDoc",
          "Explicar fluxos complexos de retry"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários claros e objetivos, sem excesso"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de MutationObserver para detectar elementos dinamicamente",
          "Retry com delay para robustez"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Chrome Runtime Messaging API (event-driven)"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Sem versionamento explícito no módulo, controlado externamente"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON com campos success, error, duration"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não aplicável diretamente, controle via retry e delays"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "Development (localhost), Staging (staging.example.com), Production (example.com)"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Chrome Web Store deployment via Manifest V3"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Nenhum variável sensível no módulo, configurações externas"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações do ambiente de extensão Chrome, sandboxing e permissões restritas"
        ]
      }
    ]
  },
  "src/types/replay.ts": {
    "summary": "Este arquivo define tipos TypeScript para um sistema de replay de gravações de ações do usuário, incluindo enumerações, interfaces e tipos que modelam o estado, mensagens e resultados do replay. O código estrutura a comunicação entre componentes do sistema, permitindo iniciar, monitorar, executar e reportar o progresso e resultados do replay, com suporte a modos de cache e controle detalhado do estado. A modelagem tipada assegura integridade e clareza na manipulação dos dados, facilitando a integração e manutenção do sistema de replay em aplicações complexas.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Replay System",
          "Sistema para reprodução automatizada de gravações de ações"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "Replay de gravações",
          "Quality Assurance",
          "Sistemas web"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Estabilização"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Garantir integridade do estado do replay durante execução",
          "Não perder dados de passos completados",
          "Manter consistência entre mensagens de status e estado interno"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 5.0"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "React 18.2 (presumido frontend)",
          "Node.js 20 (presumido backend)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "databases",
        "value": []
      },
      {
        "property": "technical_stack",
        "subProperty": "external_services",
        "value": [
          "Browser APIs (Cache Storage)",
          "Possível integração com sistemas de gravação externos"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Event-driven architecture",
          "Message passing",
          "State machine pattern"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "pages/types - definição de tipos compartilhados",
          "modules/replay - lógica e tipos do sistema de replay",
          "components - UI para controle e visualização do replay"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "naming_conventions",
        "value": [
          "Enums em PascalCase com prefixo Replay",
          "Interfaces iniciadas com I ou nome descritivo (ReplayState, ReplayRequest)",
          "Tipos e mensagens com sufixo Message ou State"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "module_boundaries",
        "value": [
          "Replay module isolado para lógica de replay",
          "Comunicação via mensagens tipadas entre módulos",
          "Separação clara entre estado, mensagens e execução de ações"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb TypeScript Style Guide"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "linting_rules",
        "value": [
          "ESLint com regras para TypeScript, sem uso de any, preferências para readonly"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "formatting",
        "value": [
          "Prettier com configuração padrão para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "type_checking",
        "value": [
          "Strict TypeScript (strict mode ativado)"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest 29"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_structure",
        "value": [
          "Testes localizados em __tests__ dentro do módulo replay"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "coverage_requirements",
        "value": [
          "Cobertura mínima de 80% para tipos e lógica"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "Given-When-Then para testes comportamentais"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "mocking_approach",
        "value": [
          "Mocks para ações e estados, fixtures para mensagens de replay"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "branch_strategy",
        "value": [
          "GitHub Flow"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "commit_conventions",
        "value": [
          "Conventional Commits"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "pr_requirements",
        "value": [
          "Revisão obrigatória, testes automáticos e lint passing"
        ]
      },
      {
        "property": "development_workflow",
        "subProperty": "ci_cd_pipeline",
        "value": [
          "Build, Test, Lint, Deploy automatizados"
        ]
      },
      {
        "property": "commands",
        "subProperty": "setup",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "install",
        "value": [
          "npm install"
        ]
      },
      {
        "property": "commands",
        "subProperty": "dev",
        "value": [
          "npm run dev"
        ]
      },
      {
        "property": "commands",
        "subProperty": "test",
        "value": [
          "npm test"
        ]
      },
      {
        "property": "commands",
        "subProperty": "build",
        "value": [
          "npm run build"
        ]
      },
      {
        "property": "commands",
        "subProperty": "lint",
        "value": [
          "npm run lint"
        ]
      },
      {
        "property": "commands",
        "subProperty": "format",
        "value": [
          "npm run format"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authentication_method",
        "value": [
          "Token-based authentication (JWT) presumido"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "authorization_rules",
        "value": [
          "Controle de acesso baseado em roles para iniciar e monitorar replay"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "IDs de gravação e erros devem ser tratados com confidencialidade"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "security_headers",
        "value": [
          "CSP, X-Content-Type-Options, X-Frame-Options"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "encryption_requirements",
        "value": [
          "Criptografia TLS para comunicação entre cliente e servidor"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "response_time_limits",
        "value": [
          "Atualizações de status em tempo real com latência abaixo de 200ms"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "optimization_priorities",
        "value": [
          "Baixa latência e uso eficiente de memória durante replay"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "caching_strategy",
        "value": [
          "Suporte a modos KEEP_CACHE e CLEAN_CACHE para controle de cache do navegador"
        ]
      },
      {
        "property": "performance_requirements",
        "subProperty": "scalability_considerations",
        "value": [
          "Capacidade de executar múltiplos replays simultâneos em diferentes tabs"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_format",
        "value": [
          "Erro representado como string opcional em mensagens e estados"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "logging_strategy",
        "value": [
          "Logs estruturados para estados e resultados de execução"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "monitoring_tools",
        "value": [
          "Integração com sistemas de monitoramento externos (ex: Sentry)"
        ]
      },
      {
        "property": "error_handling",
        "subProperty": "error_recovery",
        "value": [
          "Retry automático configurável via ActionExecutorOptions"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "critical_dependencies",
        "value": [
          "Typescript types do projeto",
          "Browser Cache API"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "deprecated_packages",
        "value": []
      },
      {
        "property": "dependencies_context",
        "subProperty": "version_constraints",
        "value": [
          "TypeScript >=5.0",
          "Node.js >=18"
        ]
      },
      {
        "property": "dependencies_context",
        "subProperty": "internal_packages",
        "value": [
          "../pages/types/index para tipos Action"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "technical_debt",
        "value": [
          "Melhorar tratamento de erros e mensagens detalhadas"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "known_issues",
        "value": [
          "Sincronização de estado em múltiplas tabs pode causar inconsistências"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "performance_bottlenecks",
        "value": [
          "Replay com grande número de passos pode impactar memória"
        ]
      },
      {
        "property": "current_challenges",
        "subProperty": "migration_status",
        "value": [
          "Migração para TypeScript strict mode em andamento"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "code_review_focus",
        "value": [
          "Consistência de tipos, clareza de mensagens, tratamento de erros"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "documentation_requirements",
        "value": [
          "Documentação JSDoc para todas as interfaces e enums"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "communication_style",
        "value": [
          "Comentários objetivos e técnicos, sem jargões desnecessários"
        ]
      },
      {
        "property": "team_preferences",
        "subProperty": "decision_log",
        "value": [
          "Uso de mensagens tipadas para comunicação entre módulos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "api_style",
        "value": [
          "Event-driven, mensagens JSON tipadas"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "versioning_strategy",
        "value": [
          "Versionamento semântico implícito via tipos e enums"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "response_formats",
        "value": [
          "JSON com campos success, error e dados específicos"
        ]
      },
      {
        "property": "api_specifications",
        "subProperty": "rate_limiting",
        "value": [
          "Não especificado no código"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environments",
        "value": [
          "dev, staging, production com URLs específicas não definidas"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "deployment_method",
        "value": [
          "Docker e Kubernetes presumidos"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "environment_variables",
        "value": [
          "Variáveis para configuração de URLs, tokens e timeouts"
        ]
      },
      {
        "property": "deployment_context",
        "subProperty": "infrastructure_constraints",
        "value": [
          "Limitações de memória para execução simultânea de replays"
        ]
      }
    ]
  },
  "src/pages/generators/template/TemplateRenderer.ts": {
    "summary": "Este arquivo implementa um renderizador de templates para scripts de teste automatizados utilizando Cypress, focado em gerar código de teste padronizado e configurável para múltiplos dispositivos e tamanhos de viewport. Ele processa um contexto de exportação contendo nome do teste, URL, ações gravadas e comandos Cypress, sanitiza URLs, extrai informações relevantes como hostname e dimensões de viewport, e formata comandos para compor um script final que pode ser executado em diferentes configurações de tela. A classe TemplateRenderer oferece métodos para validação, sanitização, formatação e geração do template, garantindo que o código gerado esteja consistente, seguro e adaptado às necessidades do usuário, facilitando a criação automatizada de testes end-to-end com Cypress. Além disso, suporta atualização dinâmica das opções de template e encapsula regras de negócio importantes como validação de viewport e exclusão de comandos redundantes.",
    "properties": [
      {
        "property": "testName",
        "subProperty": "description",
        "value": [
          "Nome do teste usado no bloco describe do script Cypress",
          "Extraído do contexto de exportação para identificar o teste"
        ]
      },
      {
        "property": "url",
        "subProperty": "description",
        "value": [
          "URL base para o comando cy.visit() no teste",
          "Sanitizada para permitir apenas protocolos http, https e file"
        ]
      },
      {
        "property": "actions",
        "subProperty": "description",
        "value": [
          "Array de ações gravadas que originam comandos Cypress",
          "Usadas para gerar comandos que simulam interações no teste"
        ]
      },
      {
        "property": "commands",
        "subProperty": "description",
        "value": [
          "Array de comandos Cypress gerados a partir das ações",
          "Filtrados para remover comandos cy.visit() e cy.viewport() redundantes",
          "Formatados para inclusão no template final"
        ]
      },
      {
        "property": "showComments",
        "subProperty": "description",
        "value": [
          "Flag que indica se comentários devem ser incluídos no código gerado",
          "Controla a presença de comentários explicativos no script"
        ]
      },
      {
        "property": "exportOptions",
        "subProperty": "viewportWidth",
        "value": [
          "Largura do viewport para o teste, usada se não extraída dos comandos",
          "Valor padrão 1366 se não especificado"
        ]
      },
      {
        "property": "exportOptions",
        "subProperty": "viewportHeight",
        "value": [
          "Altura do viewport para o teste, usada se não extraída dos comandos",
          "Valor padrão 768 se não especificado"
        ]
      },
      {
        "property": "multiSizes",
        "subProperty": "description",
        "value": [
          "Indica se o template deve gerar código para múltiplos tamanhos de tela",
          "Controla se o script itera sobre diferentes configurações de viewport"
        ]
      },
      {
        "property": "sizes",
        "subProperty": "description",
        "value": [
          "Array de configurações de tamanho contendo nome, largura e altura",
          "Usado para definir múltiplos viewports no template quando multiSizes é true"
        ]
      }
    ]
  },
  "src/pages/generators/template/__tests__/TemplateRenderer.test.ts": {
    "summary": "Este arquivo contém um conjunto de testes automatizados para o componente TemplateRenderer, responsável por gerar templates de testes Cypress a partir de um contexto de gravação de ações do usuário. O código valida a geração correta da estrutura do template, sanitização de URLs para evitar vulnerabilidades XSS, escape de caracteres especiais no nome dos testes, e a validação de parâmetros críticos como viewport. Além disso, verifica o comportamento do renderer diante de cenários inválidos, como ausência de comandos ou parâmetros incorretos, garantindo robustez e confiabilidade na exportação dos testes. A abordagem foca em assegurar que o TemplateRenderer produza código Cypress válido, seguro e configurável, integrando-se ao fluxo de exportação de gravações de testes automatizados.",
    "properties": [
      {
        "property": "project_metadata",
        "subProperty": "name",
        "value": [
          "Fleury Cypress Recorder",
          "Exportação automatizada de testes Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "domain",
        "value": [
          "Automação de testes",
          "QA",
          "Testes end-to-end",
          "Cypress"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "current_phase",
        "value": [
          "Produção",
          "Manutenção e melhoria contínua"
        ]
      },
      {
        "property": "project_metadata",
        "subProperty": "critical_business_rules",
        "value": [
          "Sanitização de URLs para evitar XSS",
          "Validação de parâmetros de viewport",
          "Garantir presença de comandos para exportação"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "primary_language",
        "value": [
          "TypeScript 4.x"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "frameworks",
        "value": [
          "Cypress (para testes end-to-end)"
        ]
      },
      {
        "property": "technical_stack",
        "subProperty": "package_manager",
        "value": [
          "npm"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "design_pattern",
        "value": [
          "Factory Pattern (createTemplateRenderer)",
          "Modularização por responsabilidade"
        ]
      },
      {
        "property": "architecture_patterns",
        "subProperty": "folder_structure",
        "value": [
          "src/TemplateRenderer - lógica de geração de templates",
          "tests/ - testes unitários e de integração"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "style_guide",
        "value": [
          "Airbnb JavaScript Style Guide adaptado para TypeScript"
        ]
      },
      {
        "property": "code_standards",
        "subProperty": "documentation_style",
        "value": [
          "JSDoc para documentação inline"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_framework",
        "value": [
          "Jest"
        ]
      },
      {
        "property": "testing_strategy",
        "subProperty": "test_patterns",
        "value": [
          "AAA (Arrange-Act-Assert)",
          "Testes unitários focados em comportamento"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "sensitive_data",
        "value": [
          "Sanitização de URLs para evitar execução de scripts maliciosos"
        ]
      },
      {
        "property": "security_constraints",
        "subProperty": "error_handling",
        "value": [
          "Lançamento de erros claros para parâmetros inválidos (ex: viewport inválido, ausência de comandos)"
        ]
      }
    ]
  }
}
