{
  "project_metadata": {
    "name": "DeploySentinel Recorder – Extensão Web para Gravação e Geração Automatizada de Scripts de Teste End-to-End (Cypress, Playwright, Puppeteer)",
    "domain": [
      "Web/Mobile/Desktop Development",
      "Browser Extensions",
      "Test Automation",
      "End-to-End Testing",
      "UI Components",
      "Web Automation",
      "Quality Assurance",
      "Developer Tools",
      "Browser Interaction Recording",
      "Web Analytics"
    ],
    "current_phase": [
      "Development",
      "Production",
      "Active Maintenance",
      "Stable Release",
      "MVP",
      "Local Testing"
    ],
    "critical_business_rules": [
      "Preserve fast refresh functionality",
      "Ensure JSX transpilation compatibility",
      "Build must generate consistent artifacts",
      "Do not break deploy pipeline",
      "Accurate and complete capture of user events",
      "Correct and readable script generation",
      "Compatibility with multiple test frameworks (Cypress, Playwright, Puppeteer)",
      "Consistent test execution",
      "TypeScript support via ts-jest",
      "Node.js environment for testing",
      "Accurate and faithful test script generation",
      "Cross-browser compatibility",
      "Maintain integrity of captured data",
      "Accurate recording of user interactions",
      "Correct script generation for Cypress, Playwright, and Puppeteer",
      "Browser permission security",
      "Security and privacy of captured data",
      "Recording must start and end correctly",
      "Navigation events must be captured only in the correct tab and frame",
      "Injected scripts must execute only in authorized contexts",
      "Strict message origin validation",
      "Secure communication between webapp and extension",
      "Visual icon consistency",
      "React 18+ compatibility",
      "Correct SVG rendering",
      "Brand visual consistency",
      "Minimum logo load performance",
      "Valid ScriptType selection must be ensured",
      "onChange callback must be called with correct value",
      "Ensure integrity of recorded data",
      "Send code only to authorized tabs",
      "Correct persistence of user preferences",
      "Consistent synchronization of recording state across tabs",
      "Integrity of stored data",
      "Correct persistence of recording state",
      "Safe script execution in specific frames",
      "Accurate identification of Cypress test tabs",
      "Actions must be displayed in correct order",
      "Only supported actions should be rendered",
      "Selectors must be precise to ensure correct element identification",
      "Correct and precise code generation",
      "Maintain integrity of generated code",
      "Faithful code rendering for analysis",
      "Accurate capture of user actions",
      "Secure handling of sensitive inputs",
      "Reliable code generation for multiple test frameworks",
      "Accurate highlighter positioning",
      "Consistent label rendering",
      "Do not interfere with user interaction",
      "Ensure only one active script instance",
      "Allow complete component cleanup to avoid leaks",
      "Do not log password field events",
      "Avoid event duplication",
      "Consistent persistence in local storage",
      "Ensure only one recording is active at a time",
      "Do not mount multiple buttons in the DOM",
      "Correct communication with Chrome extension",
      "Accurate recording of user actions",
      "Correct code generation compatible with supported libraries",
      "Persistence of library preference",
      "Correct synchronization with browser tabs",
      "Ensure user anonymity",
      "Send event data without impacting UX",
      "Maintain integrity of sent data",
      "Render Popup correctly in designated container",
      "Apply global styles without conflict",
      "Generate unique and valid selectors",
      "Maintain acceptable performance",
      "Avoid ambiguous selectors",
      "Generate valid scripts for multiple frameworks",
      "Maintain correct temporal synchronization between actions",
      "Do not use invalid IDs for selectors",
      "Prioritize stable selectors to avoid test failures",
      "Correct and typed import of static files",
      "Avoid asset-related build errors",
      "Ensure browser API calls are compatible between Chrome and Firefox",
      "Actions must be typed and validated to avoid invalid executions",
      "Maintain interaction data integrity for traceability",
      "Ensure strict typing to avoid runtime errors",
      "Maintain ES5 compatibility for legacy browsers",
      "Build must run in production mode",
      "Build errors must be reported and block deploy",
      "NODE_ENV must always be defined",
      "PORT must be a valid number",
      "Hot Module Replacement must be enabled for dev mode",
      "Dev server must serve assets with CORS headers",
      "Manifest version consistency",
      "Environment variable integrity",
      "Asset path correctness",
      "Do not version dependency files",
      "Do not expose sensitive config files",
      "Keep repository clean and organized",
      "All actions must have valid, non-negative, and sequential timestamps",
      "Correct and syntactically valid script generation for each framework",
      "Maintain compatibility with Cypress, Playwright, and Puppeteer APIs",
      "Correct Playwright code generation",
      "Extension installation validation"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript",
      "JavaScript (ES6+)",
      "JSX",
      "Node.js"
    ],
    "frameworks": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest 29",
      "ts-jest",
      "WebExtensions API",
      "ReactDOM",
      "FontAwesome SVG Core"
    ],
    "databases": [
      "chrome.storage.local",
      "localStorage (browser)"
    ],
    "external_services": [
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "GitHub Actions",
      "Browser APIs (chrome.*)",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "DeploySentinel Webapp",
      "Google Analytics Measurement Protocol API",
      "FontAwesome CDN",
      "Firefox WebExtension API"
    ],
    "package_manager": [
      "npm",
      "yarn"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Modular Build Configuration",
      "Pipeline",
      "Observer Pattern",
      "Event-driven Architecture",
      "Modular Architecture",
      "Configuration Object Pattern",
      "Component-based UI",
      "Extension Architecture (Background Script, Content Script, Browser Action)",
      "Service Worker Background Processing",
      "Message Passing",
      "Controlled Component Pattern",
      "Custom React Hooks",
      "Facade Pattern for API Abstraction",
      "Declarative UI",
      "Separation of Concerns",
      "Hook-based State Management",
      "Functional Components",
      "Singleton",
      "Shadow DOM Encapsulation",
      "Debounce",
      "Hooks Pattern",
      "Modular Design",
      "Hot Module Replacement",
      "Generator Pattern",
      "Factory Method",
      "Template Method",
      "Strategy Pattern",
      "Alias Pattern",
      "Object-Oriented Programming",
      "Enum-based State Modeling",
      "Build Pipeline Script",
      "Configuration Module Pattern",
      "Middleware Pattern",
      "Plugin Pattern",
      "Functional Programming",
      "Builder Pattern",
      "Test-Driven Development (TDD)",
      "Test Automation Pattern",
      "Page Object Pattern (implicit)"
    ],
    "folder_structure": [
      "Config files in root or config folder",
      "Source code in src/",
      "build/",
      "dist/",
      "assets/ - images and icons",
      "tests/ - E2E and unit tests",
      "background/ - background scripts",
      "content_scripts/ - injected scripts",
      "popup/ - extension UI",
      "Common/utils - shared utility functions",
      "src/components - reusable UI components",
      "src/types - TypeScript type definitions",
      "src/hooks - custom hooks",
      "src/utils - storage and script utilities",
      "builders/ - code and selector generation",
      "styles/ - CSS files",
      "declarations/ - .d.ts files",
      "config/ - Webpack and environment configs",
      "scripts/ - build and automation scripts",
      "node_modules - external dependencies",
      "coverage/ - test reports",
      "tmp/ - temporary browser context data"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for React components, types, and classes",
      "kebab-case for files and folders",
      "snake_case for config and static files",
      "UPPER_SNAKE_CASE for enums and constants",
      "Descriptive names for scripts and files",
      "Prefix 'use' for hooks",
      "File extensions indicate language (.jsx, .tsx, .ts)",
      "test prefix for test functions",
      "*.d.ts for type declarations"
    ],
    "module_boundaries": [
      "Separation between config and source code",
      "Plugins isolated from presets",
      "Clear separation between event capture, script generation, and extension UI",
      "Independent modules for Chrome and Firefox",
      "Isolated configuration for Jest",
      "Clear separation between frontend (React) and build scripts",
      "Dependencies isolated by environment (devDependencies vs dependencies)",
      "Clear separation between background scripts, content scripts, and UI (popup)",
      "Message-based communication between scripts",
      "Isolated injected scripts by tab and frame context",
      "Clear separation between extension code and webapp code",
      "Isolated visual components from static assets",
      "Relative imports for local resources",
      "Isolated components with props for communication",
      "Types imported for consistency",
      "Clear separation between state management, code generation, and runtime communication",
      "Clear separation between hooks, utils, and types",
      "Unidirectional dependency from hooks to utils and types",
      "Clear separation between storage handling, script execution, and tab control",
      "Clear separation between types, builders, and components",
      "UI components separated from business logic",
      "Builders isolated for selector and code generation",
      "Common utilities shared across modules",
      "Isolated Highlighter component with explicit style import",
      "Clear separation between UI (ControlBar) and bootstrap script",
      "Shadow DOM isolation to avoid global pollution",
      "Clear separation between event capture, selector generation, and storage",
      "Clear separation between UI (TriggerButton) and recording logic (hooks, endRecording)",
      "Clear separation between UI, recording logic, code generation, and utilities",
      "Unidirectional dependencies to avoid circular coupling",
      "Isolated analytics module, dependent only on external utils",
      "Clear separation between components and styles",
      "Explicit imports for Playwright and Jest"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript/TypeScript Style Guide",
      "Prettier for formatting"
    ],
    "linting_rules": [
      "ESLint with React and TypeScript plugins",
      "TypeScript strict mode enabled",
      "No explicit any",
      "ESLint with Airbnb rules",
      "ESLint with async/await, no-unused-vars, consistent-return",
      "ESLint with rules for WebExtensions compatibility"
    ],
    "formatting": [
      "Prettier with default settings",
      "singleQuote: true",
      "trailingComma: es5",
      "printWidth: 80",
      "arrowParens: always"
    ],
    "documentation_style": [
      "JSDoc for functions, classes, and components",
      "Inline comments for complex logic"
    ],
    "type_checking": [
      "Strict TypeScript",
      "Strict TypeScript with explicit typing for events and actions",
      "Strict TypeScript with explicit typing in components and hooks"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29",
      "Playwright",
      "React Testing Library"
    ],
    "test_structure": [
      "__tests__ folders colocated with components and modules",
      "tests/unit/ for unit tests",
      "tests/e2e/ for end-to-end tests",
      "Test files with .test.ts or .test.tsx extension"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "Minimum 80% coverage for critical modules and UI components",
      "Minimum 90% coverage for critical functions"
    ],
    "test_patterns": [
      "AAA (Arrange-Act-Assert)",
      "Given-When-Then for behavioral tests",
      "Snapshot testing for UI components",
      "Mocking browser APIs"
    ],
    "mocking_approach": [
      "jest.mock for modules and browser APIs",
      "Fixtures for input data",
      "Mocks for Chrome and WebExtension APIs",
      "Mocks for localStorage and chrome.storage APIs",
      "Mocks for external dependencies and utility functions"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "Git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "CI checks",
      "Automated lint and test checks",
      "At least one reviewer approval",
      "Build must pass without errors"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Testing",
      "Build",
      "Deploy",
      "Automated build, lint, test, and deploy via GitHub Actions",
      "Deploy to Chrome and Firefox"
    ]
  },
  "commands": {
    "setup": [
      "npm install",
      "yarn install"
    ],
    "install": [
      "npm install",
      "yarn install"
    ],
    "dev": [
      "npm start",
      "npm run dev",
      "yarn start-chrome",
      "yarn start-ff",
      "yarn start",
      "npm run watch",
      "node scripts/start.js",
      "webpack --mode development --watch"
    ],
    "test": [
      "npm test",
      "yarn test",
      "npm run test",
      "jest"
    ],
    "build": [
      "npm run build",
      "yarn build-chrome",
      "yarn build-ff",
      "yarn build",
      "node scripts/build.js",
      "webpack --mode production"
    ],
    "lint": [
      "npm run lint",
      "eslint src/ --ext .ts,.tsx",
      "eslint .",
      "yarn lint"
    ],
    "format": [
      "npm run format",
      "prettier --write src/",
      "prettier --write .",
      "yarn format"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2 via DeploySentinel Webapp",
      "OAuth2 via Chrome Extension permissions",
      "Not applicable (local state management)"
    ],
    "authorization_rules": [
      "Restricted permissions via manifest for specific domains and APIs",
      "Recording restricted to authorized tab and frame",
      "Injected scripts only after state validation",
      "Message origin validation",
      "Access control based on browser context and active tab"
    ],
    "sensitive_data": [
      "User interaction data handled locally, no unauthorized external transmission",
      "Recording data stored locally, no explicit encryption",
      "Password inputs are masked in display",
      "Password fields must not be recorded",
      "Client ID generated anonymously, no personal data"
    ],
    "security_headers": [
      "Content Security Policy configured via manifest",
      "Content-Security-Policy for messages",
      "Default Chrome Extension headers"
    ],
    "encryption_requirements": [
      "Chrome default encryption for local storage",
      "TLS for web communication",
      "Secure communication via Chrome internal messaging"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Real-time recording with no perceptible navigation impact",
      "Script injection and recording updates must occur in milliseconds",
      "Messages processed in < 100ms",
      "Instant component rendering",
      "Fast asynchronous operations for smooth UX",
      "UI interaction must be responsive, fast state updates"
    ],
    "optimization_priorities": [
      "Developer experience",
      "Fast refresh",
      "Build speed",
      "Bundle size",
      "Low latency in event capture",
      "Efficient memory usage during recording",
      "Minimize browser CPU and memory impact",
      "Minimize overhead in non-recorded tabs",
      "Low latency in communication",
      "Quick UI rendering",
      "Minimize unnecessary reads/writes",
      "Minimize re-renders",
      "Minimize inline style injection",
      "Balance code readability and execution performance",
      "Fast and robust selector generation",
      "Optimized build for production with minification and tree shaking"
    ],
    "caching_strategy": [
      "Intermediate build cache",
      "chrome.storage.local for efficient persistence",
      "Browser cache for static assets",
      "Webpack caching for incremental builds",
      "Local storage for temporary persistence"
    ],
    "scalability_considerations": [
      "Task parallelization",
      "Support for long recordings without perceptible degradation",
      "Support for multiple tabs and simultaneous sessions",
      "Componentization for extensibility and maintainability",
      "Efficient action list management to avoid excessive growth",
      "SPA and multi-context support"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standardized logs",
      "Structured logs for background and content script errors",
      "Errors thrown via throw new Error with clear messages",
      "Fallback to default values on error",
      "Abort build on critical error"
    ],
    "logging_strategy": [
      "Console logs",
      "Local logs for development debugging",
      "Error reporting via CI",
      "Console.error for errors, console.warn for warnings",
      "Analytics for event tracking"
    ],
    "monitoring_tools": [
      "GitHub Actions for build and test monitoring",
      "Integration with external tools via deploysentinel.com",
      "Chrome Extension monitoring tools",
      "Custom analytics for usage tracking"
    ],
    "error_recovery": [
      "Automatic retry on build failures",
      "Recovery from recording failures with restart option",
      "Automatic service worker restart and script re-injection",
      "Cleanup function to unmount and release resources",
      "Hot Module Replacement for rapid error recovery in development",
      "Retry for DOM element selection with attempt limit"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Node.js",
      "Chrome and Firefox extension APIs",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "ts-jest",
      "typescript",
      "jest",
      "chrome.* APIs",
      "chrome.storage.local",
      "chrome.runtime",
      "FontAwesome",
      "react-dom",
      "lodash.debounce",
      "react-syntax-highlighter",
      "getRandomInstallId",
      "Google Analytics API",
      "TypeScript compiler",
      "Module bundler (Webpack, Vite)"
    ],
    "deprecated_packages": [
      "None identified"
    ],
    "version_constraints": [
      "React >=18.0.0",
      "TypeScript >=5.0",
      "Jest >=29.0.0",
      "Webpack >=5.0.0",
      "Manifest V3 required for compatibility",
      "Chrome Extensions API compatible",
      "Playwright >=1.20.0",
      "TypeScript version compatible with ES6+",
      "target ES5",
      "module ESNext"
    ],
    "internal_packages": [
      "Internal modules for recording and script generation",
      "../Common/utils",
      "../types (ScriptType)",
      "../builders",
      "./utils",
      "./recorder",
      "./Highlighter",
      "./ControlBar",
      "./analytics",
      "./Popup",
      "./selector",
      "./finder",
      "config/webpack.config.js",
      "./env"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Build scripts lack modularization",
      "Limited support for file upload capture",
      "Manifest V3 migration required for future compatibility",
      "Improve support for multiple frameworks simultaneously",
      "Lack of robust error handling",
      "No structured logging",
      "Async error handling can be improved",
      "Complex state management may grow with new features",
      "No memoization to avoid unnecessary re-renders",
      "Improve error handling and fallback for browsers without exportFunction",
      "Improve any typing, optimize local storage usage",
      "Hardcoded config for localhost and fixed port",
      "Extensive config may hinder maintainability"
    ],
    "known_issues": [
      "Potential incompatibility of react-hot-loader with React 18+",
      "Limitations in hover event capture in some contexts",
      "Limitations in event capture within iframes",
      "Possible race conditions in async updates",
      "Strong dependency on Chrome API limits local testing",
      "Exclusive Chrome dependency",
      "Possible inconsistency in multi-tab sync without lock",
      "Possible race conditions in async storage operations",
      "Dependency on browser-specific APIs may limit portability",
      "Dependency on external styles may cause visual failures",
      "Possible incompatibility with unsupported browsers",
      "TypeScript typing ignored in shadowRoot",
      "Possible event loss at high frequency",
      "Async sync may cause momentary inconsistencies",
      "Possible failure locating DOM elements in custom environments",
      "No-cors mode limits failure detection in requests",
      "Possible performance impact from inline styles",
      "Performance may degrade in documents with many similar elements",
      "Exposure of action object directly in ActionContext (FIXME comment)",
      "Selectors may not be unique in apps with unreliable IDs",
      "Differences between Chrome and Firefox APIs may cause incompatibilities",
      "Disabling host check may cause security risks",
      "Possible secrets leakage if not managed correctly",
      "System clock dependency may cause inconsistencies",
      "Occasional timeouts activating service workers"
    ],
    "performance_bottlenecks": [
      "Slow build in large projects",
      "High CPU usage in long recordings",
      "Frequent navigation events may cause overhead",
      "Potential growth of stored action list",
      "Frequent mouse events mitigated by throttling",
      "Input and wheel events may generate high load",
      "Polling for retrySelector may impact performance if maxRetries is high",
      "Multiple inline style injections may affect rendering",
      "Combinatorial selector generation and multiple querySelectorAll validations",
      "Selector generation in very large DOMs may be slow",
      "Minification disables mangling for easier debugging, impacting final size",
      "Active waiting with setInterval can be optimized"
    ],
    "migration_status": [
      "Complete for Manifest V3, no pending migrations",
      "Stable, no ongoing migrations",
      "Partial migration to Manifest V3 in progress",
      "Function migrateActionsTimestamp implemented and in use"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Preserve hot reload functionality",
      "Code style consistency",
      "Performance",
      "Maintainability",
      "Code clarity and readability",
      "Test coverage",
      "Strong typing maintenance",
      "Conformance to code standards",
      "Security in permission usage",
      "Clear separation of responsibilities between scripts",
      "Quality of generated scripts",
      "Correct async handling",
      "Recording state maintenance",
      "Security in script injection",
      "Security in origin validation",
      "Clear module communication",
      "Visual consistency",
      "Rendering performance",
      "Component simplicity",
      "Accessibility",
      "Type consistency",
      "Correct use of hooks",
      "No side effects",
      "Correct use of cleanUp",
      "No multiple instances",
      "Consistent hooks, state handling, and Chrome messaging",
      "Silent error handling",
      "Anonymity maintenance",
      "Consistent styles",
      "Correct HMR usage",
      "Component rendering clarity",
      "Selector generation robustness",
      "Type conformance",
      "Build error and warning checks",
      "Correct alias and loader configuration",
      "Security in secrets usage",
      "Type validation and immutability",
      "Test coverage for timestamp cases",
      "Correct use of mocks",
      "Critical flow coverage",
      "Readability maintenance"
    ],
    "documentation_requirements": [
      "Document config changes",
      "Document build scripts",
      "Clear documentation for internal APIs and extension usage",
      "Clear documentation for configs and tests",
      "Clear JSDoc documentation",
      "Explanatory code comments",
      "Clear documentation for extension internal APIs and script usage",
      "Clear documentation for public functions and events",
      "Clear documentation for message APIs",
      "Clear documentation for props and behavior",
      "JSDoc for components and functions",
      "Clear documentation for hooks and side effects",
      "Document new action types and components",
      "Clear documentation for public methods and classes",
      "Document selection attribute criteria",
      "Clear documentation for type declarations",
      "Document alias and compatibility limitations",
      "Document classes and enums with JSDoc",
      "Consistent JSDoc for public functions",
      "Clear documentation for builder public methods",
      "Clear environment setup documentation"
    ],
    "communication_style": [
      "Clear and concise comments",
      "Objective and technical comments, use English for technical terms",
      "Objective and clear comments in Portuguese for context",
      "PRs with detailed description",
      "Use of FIXME for improvement points"
    ],
    "decision_log": [
      "Opted for react-app preset for simplicity",
      "Enabled react-hot-loader for dev experience",
      "Chose TypeScript for type safety",
      "Multi-platform support (Chrome and Firefox)",
      "Adopted ts-jest for TypeScript testing",
      "Use of manifest v2 and v3 for compatibility",
      "Adopted React and TypeScript for UI",
      "Maintain Manifest Version 2 until full migration to V3",
      "Adopted Manifest V3 for greater security and performance",
      "Use of chrome.storage.local for persistence",
      "Clear separation between background and content scripts",
      "Use of messages for integration between webapp and extension",
      "SVG for scalable icons",
      "Functional components for UI",
      "Static asset import",
      "Enum for script types",
      "Controlled component for better integration",
      "Playwright for script generation",
      "Communication via chrome.runtime.sendMessage",
      "Hooks for encapsulating state and persistence logic",
      "Feature detection for Chrome and browser API compatibility",
      "Playwright selectors for greater accuracy",
      "Filter supported actions to avoid errors",
      "Clear separation between code generation and presentation",
      "react-syntax-highlighter for UI",
      "Enums for action and mode types",
      "Throttling for event optimization",
      "Functional component for simplicity and performance",
      "Shadow DOM for isolation",
      "Global exposure for external control",
      "Debounce for resize",
      "Filter irrelevant events for performance",
      "Shadow DOM for button encapsulation in UI",
      "React Functional Components and hooks for state and effects",
      "Separation between UI and recording logic",
      "Google Analytics for event collection",
      "Anonymous identifier for client ID",
      "HMR for faster development",
      "Penalties for selector ordering",
      "Fallbacks to ensure uniqueness",
      "Abstract classes for script generation contracts",
      "Subclass separation by framework",
      "Avoid id usage when invalid",
      "Prioritize testIdSelector for tests",
      "Type declarations (.d.ts) for static assets to avoid build errors",
      "Alias for Chrome and Firefox compatibility",
      "Enums to ensure valid values",
      "Clear separation between action types",
      "Strict mode to avoid production errors",
      "Remove chromeExtensionBoilerplate to avoid production build conflicts",
      "HotModuleReplacementPlugin for faster development",
      "TerserPlugin without mangling for easier production debugging",
      "Separation between migration and timestamp validation for clarity and maintenance",
      "Builder Pattern for script generation",
      "Clear separation between automation frameworks",
      "Playwright for end-to-end extension testing"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST for external communication",
      "Chrome Extensions Messaging API",
      "Message Passing API via postMessage and chrome.runtime",
      "WebExtensions API",
      "HTTP POST via fetch for Google Analytics Measurement Protocol",
      "Playwright API"
    ],
    "versioning_strategy": [
      "Semantic versioning for external APIs",
      "Manifest V3 compatibility",
      "No explicit versioning for internal APIs"
    ],
    "response_formats": [
      "JSON",
      "Simple JSON messages between scripts",
      "JavaScript Promises and callbacks"
    ],
    "rate_limiting": [
      "Limits imposed by deploysentinel.com external service"
    ]
  },
  "deployment_context": {
    "environments": [
      "development",
      "production",
      "staging",
      "localhost",
      "DeploySentinel (*.deploysentinel.com)",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Dev, Staging, Production via Chrome Extension"
    ],
    "deployment_method": [
      "Static hosting",
      "CI/CD pipelines",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Distribution via zip packages for Chrome and Firefox",
      "Chrome Extension packaging",
      "Browser extension injection",
      "Webpack Dev Server with HMR"
    ],
    "environment_variables": [
      "MANIFEST_VERSION",
      "NODE_OPTIONS",
      "NODE_ENV",
      "ASSET_PATH",
      "PORT",
      "npm_package_version",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local"
    ],
    "infrastructure_constraints": [
      "Browser extension API limitations",
      "Separate builds required for Chrome and Firefox",
      "Manifest V3 and Chrome API limitations",
      "Browser permission restrictions",
      "Dependency on Chrome Extensions API",
      "Execution limited to Chrome browser environment",
      "Shadow DOM support required",
      "Node.js local environment required for server",
      "Chrome Extension Manifest V3 compatibility"
    ]
  },
  "lastCommitHash": "ff3655172773aa43f4b023ef3643cedafd4d46ec"
}
