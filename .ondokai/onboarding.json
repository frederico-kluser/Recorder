{
  "project_metadata": {
    "name": "DeploySentinel Recorder - extensão para gravação de interações e geração automática de scripts de teste",
    "domain": [
      "Web Development",
      "Frontend Development",
      "Browser Extensions",
      "Automated Testing",
      "End-to-End Testing",
      "Browser Automation",
      "UI Components",
      "DevOps",
      "Continuous Deployment",
      "Monitoring",
      "Web Analytics",
      "Developer Tools",
      "Web Automation",
      "Quality Assurance",
      "UI Debugging",
      "CSS Selector Highlighting",
      "Web UI Testing",
      "Shadow DOM",
      "Build Automation",
      "JavaScript",
      "Node.js environment management",
      "Cross-browser compatibility"
    ],
    "current_phase": [
      "Development",
      "Production",
      "Stable Release",
      "Active Maintenance",
      "MVP",
      "Stabilization"
    ],
    "critical_business_rules": [
      "Preserve fast refresh functionality",
      "Ensure JSX transpilation compatibility",
      "Build must generate consistent artifacts",
      "Do not break deploy pipeline",
      "Accurate and complete capture of user events",
      "Correct and readable script generation",
      "Compatibility with multiple test frameworks",
      "Consistent test execution",
      "TypeScript support via ts-jest",
      "Node.js environment for testing",
      "Accurate and faithful test script generation",
      "Compatibility with multiple browsers",
      "Maintain integrity of captured data",
      "Ensure accurate capture of user interactions",
      "Generate scripts compatible with Cypress, Playwright, and Puppeteer",
      "Maintain security and privacy of captured data",
      "Recording must be started and finished correctly",
      "Navigation events must be captured only in the correct tab and frame",
      "Injected scripts must execute only in authorized context",
      "Strict validation of message origin",
      "Secure communication between webapp and extension",
      "Visual consistency of the icon",
      "Compatibility with React 18+",
      "Correct SVG rendering",
      "Ensure external links open in new tab",
      "Maintain brand visual consistency",
      "Avoid improper DOM manipulation",
      "Valid ScriptType selection must be ensured",
      "onChange callback must be called with correct value",
      "Ensure integrity of recorded data",
      "Send code only to authorized tabs",
      "Correct persistence of user preferences",
      "Consistent synchronization of recording state across tabs",
      "Recording state must be consistent",
      "Scripts must execute only in correct frames",
      "Unique identifiers must be persisted",
      "Actions must be displayed in correct order",
      "Only supported actions should be rendered",
      "Selectors must be precise to ensure correct element identification",
      "Correct and precise code generation",
      "Maintain integrity of generated code",
      "Faithful code rendering for analysis",
      "Accurate capture of user actions",
      "Secure handling of sensitive inputs",
      "Reliable code generation for multiple test frameworks",
      "Accurate highlighter positioning",
      "Consistent label rendering",
      "Do not interfere with user interaction",
      "Ensure only one active script instance",
      "Allow complete component cleanup to avoid leaks",
      "Do not register synthetic events",
      "Ignore events from control interface (overlay-controls)",
      "Avoid duplicate event registration",
      "Ensure only one recording is active at a time",
      "Do not mount multiple buttons in the DOM",
      "Correct communication with Chrome extension",
      "Ensure recordings are started and finished correctly",
      "Maintain integrity of recorded action data",
      "Do not allow simultaneous recording in multiple tabs without control",
      "Ensure user anonymity",
      "Send event data without impacting UX",
      "Maintain integrity of sent data",
      "Render Popup correctly in designated container",
      "Apply global styles without conflict",
      "Generate unique and valid selectors",
      "Maintain acceptable performance",
      "Avoid ambiguous selectors",
      "Generate valid scripts for multiple frameworks",
      "Maintain correct synchronization with navigation",
      "Preserve state of stateful actions",
      "Do not use invalid IDs for selectors",
      "Prioritize stable selectors to avoid test failures",
      "Ensure correct typing for CSS style imports",
      "Ensure browser API calls are compatible between Chrome and Firefox",
      "Actions must be typed and validated to avoid invalid executions",
      "Maintain integrity of interaction data for traceability",
      "Ensure strict typing to avoid runtime errors",
      "Maintain ES5 compatibility for legacy browsers",
      "Build must run in production mode",
      "Environment variables must be correctly defined",
      "NODE_ENV must always be set",
      "PORT must be a valid number",
      "Hot Module Replacement must be enabled for dev mode",
      "Dev server must serve assets with CORS headers",
      "Manifest version consistency",
      "Environment variable integrity",
      "Asset path correctness"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript",
      "JavaScript ES6+",
      "JSX",
      "Node.js",
      "JSON"
    ],
    "frameworks": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest",
      "ts-jest",
      "Chrome Extensions API (Manifest V2 and V3)",
      "APIs WebExtensions",
      "ReactDOM",
      "FontAwesome SVG Core",
      "WebpackDevServer"
    ],
    "databases": [
      "chrome.storage.local"
    ],
    "external_services": [
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "GitHub Actions",
      "DeploySentinel Webapp",
      "https://www.deploysentinel.com",
      "Chrome Extensions API",
      "Chrome Storage API",
      "APIs WebExtensions Chrome and Firefox",
      "Chrome Extension Messaging API",
      "DeploySentinel Analytics",
      "Google Analytics Measurement Protocol API",
      "FontAwesome CDN",
      "Firefox WebExtension API",
      "Browsers headless control APIs via Puppeteer/Playwright/Cypress",
      "Node.js environment",
      "Chrome APIs"
    ],
    "package_manager": [
      "npm",
      "yarn"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Modular Build Configuration",
      "Pipeline",
      "Observer Pattern",
      "Event-driven Architecture",
      "Modular Architecture",
      "Configuration Object Pattern",
      "Component-based UI",
      "Script-driven build pipeline",
      "Modular Chrome Extension Pattern",
      "Service Worker",
      "Content Script Injection",
      "Message Passing",
      "Controlled Component Pattern",
      "Custom React Hooks",
      "Adapter Pattern",
      "Declarative UI",
      "Separation of Concerns",
      "Hook-based State Management",
      "Functional Components",
      "Singleton",
      "Shadow DOM Encapsulation",
      "Factory Pattern",
      "Strategy Pattern",
      "Middleware Pattern",
      "Plugin Pattern"
    ],
    "folder_structure": [
      "Config files in root or config folder",
      "Source code in src/",
      "build/",
      "dist/",
      "assets/ - images and icons",
      "tests/ - E2E tests",
      "dist/ - builds for Chrome and Firefox",
      "utils - build and server utility scripts",
      "background/ - background scripts",
      "content_scripts/ - injected scripts",
      "popup/ - extension UI",
      "Common/utils - shared utility functions",
      "src/components - reusable UI components",
      "src/types - TypeScript type definitions and enums",
      "builders - code generation logic",
      "src/hooks - custom hooks",
      "src/utils - state and tab management utilities",
      "types/ - type definitions and enums",
      "builders/ - selector and code generation helpers",
      "components/ - reusable React components",
      "styles/ - CSS files",
      "src/builders - code generation logic",
      "/Common - shared hooks and utilities",
      "/types - TypeScript type definitions",
      "src/components/Highlighter - visual component and styles",
      "./ControlBar - main React component",
      "../Common - shared styles",
      "root - bootstrap and injection script",
      "Content - recording content components",
      "Popup - extension popup UI",
      "Common/utils for utility functions",
      "analytics module for events",
      "./Popup (component)",
      "./index.css (local styles)",
      "../Common/styles.css (shared styles)",
      "test/ - unit tests",
      "src/actions - action and type definitions",
      "config/ - centralized configuration files",
      "scripts/ - automation scripts",
      "src/pages - extension-specific scripts (Popup, Background, Content, Bridge, CypressTrigger)",
      "src/assets - static resources"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for React components",
      "kebab-case for files",
      "PascalCase for types and interfaces",
      "snake_case for config files",
      "UPPER_SNAKE_CASE for enums and constants",
      "Descriptive names for scripts and assets",
      "prefix use for hooks",
      "PascalCase for classes",
      "kebab-case for CSS classes",
      "CamelCase for classes and functions",
      "*.css for style files",
      "declaration.d.ts for global declarations",
      "PascalCase for classes and plugins",
      "CamelCase for files and folders",
      "Extensions indicate language (.jsx, .tsx, .ts)"
    ],
    "module_boundaries": [
      "Separation between config and source code",
      "Plugins isolated from presets",
      "Clear separation between source code and generated artifacts",
      "Clear separation between event capture, script generation, and extension UI",
      "Independent modules for Chrome and Firefox",
      "Isolated configuration for Jest",
      "Clear separation between frontend (React) and build scripts",
      "Dependencies isolated by environment (devDependencies vs dependencies)",
      "Clear separation between background scripts, content scripts, and UI (popup)",
      "Communication via Chrome Runtime messages",
      "Clear separation between utilities and background logic",
      "Injected scripts isolated by tab and frame context",
      "Clear separation between extension code and webapp code",
      "Components isolated with props for communication",
      "Types imported for consistency",
      "Clear separation between state management, code generation, and runtime communication",
      "Clear separation between hooks, utilities, and types",
      "Unidirectional dependency from hooks to utils and types",
      "Clear separation between storage handling, script execution, and tab control",
      "Clear separation between types, builders, and components",
      "UI components separated from business logic",
      "Builders isolated for selector and code generation",
      "Common utilities shared across modules",
      "Highlighter component isolated with explicit style import",
      "Clear separation between UI (ControlBar) and bootstrap script",
      "Shadow DOM isolation for UI performance",
      "Unidirectional dependency to avoid circular coupling",
      "Custom hooks for shared state",
      "Analytics module isolated, dependent only on external utils",
      "Clear separation between components and styles",
      "Unidirectional dependency from Popup component to styles",
      "Clear separation between utility functions, search logic, and optimization",
      "Clear separation between TypeScript code and static CSS files",
      "Clear separation between compatibility modules and business logic",
      "Specific classes for each ActionType",
      "Clear separation between source code and build",
      "Module resolution via Node.js",
      "Clear separation between configuration (webpack.config.js) and execution (build script)",
      "Isolated configuration module, no external dependencies",
      "Clear separation between extension scripts and assets",
      "Use of aliases for secret modules"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript/TypeScript Style Guide",
      "Prettier"
    ],
    "linting_rules": [
      "ESLint with React plugin",
      "ESLint with TypeScript rules",
      "ESLint with plugins for React, JSX Accessibility, import, and React Hooks",
      "TypeScript strict mode enabled",
      "No explicit use of any",
      "Prohibition of implicit any",
      "ESLint with Airbnb standard rules"
    ],
    "formatting": [
      "Prettier with default settings",
      "singleQuote: true",
      "trailingComma: es5",
      "printWidth: 80",
      "arrowParens: always"
    ],
    "documentation_style": [
      "JSDoc for functions and components",
      "JSDoc for public functions and complex methods",
      "Inline comments for complex logic",
      "TypeScript typing for implicit documentation"
    ],
    "type_checking": [
      "Strict TypeScript",
      "Strict TypeScript typing",
      "Strict TypeScript with explicit typing in components and functions",
      "Strict TypeScript (noImplicitAny, strictNullChecks)",
      "Extensive use of types and enums"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest",
      "Playwright test Runner",
      "React Testing Library"
    ],
    "test_structure": [
      "__tests__ folders colocated with components",
      "tests/unit/ for unit tests",
      "tests/e2e/ for end-to-end tests",
      "Test files with .test.tsx extension"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "Minimum 80% coverage for UI components and hooks"
    ],
    "test_patterns": [
      "AAA (Arrange-Act-Assert)",
      "Given-When-Then",
      "Snapshot testing for visual components",
      "Mocking of hooks and Chrome APIs"
    ],
    "mocking_approach": [
      "jest.mock for modules",
      "Mocks for browser APIs",
      "Fixtures for input data",
      "Mocks with Jest and ts-jest",
      "Mocks for chrome.runtime and window.postMessage",
      "Mocks for external dependencies",
      "Mocks for Chrome APIs and DOM events"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "CI checks",
      "Checks for lint and automated tests",
      "Mandatory review and approved automated tests"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Build",
      "Testing",
      "Deploy",
      "Automated build, lint, test, and deploy via GitHub Actions",
      "Deploy to Chrome and Firefox"
    ]
  },
  "commands": {
    "setup": [
      "npm install",
      "yarn install"
    ],
    "install": [
      "npm install",
      "yarn install"
    ],
    "dev": [
      "npm start",
      "npm run dev",
      "yarn start",
      "yarn run start-chrome",
      "yarn run start-ff",
      "webpack --mode development --watch"
    ],
    "test": [
      "npm test",
      "yarn test",
      "npm run test"
    ],
    "build": [
      "npm run build",
      "yarn build",
      "yarn run build-chrome",
      "yarn run build-ff",
      "webpack --mode production"
    ],
    "lint": [
      "npm run lint",
      "eslint src/ --ext .ts,.tsx",
      "eslint .",
      "yarn lint"
    ],
    "format": [
      "npm run format",
      "prettier --write src/",
      "prettier --write .",
      "yarn format"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2 via DeploySentinel Webapp",
      "OAuth2 via Chrome Extension permissions"
    ],
    "authorization_rules": [
      "Recording restricted to authorized tab and frame",
      "Injected scripts only after state validation",
      "Message origin validation",
      "Restricted permissions in the extension",
      "Access control via browser context and extension permissions"
    ],
    "sensitive_data": [
      "Recording data stored locally without explicit encryption",
      "Test URLs",
      "Recording codes",
      "User recording data handled with care",
      "Unique identifiers stored locally without encryption",
      "Password inputs are masked in display",
      "isPassword flag for sensitive data handling",
      "Client ID generated anonymously, no personal data"
    ],
    "security_headers": [
      "Content-Security-Policy for messaging",
      "Recommended use of rel=\"noopener noreferrer\" for external links",
      "Default Chrome Extension headers",
      "Managed by browser and extension"
    ],
    "encryption_requirements": [
      "No encryption implemented for local storage",
      "TLS for web communication",
      "Secure communication via internal Chrome messages"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Recording updates and script injection must occur in milliseconds to avoid UX impact",
      "Messages processed in < 100ms",
      "Instant component rendering",
      "Asynchronous operations with Promises to avoid blocking",
      "UI update with throttling for mouse events (100ms)",
      "Real-time event processing with debounce for resize",
      "Button interaction must be instant (<100ms)",
      "Responsive UI interaction without perceptible blocking",
      "Low latency for selector generation"
    ],
    "optimization_priorities": [
      "Developer experience",
      "Fast refresh",
      "Build speed",
      "Bundle size",
      "Low latency in event capture",
      "Efficient memory usage during recording",
      "Performance in event capture",
      "Minimize browser impact",
      "Minimize overhead in non-recorded tabs",
      "Low latency in communication",
      "Clarity and UI legibility prioritized over extreme performance",
      "Fast rendering",
      "Low latency in code generation",
      "Responsiveness of the interface",
      "Minimize impact of listeners",
      "Low computational complexity",
      "Minimize impact on main DOM",
      "Shadow DOM isolation for UI performance",
      "Minimize event listener overhead, avoid duplication",
      "Low latency and minimal UI impact",
      "Speed and UI fluidity prioritized",
      "Low latency in event collection, minimal UX impact",
      "Minimize re-renders",
      "Avoid excessive inline style injection",
      "Balance speed and short/readable selectors",
      "Efficiency in script generation",
      "Minimization of redundant code",
      "Speed and robustness in selector generation",
      "Low latency in action capture and execution",
      "Fast and efficient build",
      "Optimized production build (minification, tree shaking)",
      "Fast feedback in development",
      "Minification with TerserPlugin, mangling disabled for debugging"
    ],
    "caching_strategy": [
      "Intermediate build cache",
      "Use of chrome.storage.local for lightweight persistence",
      "Browser cache for static resources",
      "Use of localStorage for temporary persistence",
      "Use of React state for in-memory local cache",
      "No persistent cache implemented",
      "Webpack default caching for incremental builds",
      "Cache disabled for popup.html to ensure update"
    ],
    "scalability_considerations": [
      "Task parallelization",
      "Support for long recordings without perceptible degradation",
      "Scalability limited to browser context and number of open tabs",
      "Lightweight, reusable component for multiple instances",
      "Componentization for easy extension and maintenance",
      "Avoid multiple instances to reduce memory usage",
      "Support for continuous recording in SPA applications",
      "Support for multiple frameworks and sequential actions",
      "Extensibility for new action types",
      "Modular configuration to support multiple scripts and assets"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standardized logs",
      "Errors thrown via throw new Error with clear messages",
      "Errors thrown via promise reject with clear messages",
      "Try-catch to avoid visible user failures",
      "Immediate error throw on build failure",
      "Fallbacks for unsupported script types"
    ],
    "logging_strategy": [
      "console logs",
      "Local logs for debug during development",
      "Error reports via CI",
      "Minimal use of console.log, no structured logging system",
      "Implicit use of console and analytics for monitoring",
      "Logs for critical errors"
    ],
    "monitoring_tools": [
      "GitHub Actions for build and test monitoring",
      "DeploySentinel Analytics integrated",
      "Possible integration with external tools",
      "Chrome extension monitoring tools"
    ],
    "error_recovery": [
      "Automatic retry on build failures",
      "Recovery from recording failures with restart option",
      "Basic handling via state checks and early returns",
      "Promise rejection for critical failures, no explicit fallback",
      "Listeners correctly removed to avoid leaks",
      "Function cleanUp to unmount and release resources",
      "Avoid duplication and invalid events to maintain integrity",
      "Retry for DOM element selection with attempt limit",
      "Basic handling via React states and UI messages",
      "Fallbacks for alternative selectors",
      "Hot Module Replacement for fast error recovery in development"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "react-app preset",
      "react-hot-loader",
      "Webpack",
      "Babel",
      "Node.js",
      "Chrome and Firefox extension APIs",
      "Supported test frameworks",
      "@jest/types",
      "ts-jest",
      "react",
      "typescript",
      "jest",
      "playwright",
      "webpack",
      "babel",
      "chrome.runtime",
      "chrome.storage",
      "chrome.contextMenus",
      "chrome.webNavigation",
      "deploysentinel.com API",
      "../Common/utils",
      "window.postMessage",
      "React 18",
      "ScriptType enum",
      "localStorageGet and setEndRecordingStorage utils",
      "builders genCode",
      "Chrome Storage API",
      "APIs chrome and browser for WebExtensions",
      "Playwright selectors",
      "type definitions",
      "react-syntax-highlighter",
      "genCode function",
      "Recorder",
      "Selector builders",
      "Highlighter.css",
      "ReactDOM",
      "FontAwesome",
      "Shadow DOM API",
      "chrome.storage.local",
      "lodash.debounce",
      "genSelectors",
      "Chrome Extension Messaging API",
      "react-copy-to-clipboard",
      "getRandomInstallId",
      "Google Analytics API",
      "react-dom",
      "@fortawesome/fontawesome-svg-core",
      "DOM browser API",
      "@playwright/test",
      "puppeteer",
      "cypress",
      "finder module",
      "TypeScript",
      "css-loader (Webpack)",
      "chrome API",
      "webpack.config.js",
      "process.env (Node.js)",
      "webpack-dev-server",
      "path",
      "env",
      "clean-webpack-plugin",
      "copy-webpack-plugin",
      "html-webpack-plugin",
      "terser-webpack-plugin"
    ],
    "deprecated_packages": [
      "No deprecated packages identified",
      "Mixed use of chrome and browser may indicate ongoing migration"
    ],
    "version_constraints": [
      "Compatibility with recent Chrome and Firefox versions",
      "Compatibility between Jest 29.x and ts-jest",
      "React >=18.0.0",
      "TypeScript >=5.0",
      "Manifest Version 3",
      "Chrome Extensions API compatible",
      "TypeScript >=4.9",
      "Compatibility with manifest v2 and v3",
      "lodash.debounce compatible with lodash 4.x",
      "Target ES5",
      "Module ESNext",
      "Compatibility with Webpack 5 and Node.js 16+"
    ],
    "internal_packages": [
      "../Common/utils",
      "Internal modules of DeploySentinel extension",
      "../types (ScriptType)",
      "./utils",
      "../builders",
      "../types",
      "../builders/selector",
      "./recorder",
      "./Highlighter",
      "./ActionList",
      "./CodeGen",
      "Highlighter.css (local styles)",
      "./ControlBar",
      "../Common/styles.css",
      "../Common/Icon",
      "../Common/hooks",
      "../Common/endRecording",
      "Common",
      "Content",
      "Popup",
      "builders",
      "types",
      "./Popup",
      "./selector",
      "./finder",
      "./env",
      "../webpack.config",
      "./utils/env",
      "secrets.{env}.js"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Build scripts not fully modularized",
      "Limited support for file upload capture",
      "Dependency on Manifest V2, which is being deprecated",
      "Lack of robust error handling",
      "No structured logging",
      "Use of inline styles may hinder maintenance",
      "Complex state management may grow with new features",
      "Lack of memoization to avoid unnecessary re-renders",
      "Improve error handling and fallback for browsers without exportFunction",
      "Strong dependency on Chrome Extensions environment",
      "Bug fix for multiple mounting in Firefox",
      "Async error handling can be improved",
      "Limited internal documentation",
      "Limited optimization for very complex selectors",
      "Incomplete dragAndDrop implementation in Cypress",
      "Hardcoded configuration for localhost and fixed port",
      "Extensive configuration may hinder maintenance"
    ],
    "known_issues": [
      "Potential incompatibility of react-hot-loader with React 18+",
      "Limitations in capturing hover events in some contexts",
      "Possible race condition in async updates",
      "Strong dependency on Chrome API limits local testing",
      "Exclusive dependency on Chrome",
      "Missing rel=\"noopener noreferrer\" in external links",
      "Strong dependency on chrome.runtime API",
      "chrome.storage API dependency limits use outside extension environment",
      "Lack of error handling in some Promises",
      "Dependency on browser-specific APIs may limit portability",
      "Dependency on external styles may cause visual failures",
      "Possible incompatibility with unsupported browsers",
      "TypeScript typing ignored in shadowRoot",
      "Possible event loss in concurrency cases",
      "Possible failure to locate DOM elements in custom environments",
      "Possible inconsistency when switching tabs during recording",
      "no-cors mode limits failure detection in requests",
      "Possible performance impact from inline styles",
      "Performance may drop in documents with many similar elements",
      "Exposure of action object via getter (FIXME comment)",
      "Selectors may not be unique in apps with unreliable IDs",
      "Differences between Chrome and Firefox APIs may cause incompatibilities",
      "Host check disabling may cause security risks",
      "Possible secrets leakage if not managed correctly"
    ],
    "performance_bottlenecks": [
      "Slow build in large projects",
      "Possible browser performance impact due to continuous script injection",
      "Frequent navigation events may cause overhead",
      "Script execution may impact performance in tabs with many frames",
      "Frequent mouse events mitigated by throttling",
      "Global event listeners may impact performance",
      "Polling for retrySelector may impact performance if maxRetries is high",
      "Multiple inline style injections may affect rendering",
      "Combinatorial selector generation and multiple querySelectorAll validations",
      "Selector generation in very large DOMs may be slow",
      "Minification disables mangling for easier debugging, impacting final size"
    ],
    "migration_status": [
      "Stable, no migrations in progress",
      "Partial migration to manifest v3 evidenced by conditional API usage"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Preserve hot reload functionality",
      "Code style consistency",
      "Performance",
      "Maintainability",
      "Code clarity and readability",
      "Test coverage",
      "Strong typing maintenance",
      "Conformance to code standards",
      "Code quality",
      "Security in data handling",
      "Clear separation of responsibilities",
      "Correct use of Chrome APIs",
      "Proper async handling",
      "Recording state maintenance",
      "Script injection security",
      "Origin validation security",
      "Clear module communication",
      "Visual consistency",
      "Rendering performance",
      "Component simplicity",
      "External link security",
      "Error handling",
      "Communication security",
      "State consistency",
      "Correct use of hooks",
      "Side effect handling",
      "Consistency in chrome/browser API usage",
      "Proper error handling",
      "Conditional rendering clarity",
      "Correct use of types",
      "Action order maintenance",
      "Performance and accessibility",
      "Typing clarity",
      "No side effects",
      "Correct use of cleanUp",
      "No multiple instances",
      "Event duplication and strong typing verification",
      "Consistency of hooks, state handling, and Chrome messages",
      "State management clarity",
      "UI consistency",
      "Silent error handling",
      "Correct use of async/await",
      "Anonymity maintenance",
      "Style consistency",
      "Correct use of HMR",
      "Component rendering clarity",
      "Search logic clarity",
      "Code generation clarity",
      "Selector generation robustness",
      "Typing and CSS integration consistency",
      "Cross-browser compatibility",
      "Type consistency",
      "Action modeling clarity",
      "Conformance to TS and React standards",
      "Build configuration verification",
      "HMR and environment variable configuration verification",
      "Correct configuration of aliases and loaders",
      "Secrets usage security"
    ],
    "documentation_requirements": [
      "Document config changes",
      "Document build scripts",
      "Clear documentation for internal APIs and extension usage",
      "Clear documentation for configurations and tests",
      "Clear documentation in JSDoc",
      "Explanatory code comments",
      "Clear documentation for internal APIs and capture flow",
      "Clear documentation for public functions and events",
      "Clear documentation for messaging APIs",
      "Minimal documentation for simple components",
      "Clear documentation for reusable components",
      "JSDoc for components and functions",
      "Clear documentation for hooks and types",
      "Clear documentation for utility functions and data contracts",
      "Document new action types and components",
      "Clear documentation for public functions and components",
      "Clear documentation for complex components and functions",
      "Props and behavior documentation",
      "Document global functions and Firefox integration",
      "Document public functions and complex flows",
      "Clear documentation for React hooks and components",
      "Clear comments in complex functions",
      "Custom hook documentation",
      "Simple and clear comments",
      "Document React components with JSDoc",
      "Clear documentation for public functions and config options",
      "Explanatory comments for complex actions",
      "Document attribute selection criteria",
      "Document global types and modules",
      "Document aliases and compatibility limitations",
      "Document classes and enums with JSDoc",
      "Inline documentation with JSDoc",
      "Clear documentation for build scripts",
      "Clear documentation for development environment configuration",
      "Minimal inline documentation, focus on clear configuration"
    ],
    "communication_style": [
      "Clear and concise comments",
      "Objective and explanatory comments",
      "Use of PRs for discussion",
      "Objective and informative comments",
      "Objective and technical comments, focus on behavior and impact",
      "Objective and technical comments",
      "Objective and clear comments",
      "Objective and direct comments",
      "Technical comments in Portuguese, technical terms in English",
      "PRs with detailed description",
      "Clear and objective comments, use of Portuguese for context",
      "Clear and objective comments, use of JSDoc",
      "Objective comments and use of technical English for specific terms",
      "Use of English for technical terms",
      "Inline comments to describe generated actions",
      "Clear and objective in Portuguese with technical terms in English",
      "Succinct and objective comments"
    ],
    "decision_log": [
      "Opted for react-app preset for simplicity",
      "Enabled react-hot-loader for dev experience",
      "Chose TypeScript for type safety",
      "Multi-platform support (Chrome and Firefox)",
      "Adopted ts-jest for TypeScript testing",
      "Use of manifest v2 and v3 for compatibility",
      "Adopted React and TypeScript for UI",
      "Adopted Manifest V2 for current compatibility",
      "Use of content scripts for granular capture",
      "Use of chrome.storage.local for persistence",
      "Clear separation between background and content scripts",
      "Use of messages for integration between webapp and extension",
      "Use of SVG for scalable icons",
      "Stateless functional component for simplicity",
      "Use of enum for script types",
      "Controlled component for better integration",
      "Use of Playwright for script generation",
      "Communication via chrome.runtime.sendMessage",
      "Use of hooks to encapsulate state and persistence logic",
      "Decision to support manifest v2 and v3 simultaneously",
      "Use of Playwright selectors for higher accuracy",
      "Filtering supported actions to avoid errors",
      "Clear separation between code generation and presentation",
      "Use of react-syntax-highlighter for UI",
      "Use of enums for action types and modes",
      "Throttling for event optimization",
      "Functional component for simplicity and performance",
      "Shadow DOM for isolation",
      "Global exposure for external control",
      "Debounce for resize and overlay event filtering",
      "Shadow DOM for button encapsulation in UI",
      "React hooks for shared state",
      "Clear separation between UI and recording logic",
      "Use of Google Analytics for event collection",
      "Anonymous identifier for client ID",
      "HMR for faster development",
      "Penalties to order selectors",
      "Fallbacks to ensure uniqueness",
      "Builders separated by framework",
      "Abstract classes for standardization",
      "Avoid use of id when invalid",
      "Prioritize testIdSelector for tests",
      "declaration.d.ts for CSS Modules support",
      "Alias for Chrome and Firefox compatibility",
      "Enums to ensure valid values",
      "Clear separation between action types",
      "Strict mode to avoid production errors",
      "Webpack for production build",
      "Explicit environment variable definition",
      "HotModuleReplacementPlugin for faster development",
      "TerserPlugin without mangling for easier production debugging"
    ]
  },
  "api_specifications": {
    "api_style": [
      "Chrome Extensions Messaging API",
      "Message Passing API via postMessage and chrome.runtime",
      "APIs WebExtensions standard (chrome/browser)",
      "Event-driven via DOM and Chrome Runtime messages",
      "HTTP POST via fetch for Google Analytics Measurement Protocol"
    ],
    "versioning_strategy": [
      "No explicit versioning in code",
      "Compatibility with multiple manifest versions",
      "Manifest version via MANIFEST_VERSION environment variable"
    ],
    "response_formats": [
      "Simple JSON messages between scripts",
      "JSON objects with properties source, type, code, actions",
      "Promises and standard API callbacks",
      "JSON objects representing user actions"
    ],
    "rate_limiting": [
      "Debounce applied for resize events",
      "No explicit rate limiting implemented"
    ]
  },
  "deployment_context": {
    "environments": [
      "development",
      "production",
      "staging",
      "Dev: http://localhost",
      "Prod: https://*.deploysentinel.com",
      "Production via Chrome Web Store",
      "Production in extension stores",
      "Local development, Chrome Extensions environment",
      "Browser environment, any compatible DOM"
    ],
    "deployment_method": [
      "Static hosting",
      "CI/CD pipelines",
      "Docker",
      "Kubernetes",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Distribution via zip packages for Chrome and Firefox",
      "Chrome Extension packaging",
      "Publicação em Chrome Web Store e Firefox Add-ons",
      "Webpack Dev Server with HMR"
    ],
    "environment_variables": [
      "MANIFEST_VERSION",
      "NODE_OPTIONS",
      "BABEL_ENV",
      "NODE_ENV",
      "ASSET_PATH",
      "PORT",
      "npm_package_version"
    ],
    "infrastructure_constraints": [
      "Browser extension API limitations",
      "Need for separate builds for Chrome and Firefox",
      "Manifest V2 limitations",
      "Manifest V3 limitations for background scripts",
      "Restricted permissions for security",
      "Chrome Extensions API dependency",
      "HTTPS support for external links",
      "WebExtensions environment limitations",
      "Browser API dependency for storage and events",
      "Shadow DOM support limitation",
      "Node.js compatible environment for local builds",
      "Chrome Extension Manifest v3 compatibility"
    ]
  },
  "lastCommitHash": "7fd5cb1e7decc79e535787dfc2c5834c3f2171d8"
}
