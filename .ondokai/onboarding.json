{
  "project_metadata": {
    "name": "Fleury Cypress Recorder - extensão para gravação de interações e geração automática de scripts de teste",
    "domain": [
      "Web/Mobile/Desktop",
      "Frontend Development",
      "Browser Extensions",
      "Test Automation",
      "End-to-End Testing",
      "Browser Automation",
      "UI Components",
      "DevOps",
      "Continuous Deployment",
      "Monitoring",
      "Quality Assurance",
      "Web Analytics",
      "Developer Tools",
      "Web Automation",
      "UI Debugging",
      "CSS Selector Highlighting",
      "Web UI Testing",
      "User Behavior Analytics",
      "Build Automation",
      "JavaScript",
      "Node.js",
      "Software Development",
      "Event Processing",
      "Action Logging"
    ],
    "current_phase": [
      "Development",
      "Production",
      "Stable Release",
      "MVP",
      "Active Maintenance",
      "Local Testing",
      "Production Ready",
      "Test Coverage Expansion"
    ],
    "critical_business_rules": [
      "Preserve fast refresh functionality",
      "Ensure JSX transpilation compatibility",
      "Build must generate consistent artifacts",
      "Do not break deploy pipeline",
      "Accurate and complete capture of user events",
      "Correct and readable script generation",
      "Compatibility with multiple test frameworks",
      "Consistent test execution",
      "TypeScript support via ts-jest",
      "Node.js environment for testing",
      "Accurate and faithful test script generation",
      "Compatibility with multiple browsers",
      "Maintain integrity of captured data",
      "Ensure accurate capture of user interactions",
      "Generate scripts compatible with Cypress, Playwright, and Puppeteer",
      "Maintain security and privacy of captured data",
      "Recording must be started and finished correctly",
      "Navigation events must be captured only in the correct tab and frame",
      "Injected scripts must execute only in authorized context",
      "Strict validation of message origin",
      "Secure communication between webapp and extension",
      "Visual consistency of the icon",
      "Compatibility with React 18+",
      "Correct SVG rendering",
      "Ensure external links open in new tab",
      "Maintain brand visual consistency",
      "Avoid improper DOM manipulation",
      "Valid ScriptType selection must be guaranteed",
      "onChange callback must be called with correct value",
      "Ensure integrity of recorded data",
      "Send code only to authorized tabs",
      "Correct persistence of user preferences",
      "Consistent synchronization of recording state between tabs",
      "Integrity of stored data",
      "Correct persistence of recording state",
      "Secure script execution in specific frames",
      "Accurate identification of Cypress test tabs",
      "Actions must be displayed in correct order",
      "Only supported actions should be rendered",
      "Selectors must be precise to ensure correct element identification",
      "Correct and precise code generation",
      "Maintain integrity of generated code",
      "Faithful code rendering for analysis",
      "Accurate capture of user actions",
      "Secure handling of sensitive inputs",
      "Reliable code generation for multiple test frameworks",
      "Accurate highlighter positioning",
      "Consistent label rendering",
      "Do not interfere with user interaction",
      "Ensure only one active script instance",
      "Allow complete component cleanup to avoid leaks",
      "Do not log password field events",
      "Avoid event duplication",
      "Consistent persistence in local storage",
      "Ensure only one recording is active at a time",
      "Do not mount multiple buttons in the DOM",
      "Correct communication with Chrome extension",
      "Preserve integrity of recorded scripts",
      "Ensure correct synchronization between tabs and recording",
      "Do not allow recording without active tab",
      "Ensure user anonymity",
      "Send event data without impacting UX",
      "Maintain integrity of sent data",
      "Render Popup correctly in designated container",
      "Apply global styles without conflict",
      "Generate unique and valid selectors",
      "Maintain acceptable performance",
      "Avoid ambiguous selectors",
      "Maintain integrity of sequential actions",
      "Generate valid scripts for multiple frameworks",
      "Synchronize actions with navigation and timing",
      "Do not use invalid IDs for selectors",
      "Prioritize stable selectors to avoid test failures",
      "Ensure correct typing for CSS style imports",
      "Ensure browser API calls are compatible between Chrome and Firefox",
      "Actions must be typed and validated to avoid invalid executions",
      "Maintain integrity of interaction data for traceability",
      "Ensure strict typing to avoid runtime errors",
      "Maintain ES5 compatibility for legacy browsers",
      "Build must run in production mode",
      "Build errors must be reported and block deploy",
      "NODE_ENV must always be defined",
      "PORT must be a valid number",
      "Hot Module Replacement must be enabled for dev mode",
      "Dev server must serve assets with CORS headers",
      "Manifest version consistency",
      "Environment variable integrity",
      "Asset path correctness",
      "Do not version dependency files",
      "Do not expose sensitive config files",
      "Keep repository clean and organized",
      "All actions must have valid, non-negative, and sequential timestamps",
      "Preserve temporal order of actions",
      "Respect minimum and maximum wait time limits",
      "Do not insert waits when disabled"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript",
      "JavaScript ES6+",
      "JSX",
      "Node.js",
      "JSON"
    ],
    "frameworks": [
      "React",
      "Webpack",
      "Babel",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest",
      "ts-jest",
      "Chrome Extensions API (Manifest V2/V3)",
      "WebExtensions API",
      "ReactDOM",
      "FontAwesome SVG Core",
      "WebpackDevServer"
    ],
    "databases": ["chrome.storage.local", "localStorage"],
    "external_services": [
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "GitHub Actions",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "deploysentinel.com API",
      "DeploySentinel Webapp",
      "Chrome Extension APIs",
      "Chrome Storage API",
      "Chrome Extension Messaging API",
      "Clipboard API",
      "Google Analytics Measurement Protocol API",
      "FontAwesome CDN",
      "Firefox WebExtension API",
      "Browsers headless control APIs",
      "Node.js environment"
    ],
    "package_manager": ["npm", "yarn"]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Modular Build Configuration",
      "Pipeline",
      "Observer Pattern",
      "Event-driven Architecture",
      "Modular Architecture",
      "Configuration Object Pattern",
      "Component-based UI",
      "Script-driven Build Pipeline",
      "Service Worker",
      "Content Script Injection",
      "Message Passing",
      "Controlled Component Pattern",
      "Custom React Hooks",
      "Facade Pattern for API Abstraction",
      "Declarative UI",
      "Separation of Concerns",
      "Hook-based State Management",
      "Functional Components",
      "Singleton",
      "Shadow DOM Encapsulation",
      "Debounce",
      "Hook Pattern",
      "Hot Module Replacement",
      "Generator Pattern",
      "Builder Pattern",
      "Factory Pattern",
      "Template Method",
      "Strategy Pattern",
      "Alias Pattern",
      "Object-Oriented Programming",
      "Enum-based State Modeling",
      "Middleware Pattern",
      "Plugin Pattern",
      "Functional Programming",
      "Modular Design",
      "Modular Testing"
    ],
    "folder_structure": [
      "Config files in root or config folder",
      "Source code in src/",
      "build/",
      "dist/",
      "assets/ - images and icons",
      "tests/ - E2E and unit tests",
      "background/ - background scripts",
      "content_scripts/ - injected scripts",
      "popup/ - extension UI",
      "Common/utils - shared utility functions",
      "src/components - reusable UI components",
      "src/types - TypeScript type definitions",
      "builders/ - code and selector generation",
      "src/hooks - custom hooks",
      "src/utils - storage and script utilities",
      "styles/ - CSS files",
      "config/ - Webpack and environment configs",
      "scripts/ - build and automation scripts",
      "src/pages - extension scripts (Popup, Background, Content, Bridge, CypressTrigger)",
      "src/assets - static resources",
      "node_modules - external dependencies",
      "coverage - test reports"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for React components, types, and enums",
      "kebab-case for files and CSS classes",
      "UPPER_SNAKE_CASE for enums and constants",
      "snake_case for config files",
      "Descriptive names for scripts and assets",
      "Prefix 'use' for hooks",
      "File extensions: .tsx for components, .ts for types",
      ".env for local configs",
      "secrets.*.js for sensitive files"
    ],
    "module_boundaries": [
      "Separation between config and source code",
      "Plugins isolated from presets",
      "Clear separation between event capture, script generation, and extension UI",
      "Independent modules for Chrome and Firefox",
      "Isolated configuration for Jest",
      "Clear separation between frontend (React) and build scripts",
      "Dependencies isolated by environment (devDependencies vs dependencies)",
      "Clear separation between background scripts, content scripts, and UI (popup)",
      "Communication via Chrome Runtime messages",
      "Clear separation between utilities and background logic",
      "Isolated injected scripts by tab and frame context",
      "Clear separation between extension code and webapp code",
      "Isolated components with explicit props for communication",
      "Types imported for consistency",
      "Clear separation between state management, code generation, and runtime communication",
      "Clear separation between hooks, utils, and types",
      "Unidirectional dependency from hooks to utils and types",
      "Clear separation between storage handling, script execution, and tab control",
      "Clear separation between types, builders, and components",
      "UI components separated from business logic",
      "Builders isolated for selector and code generation",
      "Common utilities shared across modules",
      "Shadow DOM isolation for UI performance",
      "Clear separation between UI (Popup) and recording/utilities logic",
      "Custom hooks for shared state",
      "Analytics module isolated, dependent only on external utils",
      "Clear separation between components and styles",
      "Unidirectional dependency for avoiding circular coupling",
      "Clear separation between code generation (genCode) and types (types)",
      "Isolated tests for specific functionalities"
    ]
  },
  "code_standards": {
    "style_guide": ["Airbnb JavaScript/TypeScript Style Guide", "Prettier"],
    "linting_rules": [
      "ESLint with React and TypeScript plugins",
      "TypeScript strict mode enabled",
      "Rules to avoid any and enforce strong typing",
      "Rules for async/await, no-unused-vars, consistent-return",
      "ESLint with rules for ES6+, browser and node environments",
      "ESLint with Airbnb rules"
    ],
    "formatting": [
      "Prettier with default settings",
      "singleQuote: true",
      "trailingComma: es5",
      "printWidth: 80",
      "arrowParens: always"
    ],
    "documentation_style": [
      "JSDoc for functions, classes, and components",
      "Inline comments for complex logic"
    ],
    "type_checking": [
      "Strict TypeScript",
      "Strict TypeScript checking enabled",
      "Strict TypeScript with explicit typing for events and actions"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest",
      "Playwright",
      "Cypress",
      "React Testing Library"
    ],
    "test_structure": [
      "__tests__ folders colocated with components and modules",
      "tests/unit/ for unit tests",
      "tests/integration/ for integration tests",
      "tests/e2e/ for end-to-end tests"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "Minimum 80% for critical modules and UI components",
      "Minimum 90% for critical functions"
    ],
    "test_patterns": [
      "AAA (Arrange-Act-Assert)",
      "Given-When-Then",
      "Snapshot testing for visual components",
      "Mocking browser APIs"
    ],
    "mocking_approach": [
      "jest.mock for modules",
      "Mocks for browser APIs (chrome, localStorage)",
      "Fixtures for input data and storage states",
      "Mocks for external dependencies and Chrome APIs",
      "Mocks for DOM APIs and events"
    ]
  },
  "development_workflow": {
    "branch_strategy": ["GitHub Flow", "git Flow"],
    "commit_conventions": ["Conventional Commits"],
    "pr_requirements": [
      "Code review mandatory",
      "CI checks",
      "Checks for lint and automated tests",
      "Build must pass without errors",
      "At least one reviewer approval"
    ],
    "ci_cd_pipeline": [
      "Linting",
      "Testing",
      "Build",
      "Deploy",
      "Automated build, lint, test, and deploy via GitHub Actions",
      "Deploy to Chrome and Firefox"
    ]
  },
  "commands": {
    "setup": ["npm install", "yarn install"],
    "install": ["npm install", "yarn install"],
    "dev": [
      "npm start",
      "npm run dev",
      "yarn start",
      "yarn run start-chrome",
      "yarn run start-ff",
      "npm run watch",
      "node scripts/start.js",
      "webpack --mode development --watch"
    ],
    "test": ["npm test", "yarn test", "npm run test"],
    "build": [
      "npm run build",
      "yarn build",
      "yarn run build-chrome",
      "yarn run build-ff",
      "node scripts/build.js",
      "webpack --mode production"
    ],
    "lint": [
      "npm run lint",
      "eslint src/ --ext .ts,.tsx",
      "eslint .",
      "yarn lint"
    ],
    "format": [
      "npm run format",
      "prettier --write src/",
      "prettier --write .",
      "yarn format"
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2 via DeploySentinel Webapp",
      "OAuth2 via Chrome Extension permissions"
    ],
    "authorization_rules": [
      "Recording restricted to authorized tab and frame",
      "Injected scripts only after state validation",
      "Message origin validation",
      "Restricted permissions in extension",
      "Access control based on active tab and recording state"
    ],
    "sensitive_data": [
      "Recording data stored locally, no explicit encryption",
      "Test URLs",
      "Recording codes",
      "User recording data handled with care",
      "Password inputs are masked in display",
      "Password fields must not be recorded",
      "Generated test scripts, tab URLs",
      "Client ID generated anonymously, no personal data",
      "isPassword flag for sensitive data handling",
      "secrets.*.js for sensitive files",
      "Local .env files"
    ],
    "security_headers": [
      "Content-Security-Policy for messaging",
      "Recommended use of rel=\"noopener noreferrer\" for external links",
      "Default Chrome Extension headers",
      "Access-Control-Allow-Origin: *"
    ],
    "encryption_requirements": [
      "No encryption implemented for local storage",
      "TLS for web communication",
      "Secure communication via Chrome internal messaging"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Recording updates and script injection must occur in milliseconds to avoid UX impact",
      "Messages processed in < 100ms",
      "Instant component rendering",
      "Async operations must be fast for smooth UX",
      "UI updates with throttling for mouse events (100ms)",
      "Real-time event processing with debounce for resize",
      "Button interaction must be instant (<100ms)",
      "UI interaction should be responsive, ideally < 100ms",
      "Response in milliseconds for simple selectors",
      "Configurable wait limits",
      "Low latency for selector generation",
      "Low latency for hot reload and incremental rebuild",
      "Max wait time configurable up to 30000ms"
    ],
    "optimization_priorities": [
      "Developer experience",
      "Fast refresh",
      "Build speed",
      "Bundle size",
      "Low latency in event capture",
      "Efficient memory usage during recording",
      "Performance in event capture",
      "Minimize browser impact",
      "Minimize overhead in non-recorded tabs",
      "Low latency in communication",
      "Low complexity, focus on fast rendering",
      "Rendering speed and low overhead",
      "Low latency in UI rendering",
      "Response speed",
      "Low latency in state updates",
      "Minimize unnecessary reads and writes",
      "Low latency in local storage and script execution",
      "UI clarity and readability prioritized over extreme performance",
      "Fast rendering",
      "Low latency in code generation",
      "UI responsiveness",
      "Minimize impact of listeners",
      "Low computational complexity",
      "Minimize impact on main DOM",
      "Shadow DOM isolation for UI performance",
      "Minimize UI impact, avoid event duplication",
      "Low latency and minimal UI impact",
      "Fast feedback in development",
      "Minification with TerserPlugin, mangling disabled for debugging",
      "Minimize latency in timestamp validation and migration",
      "Temporal accuracy vs minimal overhead"
    ],
    "caching_strategy": [
      "Intermediate build cache",
      "Use of chrome.storage.local for lightweight persistence",
      "Browser cache for static resources",
      "Use of localStorage for temporary persistence",
      "React state as local cache for persisted data",
      "No persistent cache implemented",
      "Webpack caching for incremental builds",
      "Cache disabled for popup.html to ensure updates"
    ],
    "scalability_considerations": [
      "Task parallelization",
      "Support for long recordings without perceptible degradation",
      "Scalability limited to browser context and number of open tabs",
      "Lightweight, reusable component for multiple instances",
      "Efficient action list management to avoid excessive growth",
      "Componentization for easier extension and maintenance",
      "Avoid multiple instances to reduce memory usage",
      "Support for SPA applications and multiple contexts",
      "Extensible architecture for multiple frameworks and action types",
      "Extensibility for new action types",
      "Modular configuration to support multiple scripts and assets",
      "Efficient and immutable operations on large arrays"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standardized logs",
      "Errors thrown via throw with clear messages",
      "Basic promise rejection with Error objects",
      "Try-catch to avoid visible user failures",
      "Fallbacks for alternative selectors",
      "Abort build on critical error",
      "Hot Module Replacement for fast recovery in development",
      "Automatic correction of invalid/negative timestamps"
    ],
    "logging_strategy": [
      "console logs",
      "Local logs for debug during development",
      "Error reports via CI",
      "Minimal use of console.log, no structured logging system",
      "Console.error for errors, console.warn for warnings",
      "Verbose logging on build cleanup"
    ],
    "monitoring_tools": [
      "GitHub Actions for build and test monitoring",
      "Chrome Extension monitoring tools",
      "Custom analytics via onPageView and onNewRecording",
      "No integrated monitoring tool"
    ],
    "error_recovery": [
      "Automatic retry on build failures",
      "Recovery from recording failures with restart option",
      "Basic handling via state checks and early returns",
      "Fallback to default values if data is missing",
      "Listeners removed to avoid leaks",
      "CleanUp function to unmount and release resources",
      "State reinitialization and synchronization via storage events",
      "Retry for DOM element selection with attempt limit",
      "Fallback to null on error"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "react-app preset",
      "react-hot-loader",
      "Webpack",
      "Babel",
      "Node.js",
      "Chrome and Firefox extension APIs",
      "Test frameworks: Cypress, Playwright, Puppeteer",
      "@jest/types",
      "ts-jest",
      "react",
      "typescript",
      "jest",
      "playwright",
      "chrome.runtime",
      "chrome.storage",
      "chrome.contextMenus",
      "chrome.webNavigation",
      "deploysentinel.com API",
      "../Common/utils",
      "window.postMessage",
      "React 18",
      "ScriptType enum",
      "localStorageGet/Set",
      "chrome.storage API",
      "browser.* APIs for compatibility",
      "Playwright selectors",
      "type definitions",
      "react-syntax-highlighter",
      "genCode function",
      "Recorder",
      "Selector builders",
      "Chrome Storage API",
      "Highlighter.css",
      "ReactDOM",
      "FontAwesome",
      "Shadow DOM API",
      "lodash.debounce",
      "Chrome Extension Messaging API",
      "Chrome Tabs API",
      "Content Scripts",
      "getRandomInstallId",
      "Google Analytics API",
      "react-dom",
      "@fortawesome/fontawesome-svg-core",
      "DOM API",
      "@playwright/test",
      "puppeteer",
      "cypress",
      "finder module",
      "TypeScript",
      "css-loader (Webpack)",
      "webpack.config.js",
      "process.env (Node.js)",
      "webpack-dev-server",
      "path",
      "env",
      "clean-webpack-plugin",
      "copy-webpack-plugin",
      "html-webpack-plugin",
      "terser-webpack-plugin",
      "node_modules",
      "secrets.*.js",
      "ActionType enum",
      "TimingConfig interface"
    ],
    "deprecated_packages": ["None identified"],
    "version_constraints": [
      "Compatibility with recent Chrome and Firefox versions",
      "Jest 29.x and ts-jest compatibility",
      "React >=18.0.0",
      "TypeScript >=5.0",
      "Manifest Version 3",
      "Chrome Extensions API compatibility",
      "Compatibility with manifest v2 and v3",
      "TypeScript >=4.9",
      "target ES5",
      "module ESNext",
      "webpack >=5.0.0",
      "Compatibility with Webpack 5 and Node.js 16+",
      "FontAwesome 6.x",
      "Compatible with modern browsers supporting querySelectorAll"
    ],
    "internal_packages": [
      "../Common/utils",
      "DeploySentinel internal extension modules",
      "../types (ScriptType)",
      "./utils",
      "../builders",
      "../types",
      "../types/config",
      "../builders/selector",
      "./recorder",
      "./Highlighter",
      "./ActionList",
      "./CodeGen",
      "Highlighter.css",
      "./ControlBar",
      "../Common/styles.css",
      "../Common/Icon",
      "../Common/hooks",
      "../Common/endRecording",
      "../Common",
      "../Content",
      "./Popup",
      "./selector",
      "./finder",
      "config/webpack.config.js",
      "./env",
      "../webpack.config",
      "./utils/env",
      "secrets.{env}.js",
      "../../types",
      "../../types/config",
      "../index"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Build scripts lack modularization",
      "Limited support for file upload capture",
      "Dependency on Manifest V2, which is being deprecated",
      "Lack of robust error handling",
      "No structured logging",
      "Use of inline styles may hinder maintenance",
      "Async error handling can be improved",
      "Complex state management may grow with new features",
      "No memoization to avoid unnecessary re-renders",
      "Hardcoded config for localhost and fixed port",
      "Extensive config may hinder maintenance"
    ],
    "known_issues": [
      "Potential incompatibility of react-hot-loader with React 18+",
      "Limitations in hover event capture in some contexts",
      "Possible race conditions in async updates",
      "Strong dependency on Chrome API limits local testing",
      "Exclusive Chrome dependency",
      "Missing rel=\"noopener noreferrer\" in external links",
      "Strong dependency on chrome.runtime API",
      "Possible inconsistency in multi-tab sync without lock",
      "Possible race conditions in async storage operations",
      "Dependency on browser-specific APIs may limit portability",
      "Dependency on external styles may cause visual failures",
      "Possible incompatibility with unsupported browsers",
      "TypeScript typing ignored in shadowRoot",
      "Possible loss of events at high frequency",
      "Async sync may cause momentary inconsistencies",
      "Possible failure locating DOM elements in custom environments",
      "Browser API dependency may cause failures in unsupported environments",
      "no-cors mode limits failure detection in requests",
      "Possible performance impact from inline styles",
      "Performance may drop in documents with many similar elements",
      "Incomplete implementation for dragAndDrop in Cypress",
      "Selectors may not be unique in apps with unreliable IDs",
      "Differences between Chrome and Firefox APIs may cause incompatibilities",
      "Host check disabling may cause security risks",
      "Possible secrets leakage if not managed correctly",
      "System clock dependency may cause inconsistencies"
    ],
    "performance_bottlenecks": [
      "Slow build in large projects",
      "Possible browser performance impact due to continuous script injection",
      "Frequent navigation events may generate overhead",
      "Potential growth of stored action list",
      "Mouse events mitigated by throttling",
      "Input and wheel events may generate high load",
      "Polling for retrySelector may impact performance if maxRetries is high",
      "Multiple inline style injections may affect rendering",
      "Combinatorial selector generation and multiple querySelectorAll validations",
      "Potential overhead inserting waits between actions",
      "Selector generation in very large DOMs may be slow",
      "Minification disables mangling for debugging, impacting final size"
    ],
    "migration_status": [
      "Stable, no migrations in progress",
      "Partial migration to manifest v3 in progress",
      "Function migrateActionsTimestamp implemented and in use"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Preserve hot reload functionality",
      "Code style consistency",
      "Performance",
      "Maintainability",
      "Code clarity and readability",
      "Test coverage",
      "Strong typing maintenance",
      "Conformance to code standards",
      "Data handling security",
      "Clear separation of responsibilities",
      "Correct use of Chrome APIs",
      "Proper async handling",
      "Recording state maintenance",
      "Script injection security",
      "Origin validation security",
      "Clear module communication",
      "Visual consistency",
      "Rendering performance",
      "Component simplicity",
      "External link security",
      "Type consistency",
      "Error handling",
      "Cross-browser compatibility",
      "Correct use of hooks",
      "No side effects",
      "Correct use of HMR",
      "Component rendering clarity",
      "Robust selector generation",
      "TypeScript and React standards compliance",
      "Build error and warning checks",
      "Correct HMR and environment variable configuration",
      "Security in secrets usage",
      "Type validation and immutability",
      "Test coverage for timestamp cases",
      "Clarity in wait insertion",
      "Respect for timing configurations"
    ],
    "documentation_requirements": [
      "Document config changes",
      "Document build scripts",
      "Clear documentation for internal APIs and extension usage",
      "Clear documentation for configs and tests",
      "Clear JSDoc documentation",
      "Explanatory code comments",
      "Clear documentation for public functions and events",
      "Clear documentation for message APIs",
      "Clear documentation for reusable components",
      "JSDoc for components and functions",
      "Clear documentation for hooks and React components",
      "Simple and clear comments",
      "Document new action types and components",
      "Consistent use of JSDoc for public functions",
      "Document global types and modules",
      "Document alias and compatibility limitations",
      "Document classes and enums with JSDoc",
      "Clear documentation for environment setup",
      "Minimal inline documentation, focus on clear config"
    ],
    "communication_style": [
      "Clear and concise comments",
      "Objective and explanatory comments",
      "Use of PRs for discussion",
      "Technical English for specific terms",
      "Objective and technical comments, focus on behavior and impact",
      "Objective and technical comments, no excess verbosity",
      "Detailed PR descriptions",
      "Objective and clear comments in Portuguese",
      "Objective and technical comments, use of Portuguese for context"
    ],
    "decision_log": [
      "Opted for react-app preset for simplicity",
      "Enabled react-hot-loader for dev experience",
      "Chose TypeScript for type safety",
      "Multi-platform support (Chrome and Firefox)",
      "Adopted ts-jest for TypeScript tests",
      "Use of manifest v2 and v3 for compatibility",
      "Adopted React and TypeScript for UI",
      "Use of content scripts for granular capture",
      "Use of chrome.storage.local for persistence",
      "Clear separation between background and content scripts",
      "Use of messages for integration between webapp and extension",
      "SVG for icons for scalability",
      "Stateless functional component for simplicity",
      "Enum for script types",
      "Controlled component for better integration",
      "Playwright for script generation",
      "chrome.runtime.sendMessage for communication",
      "Hooks for encapsulating state and persistence logic",
      "Feature detection for Chrome and Firefox API compatibility",
      "Playwright selectors for accuracy",
      "Filtering supported actions to avoid errors",
      "Clear separation between code generation and presentation",
      "react-syntax-highlighter for UI",
      "Enums for action types and modes",
      "Throttling for event optimization",
      "Functional component for simplicity and performance",
      "Shadow DOM for isolation",
      "Global exposure for external control",
      "Debounce for resize",
      "Filtering irrelevant events for performance",
      "Shadow DOM for button UI encapsulation",
      "React hooks for shared state",
      "Clear separation between UI and recording logic",
      "Google Analytics for event collection",
      "Anonymous client ID",
      "HMR for faster development",
      "Penalties for selector ordering",
      "Fallbacks to ensure uniqueness",
      "Builder Pattern for script generation",
      "Support for multiple frameworks via subclasses",
      "Avoid use of id when invalid",
      "Prioritize testIdSelector for tests",
      "declaration.d.ts for CSS Modules support",
      "Alias for Chrome and Firefox compatibility",
      "Enums for valid values",
      "Clear separation between action types",
      "Strict mode to avoid production errors",
      "Removed chromeExtensionBoilerplate to avoid build conflicts",
      "HotModuleReplacementPlugin for faster development",
      "TerserPlugin without mangling for easier production debugging",
      "Separation between migration and timestamp validation for clarity and maintenance",
      "Waits to simulate real user behavior",
      "Wait limitation to avoid slow scripts"
    ]
  },
  "api_specifications": {
    "api_style": [
      "Chrome Extensions Messaging API",
      "Message Passing API via postMessage and chrome.runtime",
      "WebExtensions API",
      "HTTP POST via fetch for Google Analytics Measurement Protocol"
    ],
    "versioning_strategy": [
      "No explicit versioning",
      "Compatibility with manifest v2 and v3",
      "Manifest version via MANIFEST_VERSION environment variable"
    ],
    "response_formats": [
      "Simple JSON messages between scripts",
      "JSON objects with source, type, code, actions",
      "Promises and standard Chrome API callbacks",
      "String containing valid CSS selector"
    ],
    "rate_limiting": ["No explicit rate limiting implemented"]
  },
  "deployment_context": {
    "environments": [
      "development",
      "production",
      "staging",
      "Dev: http://localhost",
      "Prod: https://*.deploysentinel.com",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "localhost",
      "deploysentinel.com",
      "*.deploysentinel.com",
      "Dev, Staging, Production via Chrome Extension"
    ],
    "deployment_method": [
      "Static hosting",
      "CI/CD pipelines",
      "Docker",
      "Kubernetes",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Distribution via zip packages for Chrome and Firefox",
      "Chrome Extension packaging and publishing",
      "Webpack Dev Server with HMR",
      "Browser extension injection"
    ],
    "environment_variables": [
      "MANIFEST_VERSION",
      "NODE_OPTIONS",
      "BABEL_ENV",
      "NODE_ENV",
      "ASSET_PATH",
      "PORT",
      "npm_package_version",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local"
    ],
    "infrastructure_constraints": [
      "Browser extension API limitations",
      "Separate builds required for Chrome and Firefox",
      "Manifest V2 and V3 limitations",
      "Wide permissions required for operation",
      "Manifest V3 background script limitations",
      "Restricted permissions for security",
      "Chrome Extension API dependency",
      "HTTPS support required for external links",
      "Browser environment with chrome.storage support",
      "Shadow DOM support required",
      "Local storage limitations in Chrome Extension environment",
      "Node.js compatible environment for local server",
      "Compatibility with Chrome Extension Manifest v3"
    ]
  },
  "lastCommitHash": "1f2f763571973683e3850d4fc8c377df3331327f"
}
