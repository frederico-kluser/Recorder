{
  "project_metadata": {
    "name": "DeploySentinel Recorder â€“ Browser extension for automated UI test recording and script generation (Cypress, Playwright, Puppeteer)",
    "domain": [
      "Web/Mobile/Desktop",
      "Frontend Development",
      "Automated UI Testing",
      "Browser Extensions",
      "End-to-End Testing",
      "Test Automation",
      "Developer Tools",
      "UI Components",
      "Web Analytics",
      "Enterprise Data Management",
      "Order Management",
      "Inventory Control"
    ],
    "current_phase": [
      "Development",
      "Production",
      "Active Maintenance",
      "Stable (v0.7.1+)",
      "MVP",
      "Initial Development",
      "Local Testing",
      "Production Ready",
      "Integrated Automated Testing",
      "UI Stabilization"
    ],
    "critical_business_rules": [
      "Preserve fast refresh functionality",
      "Ensure JSX transpilation compatibility",
      "Build must generate consistent artifacts",
      "Do not break deploy pipeline",
      "Accurate and complete user event capture",
      "Correct and readable script generation",
      "Compatibility with multiple test frameworks",
      "Consistent test execution",
      "TypeScript support via ts-jest",
      "Node.js environment for testing",
      "Compatibility with Chrome Manifest V2 and V3",
      "Accurate and reliable Cypress script generation",
      "Maintain integrity of captured data",
      "Accurate recording of user interactions",
      "Generate scripts compatible with Cypress, Playwright, and Puppeteer",
      "Browser permission security",
      "Data privacy and security",
      "Recording must start and end correctly",
      "Navigation events must be captured only in the correct tab and frame",
      "Injected scripts must run only when recording is active",
      "Strict message origin validation",
      "Secure communication between webapp and extension",
      "Visual icon consistency",
      "React 18+ compatibility",
      "Correct SVG rendering",
      "Brand visual consistency",
      "Minimum logo load performance",
      "Script type must always be Cypress",
      "UI must maintain visual compatibility",
      "Correct recording persistence",
      "Reliable upload of recordings to webapp",
      "Safe local state cleanup",
      "Mandatory use of Cypress library for scripts",
      "Consistent user preference persistence",
      "Real-time recording state sync",
      "Recording state must be consistent",
      "Scripts must execute only in authorized frames",
      "Unique and persistent install identifier",
      "Only supported action types should be rendered",
      "Sensitive input values must be masked",
      "Accurate and precise code generation",
      "Maintain integrity of generated code",
      "Faithful code rendering for analysis",
      "Integrity of recorded actions",
      "Recording state synchronization",
      "Precision in selector and code generation",
      "Accurate highlighter positioning",
      "Consistent label rendering",
      "Do not interfere with user interaction",
      "Ensure only one active script instance",
      "Allow complete component cleanup to avoid leaks",
      "Do not log password field events",
      "Avoid event duplication",
      "Consistent local storage persistence",
      "Only one recording active at a time",
      "Do not mount multiple buttons in DOM",
      "Correct communication with Chrome extension",
      "Ensure recording integrity",
      "Correct history persistence",
      "Safe execution of injected scripts",
      "Ensure user anonymity",
      "Send event data without impacting UX",
      "Maintain integrity of sent data",
      "Render Popup correctly in designated container",
      "Maintain consistent and isolated styles",
      "Support hot reload without failures",
      "Generate unique and valid selectors",
      "Maintain acceptable performance",
      "Avoid ambiguous selectors",
      "Generate valid scripts for Cypress",
      "Preserve action order and state",
      "Include configurable waits for synchronization",
      "Selectors must be unique and stable",
      "Do not use invalid IDs",
      "Prioritize accessibility and test attributes",
      "Correct and typed import of static files to avoid build errors",
      "Ensure browser API calls are compatible between Chrome and Firefox",
      "Integrity of action data",
      "Validation of supported action types",
      "Accurate capture of temporal events",
      "Strict typing to avoid runtime errors",
      "Maintain ES5 compatibility for legacy browsers",
      "Build must run in production mode",
      "Build errors must block deploy",
      "NODE_ENV must always be set",
      "PORT must be a valid number",
      "Hot Module Replacement must be enabled for dev mode",
      "Dev server must serve assets with CORS headers",
      "Manifest version consistency",
      "Environment variable integrity",
      "Asset path correctness",
      "Do not version dependency files",
      "Do not expose sensitive config files",
      "Keep repository clean and organized",
      "All actions must have valid, non-negative, and sequential timestamps",
      "Generated scripts must accurately reflect user actions",
      "Cypress commands must be valid and executable",
      "Accurate recording of user actions",
      "Correct Cypress code generation",
      "Browser context isolation",
      "Visual consistency",
      "Accessibility",
      "Responsiveness",
      "Recording data integrity",
      "Accurate Cypress code generation",
      "Correct visual feedback for user actions",
      "No deletion without explicit confirmation",
      "Data integrity during export",
      "Consistent state update after CRUD operations",
      "Maintain readability and usability across views",
      "Ensure vertical scroll for long content",
      "Empty recordings cannot be saved",
      "Recording IDs must be unique",
      "Hostname must be correctly extracted from URL",
      "History entry limit must not be exceeded without pruning",
      "Recording data integrity must be maintained",
      "Old data migration must preserve actions",
      "Maximum history entry limit",
      "Unique ID integrity",
      "Reliable recording persistence",
      "Mandatory stock validation before order confirmation",
      "Transactional integrity in status updates",
      "Strict data validation",
      "Transactional consistency",
      "Role-based access control",
      "Consistent dark mode color scheme",
      "Scrollbar usability and visibility"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript",
      "JavaScript ES2020+",
      "JSX",
      "Node.js",
      "CSS3"
    ],
    "frameworks": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest 29",
      "ts-jest",
      "WebExtensions API",
      "FontAwesome",
      "Lodash 4.x",
      "TanStack Table 8.x",
      "Express 4.18",
      "Mongoose 6.7",
      "NestJS 10.0",
      "TypeORM 0.3"
    ],
    "databases": [
      "chrome.storage.local",
      "LocalStorage",
      "MongoDB 6.0",
      "Redis 7.0",
      "PostgreSQL 15"
    ],
    "external_services": [
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "GitHub Actions",
      "Browser APIs (chrome.*)",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "https://*.deploysentinel.com",
      "DeploySentinel Webapp",
      "Google Analytics Measurement Protocol API",
      "FontAwesome CDN",
      "Google Fonts (Roboto)",
      "Stripe API",
      "SendGrid",
      "AWS S3",
      "Internal REST APIs",
      "OAuth2 Authentication Server"
    ],
    "package_manager": [
      "npm",
      "yarn"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Modular Build Configuration",
      "Event-driven Architecture",
      "Component-based UI with React",
      "Cross-browser Extension Pattern",
      "Extension Architecture (Background Script, Content Script, Browser Action)",
      "Service Worker Background Processing",
      "Pub-Sub",
      "Message Passing",
      "Presentational and Container Components",
      "Separation of Concerns",
      "State Management via React Hooks",
      "Singleton",
      "Shadow DOM Encapsulation",
      "Debounce",
      "Modular CSS",
      "Hot Module Replacement",
      "Builder Pattern",
      "Factory Method",
      "Defensive Programming",
      "Alias Pattern",
      "Discriminated Union Types",
      "Build Pipeline Script",
      "Configuration Module Pattern",
      "Middleware Pattern",
      "Plugin Pattern",
      "Functional Programming",
      "Fluent Interface",
      "Test Automation Pattern",
      "Page Object Pattern",
      "Atomic CSS",
      "Service Facade",
      "Repository Pattern",
      "Interface Segregation",
      "MVC",
      "Clean Architecture",
      "Dependency Injection",
      "CSS Theming",
      "Component-based Styling"
    ],
    "folder_structure": [
      "config/",
      "src/",
      "build/",
      "dist/",
      "assets/",
      "tests/",
      "node_modules/",
      "background/",
      "content_scripts/",
      "popup/",
      "utils/",
      "storage/",
      "components/",
      "styles/",
      "types/",
      "builders/",
      "services/",
      "store/",
      "controllers/",
      "models/",
      "repositories/",
      "entities/",
      "pages/",
      "Common/",
      "Content/",
      "Scripts/",
      "Coverage/",
      "Tmp/"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for React components, types, and classes",
      "kebab-case for files and folders",
      "UPPER_SNAKE_CASE for constants and enums",
      "snake_case for static files and IDs",
      "Descriptive names for scripts and files",
      "Prefix use for hooks",
      "Prefix set for state setters",
      "BEM-like for CSS classes",
      "Abbreviations for utility classes",
      "File extensions indicate language (.tsx, .ts, .jsx, .js, .css, .svg)",
      "Interfaces prefixed with I",
      "Test files named with .test.ts or in __tests__ folders"
    ],
    "module_boundaries": [
      "Separation between config and source code",
      "Plugins isolated from presets",
      "Clear separation between event capture, script generation, and extension UI",
      "Independent modules for Chrome and Firefox",
      "Isolated configuration for Jest",
      "Separation between build code, extension code, and test code",
      "Dependencies managed via package.json",
      "Separation between background scripts, content scripts, and UI (popup)",
      "Message-based communication between scripts",
      "Utils for generic functions",
      "Storage for persistent state",
      "Background script for flow and event control",
      "Separation between extension code and webapp code",
      "Isolated UI components (React) with no external dependencies",
      "Separation between visual components and static assets",
      "Relative import for local resources",
      "Separation between types and components",
      "No global state in isolated components",
      "Separation between storage handling, code generation, and Chrome API communication",
      "Separation between hooks, utilities, and types",
      "Unidirectional dependency from hooks to utils and types",
      "Separation between storage handling, script execution, and tab control",
      "Separation between types, builders, and components",
      "Unidirectional dependency from types to components",
      "Separation between UI (components) and business logic (builders)",
      "Shared types via types folder",
      "UI components isolated from code generation logic",
      "Hooks and utilities in Common",
      "Builders for selection and code logic",
      "Highlighter component isolated with explicit style import",
      "Separation between UI (ControlBar) and bootstrap script",
      "Shadow DOM isolation to avoid global pollution",
      "Separation between event capture, selector generation, and storage",
      "Separation between UI (TriggerButton) and recording logic (hooks, endRecording)",
      "Separation between UI, recording logic, and storage",
      "Hooks encapsulate state and logic",
      "Analytics module isolated, depends only on external utils",
      "Separation between components and styles",
      "Unidirectional dependency for Popup and styles",
      "Separation between utility functions, search logic, and optimization",
      "Separation between types, generation logic, and utilities",
      "Unidirectional dependency to avoid circular coupling",
      "Separation between types, utilities, and selection logic",
      "Unidirectional dependency to avoid coupling",
      "Separation between TypeScript code and static assets via declared modules",
      "Separation between compatibility modules and business logic",
      "Separation between types (enums, classes) and utility logic",
      "Separation between source code and build",
      "Node.js module resolution",
      "Separation between configuration (webpack.config.js) and execution (build script)",
      "Isolated configuration module, no external dependencies",
      "Separation between configuration (config) and execution (server)",
      "Unidirectional server dependency on config",
      "Separation between extension scripts and assets",
      "Use of aliases for secret modules",
      "Separation between source code and generated artifacts",
      "Separation between types and utility functions",
      "Unidirectional dependency from types to functions",
      "Separation between script building logic and tests",
      "Mocks used to isolate dependencies",
      "Separation between tests and extension code",
      "Explicit imports for Playwright and Jest",
      "Separation between visual components and CSS utilities",
      "Clear separation between UI components and types",
      "Feature modules encapsulate related components and logic",
      "UI components depend on types and services",
      "Services encapsulate data access",
      "No circular dependencies",
      "Separation between base styles and view-specific styles",
      "Separation between types, storage, and service logic",
      "Unidirectional service dependency on store and builders",
      "Separation between types, store, and actions",
      "Unidirectional store dependency on types and chrome API",
      "Separation between types, config, and backend",
      "Separation between controllers, services, and repositories",
      "Unidirectional dependencies",
      "Separation between domain, application, and infrastructure",
      "Separation between global styles (:root) and component-specific styles (.Popup)"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript/TypeScript Style Guide",
      "TypeScript Standard Style",
      "TypeScript ESLint Recommended",
      "CSS standard conventions"
    ],
    "linting_rules": [
      "ESLint with React and TypeScript plugins",
      "extends react-app",
      "globals chrome readonly",
      ".eslintrc.json with rules for ES2021, browser, node",
      "Rules to avoid any and enforce strong typing",
      "Prohibition of dead code",
      "Rules for indentation and spacing",
      "Prohibition of empty catch blocks",
      "skipLibCheck:true for external libs",
      "strict:true for strict checking"
    ],
    "formatting": [
      "Prettier with default settings",
      "singleQuote: true",
      "trailingComma: es5",
      "printWidth: 80",
      "arrowParens: always",
      "Lint-staged for auto-formatting on commit"
    ],
    "documentation_style": [
      "JSDoc for functions, classes, and components",
      "Inline comments in Portuguese for context",
      "JSDoc for public APIs and methods"
    ],
    "type_checking": [
      "Strict TypeScript mode enabled",
      "TypeScript with explicit typings for React and browser APIs",
      "Strict TypeScript with noImplicitAny and strictNullChecks"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29",
      "Cypress",
      "Playwright",
      "React Testing Library"
    ],
    "test_structure": [
      "__tests__ folders or *.test.ts files",
      "tests/unit/ for unit tests",
      "tests/e2e/ for end-to-end tests",
      "tests/integration/ for integration tests",
      "Mocks for APIs and DOM events"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "Coverage monitored via Jest --coverage",
      "Coverage focused on critical UI flows"
    ],
    "test_patterns": [
      "AAA (Arrange-Act-Assert)",
      "Given-When-Then for behavioral tests",
      "Snapshot testing for visual components",
      "Mocking of browser APIs",
      "Configurable waits for synchronization"
    ],
    "mocking_approach": [
      "jest.mock for modules and dependencies",
      "Mocks for browser APIs and user interactions",
      "Fixtures for test data",
      "Mocks for Chrome Extension APIs and async functions",
      "Jest spies for method calls"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits",
      "Conventional Commits suggested by Husky and lint-staged"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "CI checks",
      "Automated lint and test checks",
      "At least 2 reviewers required for critical changes"
    ],
    "ci_cd_pipeline": [
      "Lint",
      "Test",
      "Build",
      "Deploy",
      "Automated build, lint, test, and deploy via GitHub Actions",
      "Deploy to Chrome and Firefox"
    ]
  },
  "commands": {
    "setup": [
      "npm install",
      "yarn install",
      "yarn install && husky install",
      "npm install && cp .env.example .env && npm run build"
    ],
    "install": [
      "npm install",
      "yarn install"
    ],
    "dev": [
      "npm start",
      "npm run dev",
      "yarn start",
      "yarn run start-chrome",
      "yarn run start-ff",
      "webpack --mode development --watch"
    ],
    "test": [
      "npm test",
      "yarn test",
      "npm run test",
      "npx cypress open"
    ],
    "build": [
      "npm run build",
      "yarn build",
      "yarn run build-chrome",
      "yarn run build-ff",
      "node scripts/build.js",
      "webpack --mode production"
    ],
    "lint": [
      "npm run lint",
      "yarn lint",
      "eslint src/ --ext .ts,.tsx",
      "eslint ."
    ],
    "format": [
      "npm run format",
      "yarn format",
      "prettier --write src/",
      "prettier --write ."
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2 via DeploySentinel Webapp",
      "OAuth2 for external communication",
      "JWT with refresh tokens"
    ],
    "authorization_rules": [
      "Restricted permissions via manifest for specific domains and APIs",
      "TabId and frameId validation for actions",
      "Strict message origin validation",
      "Role-based access control (RBAC) with granular permissions",
      "Explicit confirmation for deletion of recordings"
    ],
    "sensitive_data": [
      "User interaction data must be handled confidentially",
      "User interaction data processed locally, no unauthorized external transmission",
      "URLs and navigation data stored locally, no explicit encryption",
      "Password inputs are masked with asterisks",
      "No password fields should be recorded",
      "Client ID generated anonymously, no personal data",
      "Sensitive data in secrets.*.js and .env files",
      "User data temporarily stored in /tmp",
      "Generated code and recording data must be protected from exposure"
    ],
    "security_headers": [
      "Content Security Policy configured via manifest",
      "Default Chrome Extension headers",
      "X-Frame-Options",
      "Strict-Transport-Security"
    ],
    "encryption_requirements": [
      "Default Chrome encryption for local storage",
      "TLS for web communication",
      "AES-256 for sensitive data",
      "No explicit encryption for local storage"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Real-time recording with no perceptible navigation impact",
      "Messages processed in <100ms",
      "Instant component rendering",
      "Recording operations must complete in under 1 second",
      "Async operations must not block UI",
      "UI updates in real time with throttling for mousemove (100ms)",
      "Batch operations <2s",
      "API responses <200ms on average"
    ],
    "optimization_priorities": [
      "Developer experience",
      "Fast refresh",
      "Build speed",
      "Bundle size",
      "Low latency in event capture",
      "Efficient memory usage during recording",
      "Optimized build for size and compatibility",
      "Debounce and throttle for event capture performance",
      "Low CPU and memory impact in browser",
      "Minimize bundle size",
      "Real-time sync and consistency prioritized",
      "Rendering performance for large action lists",
      "Minimize DOM impact",
      "Shadow DOM isolation for UI performance",
      "Efficient style loading",
      "Balance between code readability and test execution performance",
      "Selector precision and stability",
      "Build time efficiency",
      "Minimal runtime overhead",
      "Compatibility with legacy browsers"
    ],
    "caching_strategy": [
      "Intermediate build cache",
      "chrome.storage.local for efficient persistence",
      "LocalStorage for temporary cache",
      "Browser cache for static assets",
      "No persistent cache implemented",
      "Webpack caching for incremental builds",
      "Cache disabled for popup.html to ensure updates",
      "Redis cache for frequently accessed data with 5 min TTL"
    ],
    "scalability_considerations": [
      "Task parallelization",
      "Support for long recordings without perceptible degradation",
      "Support for multiple tabs and concurrent sessions",
      "Component designed for dynamic and large action arrays",
      "Efficient management of large action lists",
      "Support for SPA applications and multiple contexts",
      "Hot reload for scalable development",
      "Efficient operations on large arrays (immutability)",
      "Test isolation for parallel execution",
      "Efficient management of large lists",
      "Entry limit to prevent uncontrolled growth",
      "Horizontal scalability via containers"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standardized logs",
      "Structured logs for background and content script errors",
      "Errors thrown via throw new Error with clear messages",
      "Console logs with clear messages",
      "JSON format with code, message, and optional details"
    ],
    "logging_strategy": [
      "Console logs",
      "Local logs for development debugging",
      "Console.error for critical errors",
      "Structured logs with info, warn, error levels using Winston"
    ],
    "monitoring_tools": [
      "GitHub Actions for build and test monitoring",
      "Integration with external tools via deploysentinel.com",
      "Chrome Extension monitoring tools",
      "New Relic",
      "Sentry for production errors"
    ],
    "error_recovery": [
      "Automatic retry on build failures",
      "Recording failure recovery with restart option",
      "Automatic service worker restart and script re-injection",
      "Promise rejection for external handling",
      "UI-based recording restart",
      "CleanUp function to unmount and release resources",
      "Retry for DOM element selection with attempt limit",
      "Fallbacks for missing tabs or frames",
      "Try/catch to avoid visible user failures",
      "Hot Module Replacement for fast error recovery in development",
      "Automatic correction of invalid/negative timestamps",
      "Promise rejection on timeout for controlled failure",
      "State reset after timeout for visual feedback",
      "Fallback to empty state",
      "Controlled fallbacks for critical async operations"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Node.js",
      "Chrome and Firefox extension APIs",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest",
      "ts-jest",
      "Husky",
      "lint-staged",
      "chrome.* APIs",
      "chrome.runtime API",
      "chrome.storage API",
      "localStorage utilities",
      "RecordingService",
      "genCypressCode",
      "react-syntax-highlighter",
      "TanStack Table",
      "FontAwesome",
      "Shadow DOM API",
      "lodash.debounce",
      "Express",
      "Mongoose",
      "NestJS",
      "TypeORM",
      "PostgreSQL driver"
    ],
    "deprecated_packages": [
      "Manifest v2 APIs (migration in progress)"
    ],
    "version_constraints": [
      "Chrome and Firefox latest versions compatibility",
      "Jest 29.x and ts-jest compatibility",
      "Dependencies locked to specific versions for stability",
      "Manifest V3 required for compatibility",
      "React >=18.0.0",
      "TypeScript >=5.0",
      "Cypress >=12",
      "TanStack Table 8.x",
      "Webpack >=5.0.0",
      "NestJS 10.x"
    ],
    "internal_packages": [
      "Internal modules for recording and script generation",
      "Common/utils",
      "storage/recording-store",
      "types",
      "builders",
      "components",
      "Content",
      "services",
      "store",
      "controllers",
      "models",
      "repositories",
      "entities"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Build scripts lack modularization",
      "Limited support for file upload capture",
      "Manifest V3 migration required for future compatibility",
      "Improve support for multiple frameworks simultaneously",
      "Use of any in typing",
      "Lack of robust error handling",
      "Complex state management could be refactored to use context API or external state management",
      "No memoization to avoid unnecessary re-renders",
      "Improve error handling and fallback for browsers without exportFunction",
      "Optimize local storage usage",
      "Fix multiple mounting bug in Firefox",
      "Maintain compatibility with multiple browser versions",
      "Inline injected styles may impact performance",
      "Limited optimization for very complex selectors",
      "Incomplete drag-and-drop implementation",
      "Hardcoded config for localhost and fixed port",
      "Extensive config may hinder maintainability",
      "Use of setInterval for polling could be replaced by more efficient events",
      "No virtualization for large tables",
      "Basic error handling",
      "No mobile responsiveness",
      "Optimize search for large recording volumes",
      "Refactor legacy modules to full TypeScript",
      "Refactor legacy modules to Clean Architecture"
    ],
    "known_issues": [
      "Potential incompatibility of react-hot-loader with React 18+",
      "Limitations in hover event capture in some contexts",
      "Limitations in event capture within iframes",
      "Possible race condition in state updates",
      "Context menus may become desynchronized",
      "Exclusive Chrome dependency",
      "Possible update loop if onChange is unstable",
      "Possible silent failure in tab communication",
      "No explicit error handling in async calls",
      "Possible silent failure in script execution without catch",
      "Mouse events may be affected by external overlays",
      "Dependency on external styles may cause visual failures",
      "Possible incompatibility with unsupported browsers",
      "TypeScript typing ignored in shadowRoot",
      "Possible event loss at high frequency",
      "Async sync may cause momentary inconsistencies",
      "Possible failure locating DOM elements in custom environments",
      "Possible failure detecting AUT frame in some tabs",
      "No-cors mode limits failure detection in requests",
      "Environment dependency for hot module replacement",
      "Performance may drop in documents with many similar elements",
      "Limitation in code generation for complex actions like drag and drop",
      "API differences between Chrome and Firefox may cause incompatibilities",
      "Host check disablement may cause security risks",
      "Possible secrets leak if not managed correctly",
      "System clock dependency may cause inconsistencies",
      "Timeouts may cause intermittent failures in slow environments",
      "Timeout for state reset may cause issues if component unmounts",
      "Possible slowness with large data volumes",
      "Possible ID collision under high concurrency",
      "URL validation may be insufficient",
      "Possible data loss if error during flushPendingSaves",
      "Intermittent timeout issues in external calls",
      "Intermittency in external calls under high load",
      "Scrollbar customization limited to WebKit"
    ],
    "performance_bottlenecks": [
      "Slow build in large projects",
      "High CPU usage in long recordings",
      "Latency in browser API communication",
      "Throttling applied to avoid excessive re-renders",
      "Input and wheel events may generate high load",
      "Polling for retrySelector may impact performance if maxRetries is high",
      "Rendering large action lists may impact UI",
      "Inline injection of multiple styles may increase render time",
      "Combinatorial selector generation and multiple querySelectorAll validations",
      "Use of innerText may impact performance on large elements",
      "Active wait for service workers may impact total test time",
      "Rendering long lists without pagination",
      "Client-side filtering and rendering without optimizations",
      "In-memory listing and filtering without pagination",
      "Blocking synchronous operations avoided, but potential slowness if history grows large",
      "Complex SQL queries without adequate indexes"
    ],
    "migration_status": [
      "Simultaneous support for Manifest V2 and V3 indicates migration in progress",
      "Complete for Manifest V3, no pending migrations",
      "Hybrid support for manifest v2 and v3 implemented",
      "Old data migration to new store implemented",
      "migrateActionsTimestamp function implemented and in use",
      "Last recording migration implemented and on-demand",
      "Migration to TypeScript 5.0 completed"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Preserve hot reload functionality",
      "Code style consistency",
      "Performance",
      "Maintainability",
      "Clarity and readability",
      "Test coverage",
      "Strong typing",
      "Conformance to code standards",
      "Security in permission usage",
      "Clear separation of responsibilities",
      "Quality of generated scripts",
      "State consistency",
      "Tab and frame ID validation",
      "UI and state sync",
      "Origin validation security",
      "Clear module communication",
      "Visual consistency",
      "Rendering performance",
      "Component simplicity",
      "Accessibility",
      "Consistent props",
      "Avoid unnecessary side effects",
      "Clear async flow",
      "Error handling",
      "Responsibility separation",
      "Correct persistence",
      "API compatibility",
      "Type checking, test coverage, clear conditional rendering",
      "Correct use of hooks",
      "Correct use of cleanUp",
      "No multiple instances",
      "Consistent hooks, state handling, and Chrome messages",
      "Silent error handling",
      "Correct use of async/await",
      "Anonymity maintenance",
      "Consistent styles",
      "Correct HMR usage",
      "Component modularity",
      "Clear search logic",
      "Clarity and readability of generated code",
      "Type coverage",
      "Correct use of waits",
      "Selector prioritization clarity",
      "Correct type usage",
      "Consistent typing",
      "Correct asset import",
      "Cross-browser compatibility",
      "Clarity and code simplicity",
      "Consistent IDs",
      "Correct async error handling",
      "Proper Singleton pattern usage",
      "Security, readability, and test coverage",
      "Legibility"
    ],
    "documentation_requirements": [
      "Document config changes",
      "Document build scripts",
      "Clear documentation for internal APIs and extension usage",
      "Clear documentation for configs and tests",
      "Clear JSDoc for components and utilities",
      "Inline comments in Portuguese",
      "Clear documentation for message APIs",
      "Clear documentation for props and behavior",
      "JSDoc for components and functions",
      "Clear documentation for hooks and side effects",
      "Document global functions and Firefox integration",
      "Clear documentation for public APIs and critical modules",
      "Document alias and compatibility limitations",
      "Clear documentation for each action type and its properties",
      "Consistent JSDoc for public functions",
      "Clear documentation for environment setup",
      "Clear documentation for types and modules"
    ],
    "communication_style": [
      "Clear and concise comments",
      "Objective and explanatory comments",
      "Use of PRs for discussion",
      "Objective and technical comments, English for technical terms",
      "Clear and objective comments, Portuguese for context",
      "Detailed PR descriptions",
      "Small, focused PRs",
      "Use of PR templates",
      "Emojis in logs for readability"
    ],
    "decision_log": [
      "Opted for react-app preset for simplicity",
      "Enabled react-hot-loader for dev experience",
      "Chose TypeScript for type safety",
      "Multi-platform support (Chrome and Firefox)",
      "Adopted ts-jest for TypeScript tests",
      "Support multiple manifest versions for cross-browser compatibility",
      "Maintain Manifest V2 until full migration to V3",
      "Adopted Manifest V3 for security and performance",
      "Use local storage for shared state",
      "Clear separation between utilities and recording logic",
      "Use messages for webapp-extension integration",
      "SVG for scalable icons",
      "Functional components for UI",
      "Static asset import",
      "Fix ScriptType as Cypress for compatibility",
      "Centralized persistence via RecordingService",
      "Cypress as default library",
      "Adapter Pattern for API compatibility",
      "React functional components for performance and simplicity",
      "Separation between code generation and presentation",
      "react-syntax-highlighter for UI",
      "Throttle for mousemove event optimization",
      "Separation between action view and code",
      "Functional component for simplicity and performance",
      "Shadow DOM for isolation",
      "Global exposure for external control",
      "Debounce for resize",
      "Event filtering for performance",
      "Shadow DOM for ControlBar UI encapsulation",
      "React hooks for state",
      "Separation between UI and recording logic",
      "Google Analytics for event collection",
      "Anonymous client ID",
      "HMR for faster development",
      "Separation between global and specific styles",
      "Selector penalties for ordering",
      "Fallbacks to ensure uniqueness",
      "Cypress as default framework",
      "Builder Pattern for script generation",
      "Avoid invalid IDs for selectors",
      "Prioritize test and accessibility attributes",
      "Module declarations for static assets",
      "Alias for Chrome/Firefox compatibility",
      "Enums for constant values",
      "Strict mode to avoid production errors",
      "Remove chromeExtensionBoilerplate to avoid build conflicts",
      "HotModuleReplacementPlugin for faster development",
      "TerserPlugin without mangling for easier production debugging",
      "Separate migration and timestamp validation for clarity",
      "Builder Pattern for Cypress script generation",
      "Playwright for Chrome extension E2E tests",
      "React Functional Components with hooks for local state",
      "TanStack Table for flexibility and performance",
      "Fixed width for layout control in specific views",
      "Service Facade for storage abstraction",
      "Integrated Cypress code generation",
      "Singleton pattern for store",
      "Debounce for save optimization",
      "Repository pattern for data decoupling",
      "NestJS for standardization",
      "OAuth2 for authentication",
      "Adopt dark mode as default visual"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST for external communication",
      "Event-driven via Chrome extension messaging",
      "Message Passing API via postMessage and chrome.runtime",
      "WebExtensions API"
    ],
    "versioning_strategy": [
      "Semantic versioning for external APIs",
      "Manifest version via MANIFEST_VERSION environment variable",
      "URL-based versioning (/v1/, /v2/)",
      "Compatibility with manifest v2 and v3"
    ],
    "response_formats": [
      "JSON",
      "Simple JSON objects for messages and storage",
      "Promises and standard Chrome API callbacks",
      "application/json"
    ],
    "rate_limiting": [
      "Limits imposed by deploysentinel.com external service",
      "Internal debounce to limit recording frequency",
      "1000 requests per minute per user"
    ]
  },
  "deployment_context": {
    "environments": [
      "development",
      "staging",
      "production",
      "test environment",
      "Localhost (http://localhost/*)",
      "DeploySentinel (https://*.deploysentinel.com/*)",
      "Production (Chrome Web Store)",
      "Dev, Staging, Production via Chrome Extension"
    ],
    "deployment_method": [
      "CI/CD pipelines",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Static hosting",
      "Docker",
      "Kubernetes",
      "WebExtension packaging",
      "Manual sideload for local development"
    ],
    "environment_variables": [
      "MANIFEST_VERSION",
      "NODE_ENV",
      "PUBLIC_URL",
      "ASSET_PATH",
      "PORT",
      "CHROME_EXTENSION_ID",
      "API_KEYS",
      "DATABASE_URL",
      "REDIS_URL",
      "JWT_SECRET",
      "STRIPE_API_KEY",
      "AWS_S3_BUCKET"
    ],
    "infrastructure_constraints": [
      "Browser extension API limitations",
      "Separate builds required for Chrome and Firefox",
      "Manifest V3 and Chrome API limitations",
      "Chrome Extension environment limitations",
      "Shadow DOM support required",
      "chrome.storage.local storage limit (~5MB)",
      "TLS required",
      "Memory limit per container: 512MB",
      "Max 100 simultaneous DB connections"
    ]
  },
  "lastCommitHash": "b9560f20b2bee0d22c548c069e198cdad62fa175"
}
