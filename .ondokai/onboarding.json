{
  "project_metadata": {
    "name": "DeploySentinel Recorder â€“ Browser extension for automated UI test recording and script generation (Cypress, Playwright, Puppeteer)",
    "domain": [
      "Web/Mobile/Desktop Development",
      "Frontend Development",
      "Automated UI Testing",
      "Browser Extensions",
      "End-to-End Testing",
      "Test Automation",
      "Developer Tools",
      "UI Components",
      "Web Analytics",
      "Enterprise Data Management",
      "Order and Inventory Management"
    ],
    "current_phase": [
      "Development",
      "Production",
      "Active Maintenance",
      "Stable (v0.7.1+)",
      "MVP",
      "Local Testing",
      "Production Ready",
      "UI Stabilization",
      "Integrated Automated Testing"
    ],
    "critical_business_rules": [
      "Preserve fast refresh functionality",
      "Ensure JSX transpilation compatibility",
      "Build must generate consistent artifacts",
      "Do not break deploy pipeline",
      "Accurate and complete user event capture",
      "Correct and readable script generation",
      "Compatibility with multiple test frameworks",
      "Consistent test execution",
      "TypeScript support via ts-jest",
      "Node.js environment for testing",
      "Support for Chrome Manifest V2 and V3",
      "Accurate and reliable Cypress script generation",
      "Maintain integrity of captured data",
      "Accurate recording of user interactions",
      "Generate scripts compatible with Cypress, Playwright, and Puppeteer",
      "Browser permission security",
      "Data privacy and security",
      "Recording must start and end correctly",
      "Navigation events must be captured only in the correct tab and frame",
      "Injected scripts must run only when recording is active",
      "Strict message origin validation",
      "Secure communication between webapp and extension",
      "Visual icon consistency",
      "React 18+ compatibility",
      "Correct SVG rendering",
      "Brand visual consistency",
      "Minimum logo load performance",
      "Script type must always be Cypress",
      "UI must maintain visual compatibility",
      "Correct recording persistence",
      "Reliable upload of recordings to webapp",
      "Safe local state cleanup",
      "Mandatory use of Cypress library for scripts",
      "Consistent user preference persistence",
      "Real-time recording state synchronization",
      "Recording state must be consistent",
      "Scripts must execute only in authorized frames",
      "Unique and persistent installation identifier",
      "Only supported action types should be rendered",
      "Sensitive input values must be masked",
      "Accurate and precise code generation",
      "Maintain integrity of generated code",
      "Faithful code rendering for analysis",
      "Integrity of recorded actions",
      "Recording state synchronization",
      "Precision in selector and code generation",
      "Accurate highlighter positioning",
      "Consistent label rendering",
      "Do not interfere with user interaction",
      "Ensure only one active script instance",
      "Allow complete component cleanup to prevent leaks",
      "Do not log password field events",
      "Avoid event duplication",
      "Consistent local storage persistence",
      "Ensure only one active recording at a time",
      "Do not mount multiple buttons in the DOM",
      "Correct communication with Chrome extension",
      "Ensure recording integrity",
      "Correct history persistence",
      "Safe execution of injected scripts",
      "Ensure user anonymity",
      "Send event data without impacting UX",
      "Maintain integrity of sent data",
      "Render Popup correctly in designated container",
      "Apply global styles without conflict",
      "Generate unique and valid selectors",
      "Maintain acceptable performance",
      "Avoid ambiguous selectors",
      "Generate valid Cypress scripts",
      "Preserve action order and state",
      "Include configurable waits for synchronization",
      "Selectors must be unique and stable",
      "Do not use invalid IDs",
      "Prioritize accessibility and test attributes",
      "Correct and typed import of static files to avoid build errors",
      "Ensure browser API calls are compatible between Chrome and Firefox",
      "Integrity of action data",
      "Supported action types validation",
      "Accurate capture of temporal events",
      "Strict typing to avoid runtime errors",
      "Maintain ES5 compatibility for legacy browsers",
      "Build must run in production mode",
      "Build errors must be reported and block deploy",
      "NODE_ENV must always be set",
      "PORT must be a valid number",
      "Hot Module Replacement must be enabled for dev mode",
      "Dev server must serve assets with CORS headers",
      "Manifest version consistency",
      "Environment variable integrity",
      "Asset path correctness",
      "Do not version dependency files",
      "Do not expose sensitive config files",
      "Keep repository clean and organized",
      "All actions must have valid, non-negative, and sequential timestamps",
      "Generated scripts must accurately reflect user actions",
      "Cypress commands must be valid and executable",
      "Accurate user action recording",
      "Correct Cypress code generation",
      "Browser context isolation",
      "Visual consistency",
      "Accessibility",
      "Responsiveness",
      "Recording data integrity",
      "Accurate Cypress code generation",
      "Correct visual feedback for user actions",
      "No deletion without explicit confirmation",
      "Data integrity during export",
      "Consistent state update after CRUD operations",
      "Maintain readability and usability across views",
      "Ensure vertical scroll for long content",
      "Empty recordings cannot be saved",
      "Recording IDs must be unique",
      "Hostname must be correctly extracted from URL",
      "History entry limit must not be exceeded without pruning",
      "Recording data integrity must be maintained",
      "Old data migration must preserve actions",
      "Maximum history entry limit",
      "Unique ID integrity",
      "Reliable recording persistence",
      "Mandatory stock validation before order confirmation",
      "Transactional integrity in status updates",
      "Strict data validation",
      "Transactional consistency",
      "Role-based access control"
    ]
  },
  "technical_stack": {
    "primary_language": [
      "TypeScript",
      "JavaScript (ES6+)",
      "Node.js",
      "JSX",
      "CSS3"
    ],
    "frameworks": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest 29",
      "ts-jest",
      "WebExtensions API",
      "FontAwesome",
      "Lodash 4",
      "TanStack Table 8",
      "Express 4.18",
      "Mongoose 6.7",
      "NestJS 10",
      "TypeORM 0.3"
    ],
    "databases": [
      "chrome.storage.local",
      "LocalStorage",
      "MongoDB 6.0",
      "Redis 7.0",
      "PostgreSQL 15"
    ],
    "external_services": [
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "GitHub Actions",
      "Browser APIs (chrome.*)",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "DeploySentinel Webapp",
      "Google Analytics Measurement Protocol",
      "FontAwesome CDN",
      "Google Fonts (Roboto)",
      "Stripe API",
      "SendGrid",
      "AWS S3",
      "Internal REST APIs",
      "OAuth2 Authentication Server"
    ],
    "package_manager": [
      "npm",
      "yarn"
    ]
  },
  "architecture_patterns": {
    "design_pattern": [
      "Modular Architecture",
      "Event-driven Architecture",
      "Observer Pattern",
      "Component-based UI (React)",
      "Service Layer",
      "Hooks Pattern",
      "Adapter Pattern",
      "Singleton",
      "Builder Pattern",
      "Factory Method",
      "Defensive Programming",
      "Repository Pattern",
      "Separation of Concerns",
      "Functional Programming",
      "Clean Architecture",
      "Dependency Injection",
      "Strategy Pattern",
      "Page Object Pattern",
      "Atomic CSS",
      "Modular CSS"
    ],
    "folder_structure": [
      "src/ (source code)",
      "config/ (centralized configuration)",
      "build/ (compiled artifacts)",
      "dist/ (final build output)",
      "assets/ (static assets: images, icons, SVGs)",
      "tests/ (unit and E2E tests)",
      "background/ (background scripts/service workers)",
      "content_scripts/ (injected scripts)",
      "popup/ (extension UI)",
      "components/ (React UI components)",
      "hooks/ (custom React hooks)",
      "utils/ (utility functions)",
      "types/ (TypeScript type definitions and enums)",
      "builders/ (code and selector generators)",
      "storage/ (state persistence)",
      "styles/ (CSS files)",
      "pages/ (feature-specific components)",
      "controllers/ (control logic)",
      "services/ (business logic)",
      "repositories/ (data access)",
      "entities/ (data models)"
    ],
    "naming_conventions": [
      "camelCase for variables and functions",
      "PascalCase for React components, classes, types, and enums",
      "kebab-case for files, folders, and CSS classes",
      "UPPER_SNAKE_CASE for constants and environment variables",
      "snake_case for configuration files and IDs",
      "Descriptive names for scripts and files",
      "Prefix 'use' for hooks",
      "Prefix 'set' for state setters",
      "BEM-like for CSS components",
      "Interfaces prefixed with 'I'",
      "File extensions indicate language (.tsx, .ts, .js, .css)"
    ],
    "module_boundaries": [
      "Clear separation between config and source code",
      "Isolated plugins and presets",
      "Separation between background scripts, content scripts, and UI (popup)",
      "Message-based communication between scripts",
      "Independent modules for Chrome and Firefox",
      "Utils for generic functions",
      "Storage for persistent state",
      "Component isolation (no global state)",
      "Separation between types, builders, and components",
      "Unidirectional dependencies (types â†’ components)",
      "Hooks and utilities in Common",
      "Builders for selection and code logic",
      "Shadow DOM isolation for UI components",
      "Separation between UI and business logic",
      "Explicit imports for assets and styles",
      "Mocks for dependency isolation in tests",
      "No circular dependencies",
      "Feature modules encapsulate related logic",
      "Services encapsulate data access",
      "Controllers handle request entry",
      "Repositories for data access",
      "Entities for data models"
    ]
  },
  "code_standards": {
    "style_guide": [
      "Airbnb JavaScript/TypeScript Style Guide",
      "TypeScript ESLint Recommended",
      "CSS standard with explanatory comments"
    ],
    "linting_rules": [
      "ESLint with React and TypeScript plugins",
      "Strict typing (no any, prefer const, no unused vars)",
      "Standard Airbnb rules",
      "Rules for indentation, spacing, and import order",
      "Prohibition of dead code and empty catch blocks"
    ],
    "formatting": [
      "Prettier (default settings for TypeScript/React)",
      "singleQuote: true",
      "trailingComma: es5",
      "printWidth: 80",
      "arrowParens: always",
      "Lint-staged for pre-commit formatting"
    ],
    "documentation_style": [
      "JSDoc for public functions, classes, and components",
      "Inline comments (Portuguese for context)",
      "JSDoc for type declarations"
    ],
    "type_checking": [
      "Strict TypeScript mode (noImplicitAny, strictNullChecks)",
      "Explicit typings for events and actions",
      "PropTypes for legacy JS (not present in current code)"
    ]
  },
  "testing_strategy": {
    "test_framework": [
      "Jest 29",
      "Cypress",
      "Playwright",
      "React Testing Library"
    ],
    "test_structure": [
      "__tests__ folders or *.test.ts(x) files adjacent to modules",
      "tests/unit/ for unit tests",
      "tests/e2e/ for end-to-end tests",
      "tests/integration/ for integration tests",
      "Mocks and fixtures for isolation"
    ],
    "coverage_requirements": [
      "Minimum 80% coverage",
      "Coverage monitored via Jest --coverage",
      "Focus on critical UI and logic flows"
    ],
    "test_patterns": [
      "AAA (Arrange-Act-Assert)",
      "Given-When-Then for behavioral tests",
      "Snapshot testing for UI components",
      "Mocking of browser APIs and hooks",
      "Configurable waits for synchronization"
    ],
    "mocking_approach": [
      "jest.mock for modules and browser APIs",
      "Fixtures for test data",
      "Mocks for Chrome/Firefox APIs and user interactions",
      "Mocking of static assets and external dependencies"
    ]
  },
  "development_workflow": {
    "branch_strategy": [
      "GitHub Flow",
      "git Flow"
    ],
    "commit_conventions": [
      "Conventional Commits",
      "Husky and lint-staged for commit checks"
    ],
    "pr_requirements": [
      "Code review mandatory",
      "Passing CI checks",
      "Automated lint and test checks",
      "At least 2 reviewers for critical changes"
    ],
    "ci_cd_pipeline": [
      "Lint",
      "Test",
      "Build",
      "Deploy",
      "Automated via GitHub Actions",
      "Deploy to Chrome Web Store and Firefox Add-ons Marketplace"
    ]
  },
  "commands": {
    "setup": [
      "npm install",
      "yarn install",
      "yarn install && husky install",
      "npm install && cp .env.example .env && npm run build"
    ],
    "install": [
      "npm install",
      "yarn install"
    ],
    "dev": [
      "npm start",
      "npm run dev",
      "yarn start",
      "yarn run start-chrome",
      "yarn run start-ff",
      "webpack --mode development --watch"
    ],
    "test": [
      "npm test",
      "yarn test",
      "npm run test",
      "npx cypress open"
    ],
    "build": [
      "npm run build",
      "yarn build",
      "yarn run build-chrome",
      "yarn run build-ff",
      "node scripts/build.js",
      "webpack --mode production"
    ],
    "lint": [
      "npm run lint",
      "yarn lint",
      "eslint src/ --ext .ts,.tsx",
      "eslint ."
    ],
    "format": [
      "npm run format",
      "yarn format",
      "prettier --write src/",
      "prettier --write ."
    ]
  },
  "security_constraints": {
    "authentication_method": [
      "OAuth2 via DeploySentinel Webapp",
      "OAuth2 via Chrome Extension permissions",
      "JWT with refresh tokens"
    ],
    "authorization_rules": [
      "Restricted permissions via manifest for specific domains and APIs",
      "Tab and frame validation for actions",
      "Strict message origin validation",
      "Role-based access control (RBAC) with granular permissions",
      "Explicit confirmation for deletion"
    ],
    "sensitive_data": [
      "User interaction data must be handled confidentially",
      "URLs and navigation data stored locally (no explicit encryption)",
      "Unique identifiers stored locally, no personal data",
      "Password inputs are masked",
      "No password fields recorded",
      "Client ID generated anonymously",
      "Sensitive data in secrets.{env}.js and .env files",
      "User data temporarily stored in /tmp",
      "Tokens securely stored",
      "Personal data encrypted at rest"
    ],
    "security_headers": [
      "Content Security Policy configured via manifest",
      "Standard Chrome Extension headers",
      "X-Frame-Options",
      "Strict-Transport-Security"
    ],
    "encryption_requirements": [
      "Default Chrome encryption for local storage",
      "TLS 1.2+ for web communication",
      "AES-256 for sensitive data",
      "No explicit encryption for local-only data"
    ]
  },
  "performance_requirements": {
    "response_time_limits": [
      "Real-time recording with no perceptible navigation impact",
      "Messages processed in <100ms",
      "Instant component rendering",
      "Recording operations must complete in <1s",
      "UI updates in real time with throttling (100ms for mousemove)",
      "Batch operations <2s",
      "API responses <300ms"
    ],
    "optimization_priorities": [
      "Developer experience",
      "Fast refresh",
      "Build speed",
      "Bundle size",
      "Low latency in event capture and navigation",
      "Efficient memory usage during recording",
      "Optimized build for size and compatibility",
      "Debounce/throttle for event capture performance",
      "Minimal CPU/memory impact in browser",
      "Real-time consistency and synchronization",
      "Rendering performance for large action lists",
      "Minimize re-renders",
      "Minimize DOM impact",
      "Shadow DOM isolation for UI performance",
      "Efficient code generation and UI updates"
    ],
    "caching_strategy": [
      "Intermediate build cache",
      "chrome.storage.local for efficient persistence",
      "LocalStorage for temporary cache",
      "Browser cache for static assets",
      "Webpack caching for incremental builds",
      "Redis cache for frequently accessed data (TTL 5 min)"
    ],
    "scalability_considerations": [
      "Task parallelization",
      "Support for long recordings without degradation",
      "Multiple tabs and sessions support",
      "Efficient management of large action lists",
      "SPA and multi-context support",
      "Feature modules for extensibility",
      "Limit maximum history entries to prevent uncontrolled growth",
      "Horizontal scalability via containers"
    ]
  },
  "error_handling": {
    "error_format": [
      "Standardized logs",
      "Structured logs for background/content scripts",
      "Errors thrown with clear messages",
      "JSON format with code, message, and optional details",
      "UI alerts for user-facing errors"
    ],
    "logging_strategy": [
      "Console logs for debugging",
      "Structured logs with levels (info, warn, error)",
      "Error reports via CI",
      "Console.error for critical errors",
      "Winston for production logging"
    ],
    "monitoring_tools": [
      "GitHub Actions for build/test monitoring",
      "DeploySentinel external integration",
      "Chrome Extension monitoring tools",
      "New Relic",
      "Sentry for production error tracking"
    ],
    "error_recovery": [
      "Automatic retry on build failures",
      "Recording recovery with restart option",
      "Service worker auto-restart and script re-injection",
      "Try/catch to prevent user-facing failures",
      "Fallbacks for selector generation",
      "State reset after timeout for visual feedback",
      "Retries for temporary failures",
      "Fallback to empty state on critical errors"
    ]
  },
  "dependencies_context": {
    "critical_dependencies": [
      "React 18",
      "Webpack 5",
      "Babel 7",
      "Node.js",
      "Chrome/Firefox Extension APIs",
      "Cypress",
      "Playwright",
      "Puppeteer",
      "Jest",
      "ts-jest",
      "Husky",
      "lint-staged",
      "chrome.storage API",
      "RecordingService",
      "genCypressCode",
      "react-syntax-highlighter",
      "TanStack Table",
      "FontAwesome",
      "lodash.debounce",
      "Express",
      "Mongoose",
      "NestJS",
      "TypeORM",
      "PostgreSQL driver"
    ],
    "deprecated_packages": [
      "Manifest V2 APIs (migrating to V3)"
    ],
    "version_constraints": [
      "React >=18.0.0",
      "TypeScript >=5.0 <6.0",
      "Webpack >=5.0.0",
      "Jest >=29",
      "Cypress >=12",
      "TanStack Table 8.x",
      "Chrome/Firefox compatibility",
      "Manifest V3 required for Chrome",
      "Node.js 16+"
    ],
    "internal_packages": [
      "Common/utils",
      "storage/recording-store",
      "builders/selector",
      "types (TypeScript definitions)",
      "components (UI)",
      "hooks",
      "Popup",
      "Content",
      "services",
      "store",
      "controllers",
      "repositories",
      "entities"
    ]
  },
  "current_challenges": {
    "technical_debt": [
      "Non-modular build scripts",
      "Limited file upload capture support",
      "Manifest V3 migration required",
      "Support for multiple test frameworks needs improvement",
      "Use of any in typing",
      "Lack of robust error handling",
      "Complex state management (consider context API or external state management)",
      "No memoization for unnecessary re-renders",
      "Hardcoded configuration for localhost/ports",
      "Legacy modules need refactoring to full TypeScript",
      "No virtualized tables for large lists",
      "Basic error handling in some modules",
      "Limited mobile responsiveness",
      "Local storage quota limitations",
      "Legacy modules to refactor for Clean Architecture"
    ],
    "known_issues": [
      "Potential incompatibility of react-hot-loader with React 18+",
      "Event capture limitations in iframes and hover contexts",
      "Possible race conditions in state updates",
      "Silent failures in async calls",
      "Mouse events affected by overlays",
      "External style dependencies may cause visual issues",
      "TypeScript typing ignored in shadowRoot",
      "Loss of high-frequency events",
      "Timeouts may cause intermittent failures in slow environments",
      "ID collision risk under high concurrency",
      "Data loss risk if flushPendingSaves fails",
      "Intermittent timeouts in external calls",
      "No explicit error handling in async calls"
    ],
    "performance_bottlenecks": [
      "Slow build in large projects",
      "High CPU usage in long recordings",
      "Latency in browser API communication",
      "Input/wheel events can generate high load",
      "Large action list rendering impacts UI",
      "Combinatorial selector generation and validation",
      "Polling for retrySelector may impact performance if maxRetries is high",
      "No virtualized tables for large lists",
      "Blocking synchronous operations avoided, but large history may slow down",
      "Complex SQL queries without proper indexing"
    ],
    "migration_status": [
      "Ongoing migration to Manifest V3 (hybrid V2/V3 support)",
      "Old data migration to new store implemented",
      "TypeScript 5.0 migration completed",
      "No pending migrations"
    ]
  },
  "team_preferences": {
    "code_review_focus": [
      "Preserve hot reload functionality",
      "Code style consistency",
      "Performance",
      "Maintainability",
      "Test coverage",
      "Strong typing",
      "Security in permissions",
      "Clear separation of responsibilities",
      "Visual consistency",
      "Accessibility",
      "Error handling",
      "Correct use of hooks",
      "Correct persistence",
      "Cross-browser compatibility",
      "Correct asset import",
      "Consistent state and synchronization",
      "No side effects",
      "Correct async/await usage",
      "Anonymity maintenance",
      "Correct use of waits",
      "Type validation and immutability",
      "Test coverage for timestamp cases",
      "Correct use of mocks",
      "Clarity in tests and state handling",
      "Adherence to React/TS standards",
      "Security, readability, and test coverage"
    ],
    "documentation_requirements": [
      "Document config changes",
      "Clear documentation for internal APIs and extension usage",
      "JSDoc for public functions and components",
      "Clear documentation for configuration and tests",
      "Inline comments in Portuguese for context",
      "Document hooks and side effects",
      "Document public functions and complex flows",
      "Document type definitions and modules",
      "Document build scripts",
      "Document public APIs with JSDoc"
    ],
    "communication_style": [
      "Clear and concise comments",
      "Objective and explanatory comments (Portuguese for context)",
      "Use of PRs for discussion",
      "Objective and technical comments (English for technical terms)",
      "Detailed PR descriptions",
      "Small, focused PRs",
      "Use of PR templates",
      "Emojis in logs for readability"
    ],
    "decision_log": [
      "Adopted react-app preset for simplicity",
      "Enabled react-hot-loader for dev experience",
      "Chose TypeScript for type safety",
      "Multi-platform support (Chrome and Firefox)",
      "ts-jest for TypeScript testing",
      "Support for multiple manifest versions for cross-browser compatibility",
      "Maintain Manifest V2 until full V3 migration",
      "Adopted Manifest V3 for security and performance",
      "Local storage for shared state",
      "Separation of utilities and recording logic",
      "Message-based integration between webapp and extension",
      "SVG for scalable icons",
      "Functional components for UI",
      "Static asset import",
      "Fixed ScriptType as Cypress for compatibility",
      "Centralized persistence via RecordingService",
      "Adapter Pattern for API compatibility",
      "Functional React components for performance and simplicity",
      "react-syntax-highlighter for UI",
      "Throttle for mousemove event optimization",
      "Separation of action visualization and code",
      "Shadow DOM for isolation",
      "Global exposure for external control",
      "Debounce for resize events",
      "Event filtering for performance",
      "React hooks for state",
      "Google Analytics for event collection",
      "Anonymous client ID",
      "HMR for faster development",
      "Penalties for selector ordering",
      "Fallbacks for uniqueness",
      "Builder Pattern for script generation",
      "Avoid invalid IDs for selectors",
      "Prioritize test/accessibility attributes",
      "Module declarations for static assets",
      "Alias for Chrome/Firefox compatibility",
      "Enums for constant values",
      "Strict mode for production safety",
      "Removed chromeExtensionBoilerplate to avoid build conflicts",
      "HotModuleReplacementPlugin for dev speed",
      "TerserPlugin without mangling for easier debugging",
      "Separation of migration and timestamp validation for clarity",
      "Playwright for Chrome extension E2E tests",
      "TanStack Table for flexibility and performance",
      "Service Facade for storage abstraction",
      "Cypress code generation integration",
      "Singleton pattern for store",
      "Debounce for save optimization",
      "Repository pattern for data decoupling",
      "NestJS for standardization",
      "OAuth2 for authentication"
    ]
  },
  "api_specifications": {
    "api_style": [
      "REST for external communication",
      "Event-driven via Chrome extension messaging",
      "Message Passing API via postMessage and chrome.runtime",
      "WebExtensions API"
    ],
    "versioning_strategy": [
      "Semantic versioning for external APIs",
      "Manifest version via MANIFEST_VERSION environment variable",
      "URL-based versioning (/v1/, /v2/)",
      "Compatibility with manifest v2 and v3"
    ],
    "response_formats": [
      "JSON",
      "Simple JSON objects for messages and storage",
      "application/json",
      "Promises and standard Chrome API callbacks"
    ],
    "rate_limiting": [
      "Limits imposed by deploysentinel.com",
      "Internal debounce to limit recording frequency",
      "1000 requests per minute per user"
    ]
  },
  "deployment_context": {
    "environments": [
      "development",
      "staging",
      "production",
      "localhost",
      "DeploySentinel (*.deploysentinel.com)",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Dev, Staging, Production via Chrome Extension"
    ],
    "deployment_method": [
      "CI/CD pipelines",
      "Chrome Web Store",
      "Firefox Add-ons Marketplace",
      "Static hosting",
      "Docker",
      "Kubernetes",
      "WebExtension packaging",
      "Manual sideload for local development"
    ],
    "environment_variables": [
      "MANIFEST_VERSION",
      "NODE_ENV",
      "PORT",
      "ASSET_PATH",
      "CHROME_EXTENSION_ID",
      "API_KEYS",
      "DATABASE_URL",
      "REDIS_URL",
      "JWT_SECRET",
      "STRIPE_API_KEY",
      "AWS_S3_BUCKET"
    ],
    "infrastructure_constraints": [
      "Browser extension API limitations",
      "Separate builds required for Chrome and Firefox",
      "Manifest V3 required for Chrome",
      "Chrome/Firefox API permission restrictions",
      "chrome.storage.local storage limit (~5MB)",
      "Shadow DOM support required",
      "Node.js environment for local development",
      "TLS required for production",
      "Memory limit per container: 512MB",
      "Max 100 simultaneous DB connections"
    ]
  },
  "lastCommitHash": "b7e87aea04df22a0a6ba0cd9f5fcf6d63d30b8f8"
}
